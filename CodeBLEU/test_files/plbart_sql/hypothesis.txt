SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
,,,,,,,,,,,,,,,,,,
SELECT SUM(CASE WHEN @date = dateadd(day, 1, dateadd(day
SELECT DATEDIFF(MINUTE, DATEADD(MINUTE, DATEDIFF(MINUTE
var query = from c in context.Categories where c.Categories.Contains(c.
SELECT a.id, a.name, a.email, a.email, a
SELECT CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
WHERE ( ( ( ( ( ( ( ( ( ( ) ) ) ) ) ) )
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
..................
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
SELECT * FROM table1 UNION ALL SELECT * FROM table2
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT a.id, a.name, a.address, a.address, a
SELECT AVG(value) FROM table WHERE value = (SELECT AVG(value)
SELECT * FROM table1 WHERE (column1 LIKE 'A%' OR column1 LIKE
SELECT DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
SELECT * FROM Reporting.Reporting.Reporting.Reporting.Reporting.
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
,,,,,,,,,,,,,,,,,,
SELECT a.id, a.name, a.price, a.price, a
UPDATE a SET a.b = b.b FROM a WHERE a.b IS NULL
SELECT * FROM users WHERE user_id IN (SELECT user_id FROM users WHERE user
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT AVG(value) FROM ( SELECT AVG(value) AS value FROM table
SELECT * FROM posts ORDER BY COUNT(tag_id) DESC LIMIT 10
CREATE TABLE [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
SELECT a.id, a.name, a.price, a.price, a
select t1.id, t1.name, t2.name, t3.name, t
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT DISTINCT a.id, a.name, a.address, a.address,
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
Dim dt As DataTable = new DataTable() dt.Load(your_data_file_
SELECT a.id, a.name, a.address, a.phone, a
CREATE VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW
CREATE TABLE A ( A_ID INT, B_ID INT, C_ID INT
purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch
SELECT * FROM ( SELECT parent_id, child_id, child_id, child
DELETE FROM deleted WHERE NOT EXISTS (SELECT 1 FROM deleted WHERE deleted.deleted_id =
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
,,,,,,,,,,,,,,,,,,
SELECT SUM(CASE WHEN (SELECT COUNT(*) FROM table1 t1 WHERE t1.
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT a.id, a.name, a.email, a.email, a
..................
SELECT * FROM table1 WHERE (@status = 'active' AND (@status =
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM table WHERE (@user LIKE '%' OR @user LIKE '%' OR
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT MIN(value) FROM ( SELECT MIN(value) AS value FROM table1 GROUP
CREATE TABLE new_new_new_new_new_new_new_new_
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM table WHERE price = (SELECT price FROM table WHERE price = '23')
SELECT * FROM sys.columns WHERE name = 'MyTable'
..................
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
MERGE INTO table1 USING table2 ON table1 WHEN MATCHED THEN UPDATE SET table
SELECT * FROM table WHERE (@@search ='search' OR @search = '
SELECT array_agg(array_agg(array_agg(array_agg(array
anyanyanyanyanyanyanyanyanyanyanyanyanyanyanyanyanyany
SELECT DATEPART(MONTH, [Date]) AS [Month], SUM(CASE WHEN [
SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable WHERE name='John
,,,,,,,,,,,,,,,,,,
<- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <-
SELECT * FROM table WHERE SUBSTR(column,1,3) LIKE '%' + SUBSTR
postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql
SELECT * FROM (SELECT * FROM table WHERE (column1 = 'A' AND column
= = = = = = = = = = = = = = = = = =
SELECT * FROM MyTable WHERE MyColumn = @MyColumn AND MyColumn <> @
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT * FROM ( SELECT * FROM mytable WHERE mycolumn IN ('A', 'B
..................
SELECT * FROM mytable ORDER BY DATE(date_time) DESC, DATE(date
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY item ORDER
UPDATE [dbo].[tbl_test] SET [dbo].[tbl_
SELECT message FROM messages WHERE message LIKE '%' + @message + '%'
SELECT * FROM (SELECT * FROM your_table) t1 WHERE t1.id =
SELECT COUNT FROM A WHERE NOT EXISTS (SELECT 1 FROM B WHERE A.A_A
INSERT INTO new_table (id, name, email, email, email, email,
replace(replace(replace(replace(replace(replace(replace(replace(replace(
..................
SELECT * FROM table WHERE MATCH(word) AGAINST ('*' IN BOOLEAN MODE
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( ( (
ALTER TABLE [dbo].[YourTable] ADD [YourColumn] DATETIME NOT NULL
django.db.models.Model.Model.Model.Model.Model.Model.
SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT a.id, a.name, a.email, a.email, a
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM (SELECT * FROM table WHERE name = 'John' AND type = '
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
= = = = = = = = = = = = = = = = = =
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
CREATE TABLE my_table ( my_json text, my_column text, my_
netnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnet
SELECT * FROM ( SELECT parent_id, child_id, child_id, child
SELECT * FROM your_table WHERE your_column ='' AND your_column =
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT [Group], [Group], [Group], [Group], [Group], [Group
..,,,,,,,,,,,,,,,,
INSERT INTO A (id, name, email, phone, phone, phone, phone,
UPDATE dbo.YourTable SET YourColumn = YourColumn WHERE YourColumn IS NULL
SELECT COUNT(DISTINCT [user_id]) AS NumUsers, COUNT(DISTINCT
CREATE TEMPORARY TABLE tmp_table (id INTEGER, name TEXT, data TEXT,
CREATE FUNCTION dbo.GetAllCustomers (@CustomerId int) RETURNS
..................
..................
= = = = = = = = = = = = = = = = = =
REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
UPDATE a SET a.a_id = a.a_id FROM a LEFT JOIN
GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA
SELECT DISTINCT a.id, a.name, a.price, a.price,
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [Date]
((((((((((((((((((
..................
INSERT INTO new_table SELECT * FROM old_table
FOREIGN FOREIGN FOREIGN(id) REFERENCE(id)
release release release release release release release release release release release release release release release release release release
SELECT CAST(TIMESTAMP AS TIMESTAMP) FROM TABLE1
SELECT DISTINCT a.id FROM a INNER JOIN b ON a.id = b.id
SELECT a.id, a.name, a.address, a.address, a
$this->db->select('id'); $this->db->group('id');
SELECT a.id, a.name, a.price, a.price, a
SELECT COUNT(DISTINCT name) FROM your_table GROUP BY name ORDER BY COUNT(
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM table WHERE DATEDIFF(MONTH, DATEADD(MONTH, DATEDIFF(
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name IN ('a',
1. 1. 2. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3.
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
utf8 encoding utf8 encoding utf8 encoding utf8 encoding utf8 encoding utf8 encoding
SELECT * FROM table WHERE (column1 IN ('A', 'B', 'C',
SELECT * FROM Table1 WHERE NOT EXISTS (SELECT 1 FROM Table2 WHERE Table1.Column
SELECT * FROM (SELECT * FROM table WHERE id = @id) x
..................
::::::::::::::::::
SELECT MAX(date_time_time_time_time_time_time) FROM
..................
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
CREATE TABLE [dbo].[MyTable] ( [ID] INT NOT NULL PRIMARY
NS NS NS NS NS NS NS NS NS NS NS NS NS NS NS NS NS NS
UPDATE d SET d.d = d.d FROM d JOIN d.d d ON
SELECT * FROM ( SELECT * FROM Table1 WHERE [Date] >= DATEADD(day
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM tbl_a WHERE NOT EXISTS (SELECT 1 FROM tbl_b WHERE tbl
..................
SELECT * FROM ( SELECT * FROM [dbo].[Table] WHERE [Column]
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT CAST(CAST(CAST(CAST(DATEPART(hh,[Date]) AS
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM mytable WHERE id = :id AND last_update
SELECT * FROM table1 WHERE (@param = 'value' OR @param = '
SELECT @@ROWCOUNT = @ROWCOUNT + 1 FROM (SELECT @ROWCOUNT :=
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM Table1 WHERE ID = @ID
SELECT * FROM Table1 WHERE @date = @date AND @date = DATEADD(
SELECT SUBSTRING(col,1,3) AS col1, SUBSTRING(col,1,3)
..................
CREATE TABLE my_table ( my_date DATE DEFAULT CURRENT_DATE, my_date
------------------
WHERE (@@param1 = 'Y' AND @param2 = 'N'
hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate
INSERT INTO table_name (timestamp, name, date) SELECT DATEADD(DAY,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT DISTINCT FROM FROM FROM FROM WHERE NOT EXISTS (SELECT 1 FROM FROM FROM WHERE WHERE WHERE
UPDATE a SET a.a = a.b FROM a WHERE a.a = a
SELECT * FROM a WHERE NOT EXISTS (SELECT 1 FROM b WHERE b.a = a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
..................
CASE WHEN (@@rowcountcountcountcountcountcountcountcountcountcountcountcount
..................
..................
SELECT CASE WHEN (CASE WHEN @var = 'A' THEN @var ELSE @var
::::::::::::::::::
SELECT * FROM table WHERE DATEPART(MONTH, [Date]) = DATEPART(MONTH
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
DELETE FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id = table
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
use use use use use use use use use use use use use use use use use use
android.view.view.view.view.view.view.view.view.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM mytable WHERE (@@ROWCOUNT = 0) AND (@@ROW
..................
SELECT * FROM table WHERE DATE(date) = DATE(date)
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( ORDER ) ) ) ) )
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT a.id, a.name, a.email, a.phone, a
SELECT a.id, a.name, a.email, a.phone, a
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
INSERT INTO new_table (id, name, address, city, state, zip,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
declare @sql varchar(max) set @sql = 'SELECT * FROM'+ @
DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE
SELECT * FROM [dbo].[Table] WHERE [Geo] = @Geo AND
@var ='' @var ='' @var ='' @var =
SELECT name, SUM(value) FROM table GROUP BY name
..................
SELECT COUNT(DISTINCT user_id) FROM users WHERE user_id = $user
SELECT * FROM table1 WHERE (column1 = 'A' AND column2 = '
CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
SELECT COUNT FROM ORDER WHERE DESC LIMIT 100;
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
UPDATE your_table SET your_column = your_column +'' + your_
SELECT * FROM ( SELECT * FROM my_table WHERE my_column IN ('a','
// // // // // // // // // // // // // // // // // //
SELECT * FROM table WHERE (user_id = 1 AND user_id = 1) OR
SELECT a.id, a.name, a.address, a.city, a
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY

SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
ALTER TABLE [dbo] ADD CONSTRAINT [PK_PK_PK_PK_PK
SELECT COUNT(id) FROM (SELECT id FROM mytable) x GROUP BY x ORDER
SELECT DISTINCT t1.id, t1.name, t1.date, t1.time FROM
..................
SELECT SUM(CASE WHEN type='type1' THEN value ELSE 0 END) type1, SUM
SELECT SUM(CASE WHEN a.value = 'A' THEN a.value ELSE 0
SELECT job_name FROM job_name WHERE job_name = 'job_name'
SELECT * FROM ( SELECT * FROM table1 WHERE key = 'A' AND value =
SELECT SUM(mark) FROM (SELECT SUM(mark) FROM table1) t1 GROUP
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT DATEADD(YEAR, DATEDIFF(YEAR, DATEADD(YEAR, DATEDIFF
SELECT COUNT(DISTINCT c.id) FROM relations c JOIN relations_relationships rel
SELECT DISTINCT a.id, a.name, a.email, a.email FROM
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
ALTER INDEX ON_MY_MY_MY_MY_MY_MY_MY_
..................
SELECT * FROM TABLE WHERE (@ROWROWROWROWROWROWROWROWROWROWROW
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM my_table WHERE array_id IN (ARRAY[1,
var _GetQuery = from p in context.Query<Query<Query<Query<
ALTER TABLE [dbo] ADD CONSTRAINT [dbo] CHECK (([([([([
..................
SELECT DISTINCT DISTINCT DISTINCT DISTINCT FROM your_table_name_alias_alias_alias_
UPDATE [dbo].[tbl_replace_ws_ws_ws_ws_
SELECT * FROM ( SELECT * FROM table WHERE id IN (1,3) UNION SELECT * FROM
SELECT * FROM table WHERE (column1 = 'value' OR column1 = 'value
SELECT * FROM [dbo].[tbl_a_b] UNION ALL SELECT
SELECT * FROM ( SELECT * FROM @xml.nodes('/xml/data/data/
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM table WHERE id = 1 ORDER BY id DESC LIMIT 20
SELECT SUM(value) FROM ( SELECT value, value2 = value FROM table1 UN
SELECT * FROM log_table WHERE DATEDIFF(d, DATEADD(d, DATE
SELECT TOP 1 * FROM (SELECT TOP 1 * FROM (SELECT TOP 1 * FROM (
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM sys.triggers WHERE name = 'MyTrigger'
INSERT INTO [dbo].[MyTable] ( [Column1], [Column2], [
SELECT * FROM table1 WHERE hash1 IN (SELECT hash2 FROM table2 WHERE table
COPY b.b FROM b.b TO c;
MATCH(name) AGAINST(''name' IN BOOLEAN MODE) MATCH(name
$aggregate([{{{{{{{{{{{{{{{
netnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnet
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Name
SELECT MAX(timestamp) FROM ( SELECT id, timestamp FROM table WHERE timestamp <= (SELECT
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT MONTH(Booking.BookingDate) AS Month, SUM(Booking.BookingTotal)
SELECT u.user_id, u.username, u.email, u.username
SELECT COUNT(DISTINCT table_name) FROM information_schema.columns WHERE table_
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
SELECT * FROM table WHERE date_created >= DATEADD(MINUTE, DATEDIFF(
CREATE TRIGGER AFTER INSERT ON AFTER INSERT AS BEGIN INSERT INTO NEW NEW NEW NEW NEW NEW
SELECT * FROM Table1 WHERE DATEPART(MONTH,Date) = DATEPART(YEAR
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
..................
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
CREATE PROCEDURE [dbo].[GetMyProc] @MyParam nvarchar
..................
SELECT * FROM table WHERE (@param1 = 'value1' AND @param2 =
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT a.id, a.name, a.address, a.phone, a
SELECT COUNT(DISTINCT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUB
SELECT [Date], [Group], SUM(CASE WHEN [Date] = 'A'
CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT COUNT(DISTINCT [Group]) AS [Group], [Group], [Group],

CREATE TABLE attachments ( attachments_id INT IDENTITY(1,1), attachments_url VARCHAR(255)
SELECT SUM(CASE WHEN WHEN THEN ELSE END) FROM FROM FROM
DELETE FROM table WHERE id IN (SELECT id FROM table GROUP BY id HAVING COUNT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT SUM(CASE WHEN a.type = 'A' THEN 1 ELSE 0 END)
UPDATE SET._______________
------------------

SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT
INSERT INTO dbo.dbo.dbo.dbo.dbo.d
SELECT * FROM ( SELECT * FROM mytable WHERE id = (SELECT max(id)
UPDATE d SET d.d = d.d FROM d d WHERE d.d =
SELECT * FROM table1 WHERE (@user = 'user1' AND @user = '
UPDATE users SET user_id = users.user_id FROM users INNER JOIN users_
update.name = update.name
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
SELECT MIN(date_time_time_time_time_time) FROM your_
DATEADD(DAY, DATEDIFF(DAY, GETDATE()), GETDATE()))
UPDATE t SET t.value = COALESCE(t.value, t.
select * from ( select *, row_number() over (partition by id order by
SELECT * FROM table WHERE instr(col1, col2, col3, col4, col5, col
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT SUM(value) AS sum_value, SUM(value) AS sum_value
doctr: doctr: doctr: doctr: doctr: doctr:
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT COUNT(DISTINCT country_id) FROM countries WHERE country_id IN (SELECT
SELECT * FROM ( SELECT user_id, car_id, car_name, car
use use use use use use use use use use use use use use use use use use
SELECT * FROM table WHERE DATE(date) = DATE(date) AND DATE(date
SELECT * FROM mytable WHERE mycolumn ='somevalue'
,,,,,,,,,,,,,,,,,,
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
------------------
SELECT DISTINCT ON (id) id FROM table WHERE id IN (SELECT id FROM table WHERE
SELECT * FROM table1 WHERE (@user = 'user1' AND @user = '
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY Address ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(DISTINCT a.id) FROM a LEFT JOIN b ON a.id
SELECT * FROM ( SELECT id, name, email FROM users WHERE email = 'email@
UPDATE [dbo].[tbl_user_info] SET [user_info]
..................
SELECT CONVERT(VARCHAR(10), [Date], 101) AS [Date],
TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
UPDATE a SET a.id = a.id FROM a INNER JOIN b ON a.
WITH CTE_CURRENT_CURRENT_CURRENT_CURRENT_CURRENT_CURRENT_CURRENT_
..................
SELECT * FROM table WHERE name LIKE '%' + search_term + '%'
SELECT COUNT(customer_id) FROM customer_customer_customer_customer_customer_
SELECT SUM(CASE WHEN [Date] = 'Jan' THEN [Date] ELSE 0
SELECT ROUND(SUM(CASE WHEN type='A' THEN amount ELSE 0 END), 0)
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
GROUP BY GROUP BY GROUP BY GROUP BY GROUP HAVING COUNT(DISTINCT ID)
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM ( SELECT * FROM mytable WHERE id = @id ) x
SELECT SUBSTR(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.
INSERT INTO [dbo].[tbl_test] ( [id], [name],
SELECT a.id, a.name, a.address, a.address, a
SELECT TOP 3 score, score_score, score_score, score_score, score
UPDATE A SET A.A_ID = A.A_ID FROM A INNER JOIN
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
select * from room where room_id in (select room_id from room where room
SELECT * FROM follow WHERE follow.user_id = @user_id AND follow.
select count(distinct (case when seqnum = 1 then 1 else 0 end)) as
..................
public void bind(varvarvarvarvarvarvarvarvarvarvarvarvarvar
If(((((((((((((((((
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT DATEADD(MINUTE, DATEDIFF(MINUTE, 0, GETDATE()), 0)
SELECT * FROM table1 WHERE (@user_id = 1 AND (@user_
SELECT * FROM mytable WHERE @myvar = 1 AND myvar = @myvar
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 ) t1 WHERE t
SELECT MONTH(date) AS Month, SUM(value) AS Sum FROM table GROUP BY
SELECT DISTINCT t1.id, t1.name, t1.age FROM table1 t1
..................
SELECT FROM FROM WHERE NOT EXISTS ( ( ( ( ( ( ) ) ) ) ) )
use use use use use use use use use use use use use use use use use use
ALTER TABLE [dbo].[YourTable] REBUILD WITH REBUILD WITH NOWAIT
SELECT id, SUM(value) FROM ( SELECT id, value FROM mytable ) t
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
WHERE (@user_id = @user_id OR @user_id IS NULL
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT COUNT(DISTINCT a.id) AS count1, COUNT(DISTINCT b.
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2)
SELECT a.id, a.name, a.price, a.price * b
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM configuration WHERE (@user = 'user' AND @user = 'user
SELECT a.id, a.name, a.address, a.address, a
DATEADD(MINUTE, DATEDIFF(MINUTE, DATEADD(MINUTE,
couch couch couch couch couch couch couch couch couch couch couch couch couch couch couch couch couch couch

SELECT * FROM Customers WHERE CustomerID = @CustomerID AND CustomerName = @Customer
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
the the the the the the the the the the the the the the the the the the
SELECT COUNT(DISTINCT user_id) FROM users WHERE user_id = 1
GROUP_CONCAT(DISTINCT user_id) AS user_ids, GROUP_
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
WITH CTE AS ( SELECT ROW_NUMBER() OVER (ORDER BY ID) AS Row
SELECT * FROM ( SELECT distance FROM table WHERE distance <= (SELECT distance FROM table WHERE distance
SELECT * FROM mytable WHERE mycolumn LIKE 'A%'
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM mytable WHERE mycolumn LIKE '%' + @quote + '%'
SELECT CAST(DATEADD(hh, DATEDIFF(hh, 0, GETDATE()), GET
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
SELECT SUM(CASE WHEN a.id = b.id THEN a.value ELSE 0
SELECT CAST(DATEADD(day, DATEDIFF(day, DATEADD(day,
SELECT * FROM mytable WHERE mycolumn ='some_column'
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *

SELECT COUNT(DISTINCT a.id) AS num_a, COUNT(DISTINCT
SELECT a.id, a.name, a.email, a.phone, a
..................
SELECT * FROM ( SELECT id, (SELECT COUNT(*) FROM mytable WHERE id =
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT a.* FROM (SELECT a.*, ROW_NUMBER() OVER (PARTITION BY
SELECT SUM(CASE WHEN [Type] = 'A' THEN [Type] ELSE 0
SELECT CONVERT(ST_TO_S(ST_TO_S(ST
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku
heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku
SELECT * FROM t1 WHERE NOT EXISTS (SELECT 1 FROM t2 WHERE t1.id
SELECT a.id, a.name, a.email, a.email, a
table_id_id_id_id_id_id_id_id_
select regexp_replace(col1, '^[[:digit:]]') from (select
SELECT DISTINCT SUBSTRING(col,1,3) AS col1, SUBSTRING(col,1,
SELECT table_name FROM information_schema.tables WHERE table_name ='my_
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table1)
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID AND
SELECT * FROM logins WHERE DATEDIFF(MINUTE, logins.login_date
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY YEAR(
CREATE VIEW v_table1 AS SELECT * FROM table1 UNION ALL SELECT * FROM
INSERT INTO new_table (id, name, email, email, email, email,
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.id =
SELECT SUM(CASE WHEN status ='' THEN 1 ELSE 0 END) AS''
message message message message message message message message message message message message message message message message message message
SELECT * FROM table1 WHERE DATEDIFF(hh, GETDATE()) < 8
SELECT * FROM (SELECT * FROM your_table) t
SELECT SUBSTRING(col1, CHARINDEX(' ', col1) + 1, CHARINDEX(' ',
@@@@@@@@@@@@@@@@@@
SELECT CONVERT(varchar(255), CONVERT(varchar(255
SELECT SUM(CASE WHEN SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUB
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY id ORDER
SELECT XML.value('@name', 'varchar(100)') FROM @name.
SELECT * FROM ( SELECT * FROM #TempTable ) t WHERE t.id = @
::::::::::::::::::
SELECT DISTINCT a.id, a.name, a.email FROM (SELECT DISTINCT a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY Category ORDER
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
v_________________
SELECT SUM(CASE WHEN [Date] = 'A' THEN [Date] ELSE [
..................
Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.id, a.name, a.email, a.phone, a
SELECT CONCAT(CONCAT(a.name, a.surname), a.phone
SELECT MIN(date) AS minDate, MIN(date) AS minDate FROM (
If Not Exists(Select * from tbl_name where name = 'name') Then Msg
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM YourTable ORDER BY Date DESC )
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY YEAR(
SELECT a.id, a.name, a.address, a.phone, a

..................
SELECT * FROM table1 a INNER JOIN table2 b ON a.id = b.
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT * FROM table WHERE name LIKE '%' OR name LIKE '%' OR name
SELECT a.id, a.name, a.email, a.email, a
postgresql://postgresql.postgresql.postgresql.postgresql.postgresql_postgresql_postgresql_postgresql_
SELECT * FROM ( SELECT *, RAND() OVER (ORDER BY NEWID()) AS
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
WITH recursive AS ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT t1.id, t1.name, t1.value, t2.value FROM table
SELECT * FROM table ORDER BY timestamp DESC, timestamp DESC, timestamp DESC, timestamp DESC,
UPDATE table1 SET id = (SELECT id FROM table2 WHERE table1.id = table
SELECT [Column1], [Column2], [Column3], [Column4] FROM ( SELECT [Column
SELECT * FROM MyTable WHERE DATEDIFF(SECOND, @StartDate, @EndDate) >
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE table.id = table
SELECT DISTINCT t1.id, t1.name, t1.email FROM (SELECT t1.
db.users.aggregate([ { "$group": { "_id": "user_id
CREATE TABLE #TempTable ( ID INT IDENTITY(1,1) NOT NULL, Name VARCHAR(
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *

SELECT * FROM mytable WHERE MATCH(my_string, my_string) AGAIN
SELECT * FROM TABLE1 WHERE IN IN IN (SELECT IN FROM TABLE2 WHERE IN IN
ALTER TABLE [dbo].[tbl_change_date] ADD [date] DATE
SELECT * FROM table WHERE DATEPART(hh, [Date]) = DATEPART(hh
SELECT DATE_FORMAT(date_column, '%Y-%m') AS date_column
CREATE INDEX idx_myindex ON mytable (myindex) WHERE myindex IN (
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM Table1 WHERE DATEPART(hh, @datetimeoffset) = DATEPART
..................
SELECT MAX(id) FROM table WHERE id = (SELECT MAX(id) FROM table
public() { }
..................
SELECT a.id, a.name, a.address, a.address, a
SELECT category, COUNT(category) FROM ( SELECT category, COUNT(category) AS num
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT SUM(Address) FROM Address WHERE Address IS NULL OR Address IS NULL
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
WITH c AS ( SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUB
SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
GROUP_CONCAT(user_id)
SELECT COUNT(DISTINCT ID) FROM your_table GROUP BY ID
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT * FROM mytable ORDER BY id DESC ) t WHERE t.
SELECT id, MIN(id) FROM ( SELECT id, MIN(id) AS min
SELECT CASE WHEN (a.a_b_c_d_d_d_
SELECT * FROM table WHERE SUBSTR(column,1,3) LIKE '%[^0-9]%
SELECT a.id, a.name, a.address, a.address, a
SELECT a.id, a.name, a.address, a.address, a
MERGE INTO A_B_C_D_D_D_D_D
SELECT COUNT(date_time_time_time_time_time_time_time
select to_char(to_number(to_number(to_char(to
SELECT COUNT(DISTINCT id) FROM ( SELECT id, COUNT(DISTINCT name)
SELECT * FROM ( SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable
SQL: ORA-00-00: SQL: ORA-00-00: SQL: ORA-00-00:
SELECT * FROM ( SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable
DELETE FROM mytable WHERE NOT EXISTS (SELECT 1 FROM mytable WHERE mytable.id
,,,,,,,,,,,,,,,,,,
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
SELECT * FROM table WHERE REGEXP_LIKE(column, '^[[:digit
MATCH(user, user) AGAINST('user', user) MATCH(user,
DELETE FROM dbo.users WHERE NOT EXISTS (SELECT 1 FROM dbo.users WHERE
SELECT * FROM mytable WHERE DATE(mydate) = DATE(mydate)
SELECT friend_id FROM friend_friends WHERE friend_id IN (SELECT friend_id
SELECT MAX(id) FROM (SELECT id, max(id) max_id FROM
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
my my my my my my my my my my my my my my my my my my
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM orders WHERE order_id = (SELECT order_id FROM orders WHERE order
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM users u INNER JOIN profiles p ON u.user_id = p.
------------------
django.db.models.Model.Model.Model.Model.Model.Model.
WHERE (a.id = b.id AND a.type = 'A') OR
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
SELECT * FROM your_table ORDER BY NEW NEW NEW NEW NEW NEW NEW NEW NEW NEW
purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch
SELECT COUNT(DISTINCT id) FROM your_table GROUP BY id ORDER BY COUNT(
..................
SELECT DISTINCT p.name FROM people p JOIN people_people_people_people_people
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM mytable WHERE mycolumn IN ('A', 'B', 'C',
SELECT a.id, a.name, a.address, a.phone, a
::::::::::::::::::
INSERT INTO table (id, name, email, email, email, email, email,
[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [
SELECT a.id, a.name, a.address, a.phone, a
..................
SELECT CONVERT(varchar(10), CONVERT(varchar(10), CON
DELETE FROM table WHERE id IN (SELECT id FROM table WHERE id = 1)
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT COUNT(distinct customer_id) FROM customer_logins WHERE customer_id IN
SELECT a.id, a.name, a.address, a.city, a
SELECT CASE WHEN CHARINDEX(' ', @column) > 0 THEN SUBSTRING(@column,
SELECT CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
CREATE TRIGGER [dbo].[MyTable] ON [dbo].[My
..................
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT * FROM table1 WHERE (@user_id = @user_id AND @
SELECT * FROM news WHERE DATE_SUB(NOW(), INTERVAL 6 MONTH) = DATE_
SELECT TO_ID(to_hex(to_hex(to_hex(to
SELECT COUNT(DISTINCT (CASE WHEN col1 = 'A' THEN col1 END
SELECT * FROM table WHERE FIND_IN_SET('ABC', @param) >
SELECT COUNT(DISTINCT a.id) AS Count FROM (SELECT a.id,
SELECT * FROM table1 WHERE (@user = 'user1' AND @user = '
SELECT SUM(CASE WHEN DATE = DATE THEN 1 ELSE 0 END) FROM yourtable
SELECT DISTINCT name FROM table WHERE name IN (SELECT DISTINCT name FROM table GROUP BY name H
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name='John')
SELECT * FROM your_table WHERE your_column_column_column_column_column
..................
..................
SELECT SUM(CASE WHEN a.type = 'type' THEN a.amount ELSE a
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT * FROM mytable ORDER BY (CASE WHEN ISNULL(referenced_id,
or. or. or. or. or. or. or. or. or.
..................
WITH CTE AS ( SELECT *, ROW_NUMBER() OVER (PARTITION BY Parent
UPDATE table1 SET column1 = 'value1' WHERE table1.column1 = 'value
SELECT a.id, a.name, a.email, a.phone, a
..................
CREATE INDEX idx_index_name ON indexes (name, index_name) INCLUDE (
public void register(newnewnewnewnewnewnewnewnewnewnewnewnewnew
WHERE (@@search ='some' OR @search ='some' ) OR
SELECT * FROM table WHERE TO_DATE(date_column, 'YYYYMMDD')
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(user_id) FROM users WHERE user_id = 1 GROUP BY user
DATE DATE
SELECT a.id, a.name, a.address, a.city, a
..................
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT username, username, password, password FROM users WHERE username = 'username'
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
DELETE FROM FROM_UNDER_UNDER_UNDER_UNDER_UNDER
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
UPDATE dbo.YourTable SET dbo.YourColumn = dbo.YourColumn
use use use use use use use use use use use use use use use use use use
SELECT DISTINCT p.id, p.name, p.email FROM people p INNER JOIN
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM Table1 WHERE ID IN (SELECT ID FROM Table1)
SELECT u.user_id, u.user_name, u.page_name
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
select to_char(date_time, 'HH24') from dual; TO_
SELECT SUBSTRING(column, 1, CHARINDEX(' ', REVERSE(column)) -
SELECT * FROM ( SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PART
..................
DECLARE @sql NVARCHAR(MAX) SET @sql = 'SELECT '
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM table WHERE DATEPART(day, @date) = DATEPART(day
SELECT [Group], [Group], [Group], [Group], [Group], [Group
..................
..................
SELECT DATE, SUM, SUM, SUM OVER OVER OVER OVER OVER OVER OVER OVER OVER OVER
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.id =
SELECT DISTINCT t1.* FROM ( SELECT t1.* FROM table1 t1 WHERE t
SELECT a.id, a.name, a.address, a.city, a
DELETE FROM... WHERE... IN (SELECT... FROM... WHERE... IN... )
SELECT a.name FROM a LEFT JOIN b ON a.id = b.id
SELECT * FROM ( SELECT *, rank() over (order by date_time_time
DELETE FROM FROM WHERE NOT EXISTS(SELECT 1 FROM FROM FROM WHERE WHERE WHERE WHERE )
postgresql postgresql
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT a.id, a.name, a.address, a.phone, a
INSERT INTO table1 (id, name) SELECT id, name FROM table1 WHERE id
SELECT XML.value('@xml.value('@xml.value('@xml.
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT MIN(date_time_time_time_time_time_time) FROM
SELECT * FROM my_table WHERE my_column LIKE '%' + @search + '%
r r r r r r r r r r r r r r r r r r
..................
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
GROUP BY (CASE WHEN status ='' THEN 1 ELSE 0 END), (CASE WHEN
SELECT SUM(CASE WHEN a.type = 'A' THEN 1 ELSE 0 END)
v v v v v v v v v v v v v v v v v v
..................
SELECT SUM(CASE WHEN status = 'open' THEN 1 ELSE 0 END) Open,
,,,,,,,,,,,,,,,,,,
UPDATE [dbo].[tbl_test] SET [dbo].[tbl_
SELECT a.id, a.name, a.address, a.city, a
TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
SELECT CAST(DATEADD(day, DATEDIFF(day, DATEADD(day,
SELECT a.id, a.name, a.address, a.phone, a
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT * FROM a WHERE (a.a_a_a_a_a_
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE table.id = table
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT COUNT(DISTINCT c.id) FROM Categories c LEFT JOIN Categories_
SELECT SUM(CASE WHEN [Date] >= DATEADD(MONTH, DATEDIFF(MONTH
SELECT * FROM table WHERE position IN (SELECT position FROM table WHERE position <> 0 ORDER
..................
SELECT XML.value('@xml.value('@xml.value('@xml.
SELECT CASE WHEN @@ROWCOUNT = 0 THEN @ROWCOUNT ELSE @ROWCOUNT END
SELECT * FROM ( SELECT * FROM mytable WHERE parent_id = 1 UNION ALL
SELECT AVG(time) FROM ( SELECT AVG(time) AS avg FROM table
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
,,,,,,,,,,,,,,,,,,
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT DATEADD(MONTH, DATEADD(MONTH, DATEDIFF(MONTH, DATEADD
SELECT tag FROM tags WHERE tag IN ('tag1', 'tag2', 'tag3') GROUP
ALTER TABLE [dbo].[YourTable] DROP IDENTITY IDENTITY IDENTITY IDENT
CREATE TABLE `table_name` ( `name` VARCHAR(255) NOT NULL AUTO_
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
SELECT tag_id FROM tags WHERE tag_id IN (SELECT tag_id FROM tags
UPDATE [dbo].[MyTable] SET [dbo].[MyTable]
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
..................
sqlite-your-your-your-your-your-your-your-your-
SELECT a.id, a.name, a.address, a.address, a
the the the the the the the the the the the the the the the the the the
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
SELECT * FROM @xml.nodes('/root/name') AS T(N)
SELECT COUNT(DISTINCT MONTH(date_created)) FROM (SELECT DISTINCT MONTH(date
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = (SELECT MAX(ID)
SELECT XML.value('(text)[1]', 'varchar(max)') FROM
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.date
SELECT * FROM table WHERE DATEPART(MONTH, [Date]) = DATEPART(MONTH
SELECT * FROM my_table ORDER BY word ASC LIMIT 1;
,,,,,,,,,,,,,,,,,,
UPDATE a SET a.a_b_c_d = b.c_d
INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
SELECT * FROM your_table WHERE (your_column_namenamenamenamenamename
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT a.name, a.address, a.address, a.address, a
SELECT MONTH(Date(Date(Date(Date(Date(Date(Date(Date
SELECT CASE WHEN @prev_id = id THEN @prev_id ELSE @prev_
SELECT [Date], [Group], [Group], [Group], [Group], [Group
SELECT * FROM ( SELECT * FROM mytable ORDER BY (SELECT COUNT(*) FROM my
CREATE PROCEDURE [dbo].[usp_get_get_get_get
@@@@@@@@@@@@@@@@@@
SELECT ID, ROW_NUMBER() OVER (ORDER BY ID) AS seqnum FROM Your
UPDATE SET.value =.value WHERE.id = @id
purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch
ALTER TABLE [dbo].[YourTableName] ADD IDENTITY(IdentityColumn)
SELECT * FROM ( SELECT a.id, a.name, a.price, a
SELECT SUM(value) AS sum_value, SUM(value) AS sum_value
SELECT COUNT FROM FROM FROM FROM WHERE NOT EXISTS (SELECT 1 FROM FROM TO TO TO TO
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT price FROM ( SELECT price FROM table1 WHERE price < (SELECT price FROM table2
..................
=,,,,,,,,,,,,,,,,,
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM my_table WHERE url = 'http://' AND url NOT LIKE '
SELECT * FROM ( SELECT * FROM mytable WHERE mycolumn LIKE '%' + @param
::::::::::::::::::
SELECT CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
SELECT * FROM table1 WHERE (@name LIKE '%' OR @name LIKE '%'
SELECT a.id, a.name, a.price, a.price, a
RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE
DELETE FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.id = table.id
SELECT * FROM sys.procedures WHERE name = 'MyProcedureName' AND created
CREATE TABLE tags ( tag_id INTEGER PRIMARY KEY, tag_id INTEGER, tag_
UPDATE login SET login_id = (SELECT MAX(login_id) FROM login WHERE
WHERE (@@ROWCOUNT = 0 AND @ROWCOUNT = 1) OR (@ROW
SELECT * FROM ( SELECT * FROM Table1 WHERE Column1 = 'A' UNION
SELECT DISTINCT a.id, a.name, a.email, a.email FROM
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM MyTable WHERE MyColumn LIKE '%[0-9][0-9][0-9][0-9]
SELECT CONVERT(datetime, CONVERT(varchar(30), CONVER
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
..................
SELECT DATEADD(DAY, DATEADD(DAY, DATEADD(DAY, DATEADD
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT TOP 2 * FROM ( SELECT TOP 2 * FROM ( SELECT TOP 2 * FROM (
SELECT * FROM your_table WHERE your_column = 'your_column'
SELECT COUNT(DISTINCT a.id) AS num_of_accounts, COUNT(
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
UPDATE a SET a.b = b.c FROM a a WHERE a.c =
CREATE TABLE new_new_new_new_new_new_new_new_
SELECT StudentId, StudentName FROM Students WHERE StudentId IN (SELECT StudentId FROM
SELECT DATE_FORMAT(date_time, '%Y-%m') AS date_time
..................
SELECT a.id, a.name, a.address, a.phone, a

::::::::::::::::::
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE table.id = table
heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku heroku
SELECT [DATE], [DATE], [DATE], [DATE], [DATE], [DATE
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SQL:::::::::::::::::
UPDATE A SET A.B = B.B FROM A INNER JOIN B ON A.
INSERT INTO table1 (id, name, email, phone, phone, email, phone
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM ( SELECT * FROM table1 WHERE (@user = 'user1' AND
..................
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
INSERT INTO new_new_new_new_new_new_new_new_
<- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <-
CREATE TABLE t1 ( id INT NOT NULL PRIMARY KEY, t2 VARCHAR(50) NOT
ALTER DATABASE [dbo].[MyDB] RECONFIGURE [dbo].[
..................
def def def def def def def def def def def def def def def def def def
SELECT DATEDIFF(day, DATEDIFF(day, DATEADD(day, DATEDIFF
SELECT * FROM ( SELECT * FROM Table1 INNER JOIN Table2 ON Table1.Date =
SELECT CONVERT(varchar(50), CONVERT(varchar(50
do do do do do do do do do do do do222222
SELECT COUNT(DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT
SELECT * FROM mytable WHERE mycolumn LIKE '%[a-zA-Z0-9]
SELECT AVG(AVG(period_count)) FROM ( SELECT period_count,
DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE
..................
DELETE FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER BY
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [rank]
SELECT a.id, a.name, a.email, a.email, a
CREATE VIEW [dbo].[MyView] AS SELECT [Column], [Column],
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM (SELECT * FROM your_table) WHERE (@ROWCOUNT = 0)
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE table1.id
SELECT TOP 3 * FROM ( SELECT TOP 3 * FROM mytable ORDER BY id DESC )
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT * FROM @xml.nodes('/root/name') AS t
UPDATE A.A_ID A INNER JOIN B.B_ID B ON A.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT ROUND(CAST(ROUND(CAST(ROUND(CAST(CAST(CAST(CAST
SELECT DISTINCT c.id FROM c JOIN d ON d.id = c.id WHERE
select t.*, (select max(col1) from (select t.*, row_
UPDATE [dbo].[MyTable] SET [MyColumn] = CAST([My
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
SELECT SUBSTRING(col, 1, CHARINDEX(' ', col) - CHARINDEX(' ',
SELECT * FROM @xml.nodes('/root/name') AS t(c)
SELECT * FROM (SELECT * FROM your_table WHERE your_column = 'value'
SELECT SUM(value) / (SELECT value FROM table1 WHERE date = dateadd(
..................
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM your
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
,,,,,,,,,,,,,,,,,,

INSERT INTO [dbo].[tbl_user_info] (user_id,
SELECT * FROM tasks WHERE level = 0 AND EXISTS (SELECT 1 FROM tasks WHERE level =
GROUP BY SUM(quantity)
GROUP BY (CASE WHEN seq = 1 THEN THEN ELSE END), (CASE WHEN seq =
SELECT * FROM table1 a INNER JOIN table2 b ON a.id = b.
SELECT a.a, a.b, a.c, a.d, a
,,,,,,,,,,,,,,,,,,
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
SELECT SUM(R.value) FROM (SELECT value FROM table) AS A CRO
SELECT CONVERT(DATE, CONVERT(DATE, CONVERT(DATE
Private Sub DataGridView_CellDataBound(sender As DataGridViewCellDataBoundEventArgs

..................
SELECT SUM(CASE WHEN a.type = 'A' THEN a.amount ELSE 0
SELECT * FROM table WHERE (column1 IN ('A', 'B', 'C',
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
UPDATE [dbo].[tbl_user_update_data] SET [dbo
..................
201201201201201201201201201201201201201201201201201201
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE id = 'A')
SELECT COUNT(DISTINCT user_id) FROM users WHERE user_id IN (SELECT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SQL> select to_char(to_char(to_char(to_char
..................
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY ID) AS
..................
sqlplus -s /path/to/file.sql
SELECT t1.id, t1.name, t2.name FROM table1 t1 INNER
UPDATE a SET a.a_b_c_d_d_d_d
SELECT a.id, a.name, a.address, a.address, a
UPDATE [dbo].[tbl_test] SET [dbo].[tbl_
SELECT COUNT(DISTINCT userid) FROM table WHERE userid IN (SELECT userid FROM table WHERE
DELETE FROM FROM WHERE WHERE NOT
------------------
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Order
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT * FROM Table1 WHERE (@param1 = 'value1' OR @param1
SELECT DISTINCT t1.* FROM (SELECT DISTINCT t1.* FROM t1 WHERE t1.
=IIF(Fields![Date].Value = "Today", [Date].Value
SELECT a.id, a.name, a.price, a.price, a
products_id_id_id_id_id_id_id_id_
SELECT * FROM ( SELECT * FROM Table1 WHERE Column1 = 'A' UNION
SELECT COUNT FROM TABLE WHERE NOT EXISTS (SELECT 1 FROM TABLE WHERE TABLE.ID = TABLE
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.id = Table2.id AND
SELECT SUM(CASE WHEN WHEN = THEN ELSE END) FROM your_table
SELECT COUNT(DISTINCT [User ID]) AS NumUsers FROM (SELECT [User ID
SELECT * FROM ( SELECT * FROM table1 WHERE col1 = 'value1' UNION
SELECT a.id, a.name, a.email, a.email, a

..................
INSERT INTO table_name (id, name, email, password) SELECT id, name
SELECT * FROM mytable WHERE (@param1 = 'value1' AND @param2
SELECT * FROM ( SELECT * FROM mytable WHERE mycolumn ='some_column'
SELECT * FROM table WHERE (@param1 IS NULL OR @param1 = 'NULL
''''''''''''''''''
SELECT a.id, a.name, a.email, a.phone, a
SELECT DISTINCT a.id, a.name, a.address, a.address,
SELECT COUNT(DISTINCT dbgrid.table_name) FROM dbgrid
SELECT a.firstname, a.lastname, a.firstname, a.lastname, a
SELECT SUM(CASE WHEN [Date] >= DATEADD(MONTH, DATEDIFF(MONTH
SELECT CONVERT(CHAR(10), CONVERT(CHAR(10), CONVERT
..................
SELECT a.id, a.name, a.address, a.address, a
..................
ALTER TABLE [dbo].[YourTableName] ADD CONSTRAINT [YourTableName] CHECK([
..................
CREATE VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW VIEW
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM ( SELECT * FROM your_table WHERE col1 = 'A' AND
SELECT * FROM ( SELECT * FROM your_table WHERE id IN (SELECT id FROM your
SELECT * FROM ( SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 )
SELECT MAX(value) FROM table1 GROUP BY value ORDER BY value DESC LIMIT 1
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT SUM(amount) FROM ( SELECT SUM(amount) AS amount FROM table1 WHERE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT *, rank() over (partition by col1, col2, col
SELECT SUM(CASE WHEN [Date] = 'Jan' THEN [Date] ELSE [
,,,,,,,,,,,,,,,,,,
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT CONVERT(varchar(10), CONVERT(varchar(10), CON
select * from ( select *, row_number() over (partition by id order by
SELECT SUM(IF(a.id = 1, a.value, a.value)
W W W W W W W W W W W W W W W W W W
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT c.* FROM customers c JOIN products p ON c.id = p.customer_
SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID = Table2.ID AND

UPDATE [dbo].[MyTable] SET [MyColumn] = [MyColumn
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
DELETE FROM WHERE WHERE NOT
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM [dbo].[tbl_tbl_tbl_tbl_tbl_
CREATE UNIQUE INDEX IX_My_Index ON MyTable (My_Index) WHERE
,,,,,,,,,,,,,,,,,,
FOREIGN FOREIGN FOREIGN FOREIGN FOREIGN FOREIGN FOREIGN (id) REFERENCES (id)
SELECT a.id, a.name, a.email, a.email, a
DECLARE @sql nvarchar(max) SET @sql = 'SELECT * FROM
DECLARE @var1 INT DECLARE @var2 INT DECLARE @
SELECT CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT
SELECT * FROM your_table WHERE your_column =''
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *

..................

select max(value) from (select t.*, row_number() over (partition
INSERT INTO x (id, name, email, email, email, email, email,
NSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNS
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID AND
MATCH(user_id) AGAINST(user_id) MATCH(user_
UPDATE a SET a.b = b WHERE a.b = b.b
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM a_b_c_a_b_c_a_b
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID
SELECT OBJECT_NAME(OBJECT_ID) FROM INFORMATION_SCHEMA.PROCEDURE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery bigquery
SELECT DATEADD(mm, DATEDIFF(mm, GETDATE(), GETDATE()), GET
SELECT a.id, a.name, a.address, a.phone, a
201201201201201201201201201201201201201201201201201201
::::::::::::::::::
CREATE TABLE new_table ( id INT IDENTITY(1,1) PRIMARY KEY, name VARCHAR(
SELECT MAX(CASE WHEN [Date] = '01/01/2012' THEN [Date]
..................
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
UPDATE d SET d.d = d.d + d.d + d.d
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
select count(distinct(name)) from (select name, count(name) over (
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
DELETE FROM FROM_ WHERE WHERE NOT EXISTS(SELECT 1 FROM_ WHERE____
??????????????????
..................
SELECT CASE WHEN ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
SELECT * FROM mytable WHERE mycolumn LIKE '%[^0-9]%'
SELECT CASE WHEN bit1 = bit2 THEN bit1 WHEN bit1 = bit2 THEN
SELECT a.id FROM a WHERE NOT EXISTS (SELECT 1 FROM b WHERE a.id
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT COUNT(DISTINCT [Name]) AS NumOfNames FROM [dbo].[
SELECT * FROM table1 t1 LEFT JOIN table2 t2 ON t1.id =
SELECT DISTINCT t1.name, t2.name FROM table1 t1 JOIN table2 t
SELECT * FROM sys.dm_exec_requests WHERE name ='my_database'
SELECT * FROM table WHERE DATEPART(hh, [Date]) BETWEEN DATEADD(
::::::::::::::::::
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM sys.tables
SELECT COUNT(DISTINCT (CASE WHEN col1 = 'A' THEN 1 ELSE 0
SELECT DISTINCT a.id FROM table1 a INNER JOIN table2 b ON a.id
// // // // // // // // // // // // // // // // // //
..................
CREATE TABLE my_table ( col1 text, col2 text, col3 text,
SELECT * FROM entities WHERE EXISTS ( SELECT 1 FROM relations WHERE relations.id = entities.
UPDATE [dbo].[YourTable] SET Rank = @Rank + 1 WHERE Rank

SELECT SUM(CASE WHEN (A.value = 'A' THEN A.value ELSE
..................
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT product_id, product_name, product_price FROM products WHERE product_id
SELECT SUBINDEX(SUBINDEX(SUBINDEX(SUBINDEX(SUBINDEX(SUBINDEX
MATCH (user, user) AGAINST ('user' IN BOOLEAN MODE) MATCH (
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
SELECT * FROM (SELECT * FROM your_table WHERE your_column ='some_

SELECT CASE WHEN (CASE WHEN @type = 'A' THEN @type ELSE @type
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(DISTINCT id) FROM table1 WHERE id IN (SELECT id FROM table
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) AS

SELECT * FROM my_table;
SELECT a.id, a.name, a.address, a.address, a
oraclesql: oraclesql: oraclesql: oracles
SELECT * FROM TABLE WHERE NOT EXISTS (SELECT * FROM TABLE WHERE TABLE.ID = TABLE
..................
------------------
UPDATE a SET a.a_id = a.id FROM a INNER JOIN b ON
SELECT * FROM table WHERE DATEPART(MONTH, [Date]) = DATEPART(MONTH
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table WHERE time_diff(time_diff(time_diff(time
SELECT DATENAME(MONTH, DATEADD(MONTH, DATEDIFF(MONTH, DATEADD
DELETE FROM FROM FROM FROM FROM FROM TO TO TO TO TO TO TO TO TO TO TO
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name='John')
select col1, col2, col3, col4, col5, col6, col7, col8 from
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT CASE WHEN (value = 0) THEN 0 ELSE value END AS value FROM your_table
SELECT COUNT(DISTINCT a.id) FROM A INNER JOIN B ON A.id
LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT
SELECT MIN(date) FROM ( SELECT date, min(date) mindate FROM table
SELECT SUM(value) FROM table1 WHERE value IN (SELECT value FROM table2)
CREATE TABLE my_table ( col1 int, col2 int, col3 int,
If(((((((((((((((((
SELECT * FROM mytable WHERE NOT EXISTS (SELECT 1 FROM mytable WHERE mytable.
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table2.id =
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM your_table WHERE your_column ='some_column'
SELECT to_date(to_date(to_date(to_date(to
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT DATE
SELECT CONNECT BY LEVEL( CONNECT BY LEVEL( CONNECT BY LEVEL( CONNECT BY LEVEL( CONNECT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [Date]
..................
DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE
v v v v v v v v v v v v v v v v v v
tags tags tags tags tags tags tags tags tags tags tags tags tags tags tags tags tags tags


SELECT COUNT(DISTINCT [UserID]) FROM [User] WHERE [UserID]
SELECT * FROM table1 WHERE DATE(date) = DATE(NOW()) AND DATE(
CREATE TEMPORARY TABLE temp_temp_temp_temp (temp_temp_temp
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY table_
...,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM YourTable ORDER BY Date DESC )
SELECT SUM(CASE WHEN value = 'value1' THEN 1 ELSE 0 END) AS value
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
..................
SELECT AVG(SAL) FROM (SELECT AVG(SAL) AS AV
IF(@@rowcountcountcountcountcountcountcountcountcountcountcountcountcount
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
UPDATE a INNER JOIN b ON a.id = b.id SET a.name =
UPDATE [dbo].[tbl_Product] SET ProductName = 'Product' WHERE
SELECT * FROM my_table WHERE my_column LIKE''
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (name = '
ALTER TABLE [dbo].[YourTable] ADD [YourColumn] AS [Your
..................
SELECT * FROM A JOIN B ON A.id = B.id
SELECT DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
@ @ @ = = = = = = = = = = = = = = =
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table1)
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
..................
v v v v v v v v v v v v v v v v v v
------------------
SELECT * FROM table WHERE DATEDIFF(day, GETDATE()) < 3
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM Table WHERE DATEDIFF(MINUTE, GETDATE()) < 3
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM history WHERE date_time > DATE_SUB(NOW
[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [
postgresql://postgresql:::::::::::::::

= = = = = = = = = = = = = = = = = =
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
SELECT COUNT(DISTINCT id) FROM table1 WHERE id IN (SELECT id FROM table
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM my
public function-a-a-a-a-a-a-a-a
IF @@ROWCOUNT = 0 INSERT INTO [dbo].[tbl_test]
SELECT DATEPART(hh, [Date]) AS [Hour], DATEPART(mm,
@@@locallocallocallocallocallocallocallocallocallocallocallocallocallocallocal
select seqnum, rownum, rownum, rownum, rownum - rownum
SELECT @rowid = @rowid + 1 FROM ( SELECT @rowid = @
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT * FROM table1 WHERE (@user = 'user1' AND @user = '
SELECT * FROM ( SELECT * FROM your_table WHERE col1 = 'value' AND
SELECT MAX(value) FROM ( SELECT id, value FROM table1 UNION ALL SELECT
SELECT SUM(CASE WHEN [Type] = 'A' THEN [Type] ELSE [
SELECT SUM(DATEDIFF(day, DATEADD(day, DATEDIFF(day,
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
::::::::::::::::::
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT DATEPART(YEAR,
SELECT * FROM ( SELECT *, rank() OVER (PARTITION BY ID ORDER BY ID
DELETE FROM mytable WHERE id IN (SELECT id FROM mytable WHERE name = 'John
JOIN ON ON.id = JOIN.id_user = ON.id_user =
SELECT id, SUM(amount) OVER (PARTITION BY id ORDER BY date DESC)
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM table1 WHERE (@user_id = @user_id OR @
update set..______________
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) AS
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT * FROM sys.database_principals WHERE name = 'YourUserName'
SELECT COUNT(DISTINCT a.id) AS total_count, COUNT(DISTINCT
SELECT DATE, SUM(CASE WHEN DATE = DATE THEN 1 ELSE 0 END) FROM d
UPDATE table1 SET field1 = IF(field1 = 1, field1) WHERE field1
SELECT * FROM #temp1 WHERE id IN (SELECT id FROM #temp2)
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
..................
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2)
SELECT DATEDIFF(MINUTE, DATEADD(MINUTE, DATEDIFF(MINUTE
EXECUTE sp_executesql @sqlQuery = @sqlQuery
= = = = = = = = = = = = = = = = = =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
..................
CASE WHEN ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
SELECT SUM(CASE WHEN t.type = 'A' THEN t.amount ELSE 0
IF(@@row = @row + 1, @row := @row + 1)
..................
..,,,,,,,,,,,,,,,,
SELECT COUNT FROM WHERE WHERE
RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE
SELECT ROUND(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
UPDATE A SET A.B = B.C FROM A INNER JOIN B ON A.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY YEAR(
SELECT COUNT(DISTINCT id) FROM (SELECT id, COUNT(DISTINCT id)
SELECT * FROM TABLE1 UNION SELECT * FROM TABLE2
DELETE FROM FROM FROM FROM FROM TO TO TO TO TO TO TO TO TO TO TO TO
SELECT * FROM ( SELECT * FROM table WHERE col1 = 'A' AND col2
use use use use use use use use use use use use use use use use use use
SELECT * FROM ( SELECT * FROM table1 WHERE id = 3 UNION ALL SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY NEWID())
SELECT sequence_name, sequence_name, sequence_name, sequence_start, sequence

SELECT * FROM tbl_contact WHERE contact_id = 1
INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
var query = from from from from to where where where.To equals to.To into
Oracle 11.1.0.2.0.2.0.2.0.2.0.2.0.2.0.2.0.
SELECT user_id, AVG(score) FROM ( SELECT user_id, score
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
CREATE TABLE table_name ( col1 text, col2 text, col3 text,
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
select to_timestamp(date_to_timestamp(date_to_timestamp(date
CREATE TRIGGER ON_YOUR_TABLE AFTER INSERT AS BEGIN INSERT INTOYOUR_TABLE (
SELECT MAX(value) FROM table1 t1 INNER JOIN table2 t2 ON t
SELECT * FROM your_table WHERE your_column IN ('A','B','C','

SELECT a.id, a.name, a.address, a.address, a
SELECT COUNT(QuestionID) AS NumQuestions, COUNT(QuestionID) AS NumQuestions
SELECT COUNT(DISTINCT (CASE WHEN pos = 0 THEN pos ELSE 0 END)) pos
INSERT INTO A (id, name, email, phone, phone, phone, phone,
GROUP BY GROUP BY H H H H H H H H H H H H
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
SELECT COALESCE(NULL, 0) AS [Result] FROM Table1
SELECT parent.name FROM parent INNER JOIN child ON parent.name = child.name WHERE
SELECT SUM(CASE WHEN [Date] >= DATEADD(MONTH, DATEDIFF(MONTH
postgresql postgresql postgresql
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *

SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (column1 =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY ID) rn
SELECT CONVERT(varchar(10), CONVERT(varchar(10), CON
comcomcomcomcomcomcomcomcomcomcomcomcomcomcomcomcomcom
SELECT DATEADD(MINUTE, DATEDIFF(MINUTE, GETDATE()), GETDATE
pg_index_name('index_name')
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT SUM(CASE WHEN ISNULL(A_A_A_A_A_
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE id = 'A')
SELECT TOP(1) * FROM ( SELECT TOP(1) * FROM ( SELECT TOP(1) * FROM (
SELECT * FROM Table1 LEFT OUTER JOIN Table2 ON Table1.ID = Table2.ID
SELECT * FROM users WHERE EXISTS (SELECT 1 FROM users u WHERE u.user_id
CREATE TABLE A ( ID INT PRIMARY KEY, A_ID INT, B_ID INT
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT AVG(score) FROM (SELECT AVG(score)) AS x
SELECT * FROM table1 WHERE id IN (SELECT id FROM table1 WHERE name = '
::::::::::::::::::
INSERT INTO [dbo].[tbl_test] ([id], [name], [
$this->db->select('id, name, email, email, email, email
SELECT COUNT(DISTINCT [User ID]) AS CountOfUsers FROM (SELECT [User
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
CREATE TABLE dbo.tbl_tbl_tbl_tbl_tbl_tbl (tbl
FOREIGN FOREIGN FOREIGN FOREIGN FOREIGN FOREIGN FOREIGN (id) REFERENCE(id)
SELECT * FROM ( SELECT ROW_NUMBER() OVER (ORDER BY ID) AS RowNumber
SELECT * FROM ( SELECT * FROM YourTable WHERE DateDiff(d, GetDate()
update t set t.value = replace(t.value, t.value) where
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table1)
ALTER TABLE [dbo].[MyTable] DROP CONSTRAINT [dbo].[My
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT u.* FROM users u LEFT JOIN users_appointments ap ON u.user
SELECT * FROM ( SELECT *, (@user_id = user_id AND @
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [date]
SELECT a.id, a.name, a.address, a.city, a
$image = $this->getDoctrine()->getRepository('image')->
SELECT DISTINCT e.name FROM employee e LEFT JOIN employee_name e2 ON e.
..................
SELECT COUNT(CASE WHEN @user = 'user1' THEN 1 ELSE 0 END) AS
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM ( SELECT * FROM your_table WHERE col = 'value' ) t
SELECT a.id, a.name, a.address, a.address, a
INSERT INTO new_table (id, name, email, email, email, email,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Group
SELECT * FROM table ORDER BY (CASE WHEN field = 'value' THEN 1 ELSE 0
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
DELETE FROM a WHERE NOT EXISTS(SELECT 1 FROM b WHERE b.a_id =
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT a.id, a.name, a.price, a.price, a
------------------
..................
SELECT * FROM ( SELECT * FROM table1 WHERE (@user_id = @user
SELECT SUM(Quantity) FROM ( SELECT SUM(Quantity) AS Quantity FROM YourTable )
SELECT * FROM table1 t1 LEFT JOIN table2 t2 ON t1.id =
SELECT COUNT(DISTINCT a.id) AS num_of_a, COUNT(
SELECT a.id, a.name, a.email, a.email, a
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBCHAR(),),
MERGE INTO TABLE_X USING TABLE_X ON (X.X = X.
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
..................
..................
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
CREATE OR REPLACE PROCEDURE get_info(p_id IN NUMBER, p_
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT [Date], [Group], [Group], [Group], [Group], [Group
..................
SELECT a.id, a.name, a.address, a.address, a
..................
SELECT SUM(CASE WHEN WHEN THEN ELSE END)) FROM FROM
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT TOP 10 * FROM ( SELECT TOP 10 * FROM ( SELECT TOP 10 * FROM my
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date_created
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table WHERE id = table.id AND
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT COUNT(DISTINCT c.section_id) AS NumSubsections, COUNT(
::::::::::::::::::
SELECT * FROM [dbo].[MyFunction] WHERE [MyFunction] LIKE '%
UPDATE table SET field = REPLACE(field,'', '') WHERE field LIKE 'abc%
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT COUNT(DISTINCT t.type) AS type, t.type, t.
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id INNER
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM table WHERE FIND_IN_SET('1', @value) > 0
..................
UPDATE table1 SET value = value + 1 WHERE id = 1
=AGG(data, ',') WITHIN GROUP (ORDER BY data) AS data_
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
INSERT INTO A (ID, Name, Email, Email, Email, Email, Email,
SELECT * FROM ( SELECT * FROM [dbo].[tbl_test] WHERE [
CREATE PROCEDURE [dbo].[MyProc] AS BEGIN INSERT INTO [d
CREATE TABLE my_table ( my_col varchar2(3) ) INSERT my_table (
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(DISTINCT id) FROM mytable
SELECT MAX(value) FROM ( SELECT value FROM table1 WHERE value = 'value'
::::::::::::::::::
------------------
sqlite> sqlite> sqlite> sqlite> sqlite> sqlite> sqlite> sqlite> sqlite>
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
MERGE INTO TABLE_A_B_C_A_B_C_A
UPDATE a SET a.value = b.value FROM a INNER JOIN b ON a.
SELECT MIN(date) AS first_date, MAX(date) AS last_date
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT a.id, a.name, a.email, a.email, a
SELECT CASE WHEN (ISNULL(a.is_yes, 'no') = '
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT COUNT(DISTINCT t1.id) FROM t1 INNER JOIN t2 ON t
SELECT SUM(CASE WHEN a.type = 'A' THEN 1 ELSE 0 END)
SELECT * FROM table WHERE REGEXP_LIKE(column, '^^^^
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
......................................................
..................
SELECT * FROM ( SELECT * FROM table1 WHERE col1 = 'A' AND col
UPDATE t1 SET t1.id = t2.id FROM t1 INNER JOIN t2
CREATE TRIGGER dbo.tbl_tbl_tbl_tbl_tbl_tbl_
MERGE INTO my_table USING my_table ON my_table.my_column
TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT TOP 1 * FROM your_table ORDER BY NEW NEW NEW NEW NEW NEW NEW NEW
SELECT * FROM job WHERE city = 'NY' AND job_name = 'NY'
SELECT * FROM ( SELECT XMLColumn('myxml','myxml.mytable
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
select * from ( select * from table1 where column1 is not null and column2
SELECT * FROM table WHERE DATEPART(hh,date) = DATEPART(hh,
SELECT * FROM ( SELECT * FROM table1 WHERE date_from = DATEADD(day
SELECT * FROM table WHERE name NOT IN (SELECT name FROM table WHERE name = 'John
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT DATEADD(MONTH, DATEDIFF(MONTH, DATEADD(MONTH, DATEDIFF
SELECT AV(A(B(B(B(B(B(B(B
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
SELECT SUM(value) FROM (SELECT LIST(value)) x

SELECT * FROM Table1 INNER JOIN Table2 ON Table1.id = Table2.id AND
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Group
SELECT COUNT(DISTINCT id) FROM (SELECT DISTINCT id FROM table) t GROUP BY
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' OR
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM table WHERE (@user = 'user' AND user = 'user'
SELECT item_id, item_name, item_id, item_id, item
SELECT * FROM ( SELECT * FROM table1 WHERE (@user = 'user1' AND
CREATE TABLE [dbo].[MyTable] ( [ID] INT NOT NULL,
SELECT COUNT(DISTINCT (CASE WHEN type = 'type1' THEN type END)) type
WHERE (DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE(
@@@@@@@@@@@@@@@@@@
..................
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT DATE(DATE_SUB(CURRENT_DATE, INTERVAL 4 WEEK)) AS Week
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM feed WHERE id IN (SELECT max(id) FROM feed GROUP BY id
SELECT * FROM table WHERE col1 IS NULL OR col2 IS NULL OR col3 IS
IF EXISTS(SELECT FROM FROM)) THEN ELSE END
SELECT author, count(author) FROM (SELECT DISTINCT author, count(author) AS
SELECT SUM(DATEDIFF(day, DATEADD(day, DATEDIFF(day,
SELECT COUNT(DISTINCT a.id) FROM a LEFT JOIN b ON a.id
SELECT SUBSUBSUBSUBSUBSUBSUBSUBSUBSUBSUBSUBSUBSUBSUBSUBSUB
CREATE TABLE my_table ( my_column varchar2(3) );
SELECT SUM(CASE WHEN (SUM(CASE WHEN type='A' THEN amount ELSE 0
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
UPDATE temp_table SET temp_table.id = temp_table.id FROM temp
select * from ( select *, row_number() over (partition by id order by
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT * FROM ( SELECT * FROM table1 WHERE (@prev = 'Y' AND
INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl] (
..................
::::::::::::::::::
SELECT * FROM ( SELECT * FROM table WHERE (column1 = 'A' AND column
SELECT * FROM my_table WHERE my_column IN ('A','B','C','
SELECT * FROM MyTable WHERE DATEDIFF(day, @StartDate, @EndDate) <=
UPDATE A SET A.B = B.C FROM A A INNER JOIN B ON A
SELECT a.id, a.name, a.address, a.phone, a
::::::::::::::::::
SELECT a.id, a.name, a.address, a.phone, a
SELECT COUNT(DISTINCT p.id) AS num_of_products, p.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM table1 WHERE col1 = 'value' AND col
------------------
SELECT SUBSTRING(name,1,3) AS name, SUBSTRING(name,1,3)
SELECT name FROM (SELECT name, value FROM table WHERE value = 'value' ORDER BY
UPDATE SET SET = WHERE WHERE WHERE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT u.name, u.program FROM user u INNER JOIN program_program program ON
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE table.id = table
SELECT * FROM Table1 WHERE ID IN (SELECT ID FROM Table2 WHERE ID IN (
..................
SELECT * FROM users u LEFT JOIN users_groups ug ON (u.user_id
SELECT COUNT(DISTINCT tag_id) FROM table1 UNION ALL SELECT COUNT(
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
use use use use use use use use use use use use use use use use use use
SELECT * FROM ( SELECT * FROM table1 WHERE id = 'a' AND (name
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY sequence ORDER
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(DISTINCT user_id) FROM users WHERE user_id = 1 AND
SELECT SUM(CASE WHEN col1 = 'A' THEN col1 ELSE col2 END
SELECT a.id, a.name, a.address, a.address, a
SELECT SUM(CASE WHEN [Type] = 'A' THEN [Value] ELSE [
SELECT MIN(time)) FROM events WHERE time <= (SELECT MIN(time)) FROM events
SELECT * FROM table WHERE timestamp > ( SELECT MAX(timestamp) FROM table WHERE timestamp <
select id, date, flag, row_number() over (order by date) as
..................
SELECT DATEDIFF(MINUTE, start_time, end_time) AS minutes_
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.id =
Private Sub DataGridView_CellDataBound(sender As DataGridViewCellDataBound, e
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
UPDATE a SET a.a = a.a FROM a WHERE a.a = a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
------------------
select * from ( select *, row_number() over (partition by user order by
..................
SELECT COUNT(DISTINCT [Date]) AS CountOfDates FROM ( SELECT [Date]
UPDATE A SET A.A_ID = B.A_ID FROM A INNER JOIN
SELECT CASE WHEN ISNULL(a.id, a.id) = 1 THEN a
SELECT COUNT(DISTINCT g.name) AS g_count, COUNT(DISTINCT
SELECT COUNT(user_id) FROM users WHERE category = 'category' AND user_
CREATE VIEW v_table_name AS SELECT * FROM table_name UNION ALL SELECT
SELECT a.* FROM a LEFT OUTER JOIN ( SELECT a.* FROM a LEFT OUTER JOIN (
SELECT COUNT(DISTINCT a.id) AS num_of_a, COUNT(
SELECT * FROM ( SELECT * FROM mytable WHERE name ='my_name' )
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
IF @@ROWCOUNT = 0 AND (@ROWCOUNT = 1 OR @ROWCOUNT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
var query = from from from from from to where to.id equals to.id into
select t1.id, t1.name, t2.name, t2.name, t
..................
::::::::::::::::::
SELECT CASE WHEN ISNULL(col1, '') = 0 THEN 'NULL' ELSE col1
SELECT * FROM ( SELECT * FROM your_table WHERE col1 = 'A' AND
CREATE VIEW v_view_name AS SELECT * FROM table1 UNION ALL SELECT *
INSERT INTO table1 (id, name, address, address, address, address, address
SELECT a.id, a.name, a.address, a.phone, a
..................
USE master GO USE master GO USE master GO USE master GO USE master GO GO USE GO
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [Date])
SELECT a.id, a.name, a.address, a.address, a
SELECT MAX(date_of_the_the_the_the_the_the
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
(date(date(date(date(date(date(date(date(date
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT string_agg(string_agg(string_agg(string_agg(string
SELECT a.id, a.name, a.address, a.phone, a
SELECT SUM(CASE WHEN WHEN = THEN ELSE ELSE END) FROM FROM
User User User User User User User User User User User User User User User User User User
SELECT * FROM table1 WHERE (SELECT COUNT(*) FROM table2 WHERE table1.id
SELECT COUNT(DISTINCT id) FROM my_table WHERE id IN (SELECT id FROM
REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG
DELETE FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id = table
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT a.id, a.name, a.email FROM a INNER JOIN b ON
..................
..................
WITH tree_tree AS ( SELECT *, ROW_NUMBER() OVER (PARTITION BY
,,,,,,,,,,,,,,,,,,
..................
SELECT AVG(score) FROM ( SELECT AVG(score) AS score FROM table
SELECT * FROM mytable WHERE NOT EXISTS (SELECT 1 FROM mytable WHERE mytable.
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE table.id = table
MATCH(field) AGAINST(field) MATCH(field) AGAINST(
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE id ='some_
SELECT COUNT(DISTINCT a.id) FROM (SELECT id FROM table1 WHERE id
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 LIKE '%' OR column
SELECT TOP 1 * FROM (SELECT TOP 1 * FROM tbl_name ORDER BY ID DESC
public class MyEntity { public public public public public public public public public public public public public
MERGE INTO my_table USING my_table ON my_table.my_column
..................
SELECT COUNT(DISTINCT(name)) FROM mytable
SELECT * FROM ( SELECT *, (SELECT @rank := @rank + 1 ORDER BY
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT COUNT(DISTINCT a.id) FROM table1 a INNER JOIN table2 b
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT DATEADD(d, DATEDIFF(d, DATEADD(d, DATEDIFF
UPDATE dbo.YourTable SET dbo.YourColumn = dbo.YourColumn
SELECT * FROM MyTable ORDER BY CONVERT(datetime, [Date]) DESC,
SELECT DATEADD(YEAR, DATEDIFF(YEAR, DATEADD(YEAR, DATEDIFF
SELECT a.id, a.name, a.address, a.address, a
postgresql://postgresql.postgresql.org:5432/postgresql_postgresql_postgresql_postgresql_
SELECT SUM(column_sum) FROM table_name GROUP BY GROUP BY GROUP BY GROUP
SELECT MAX(value) FROM ( SELECT value FROM table1 ) t1 GROUP BY value
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
SELECT DATEPART(hh, [Date]) AS [Date], SUM(CASE WHEN [
var var var var var var var var var var var var var var var var var var
SELECT AVG(count(id)) FROM (SELECT id, count(id) as
SELECT [Group], [Group], [Group], [Group], [Group], [Group
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
def def def def def def def def def def def def def def def def def def
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM table WHERE DATE(date) = DATE(NOW())
CREATE VIEW [dbo].[MyView] AS SELECT * FROM [dbo].
SELECT COUNT(DISTINCT (CASE WHEN status = 'active' THEN 1 ELSE 0 END
SELECT COUNT(DISTINCT p.id) FROM products p INNER JOIN product_category_
IF(a.status = 'true') THEN ELSE END
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM ( SELECT ROW_NUMBER() OVER (PARTITION BY ID ORDER BY ID
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
m m m m m m m m m m m m m m m m m m
SQL:::: SQL::::::::::::
to to to to to to to to to to to to to to to to to to
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.id = Table2.id AND
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.id =
SELECT MIN(value) AS minvalue, MAX(value) AS maxvalue FROM table
INSERT INTO new_table (id, name, description) SELECT id, name, description
SELECT * FROM table WHERE @param = 'value1' AND @param = 'value2'
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
SELECT SUM(CASE WHEN a.type = 'A' THEN 1 ELSE 0 END)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT CONVERT(CHAR(8), CONVERT(CHAR(8), CONVERT
MATCH(a, b, c) AGAINST(a, b, c)
WHERE (@@search ='search' and (@search ='search' or
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT DISTINCT id FROM my_table WHERE NOT EXISTS (SELECT 1 FROM my_table WHERE
DELETE FROM FROM FROM FROM FROM WHERE NOT EXISTS ( SELECT 1 FROM FROM FROM TO TO TO
SELECT * FROM [dbo].[MyTable] WHERE [dbo].[My
UPDATE a SET a.a = a.b FROM a WHERE a.a = a
= = = = = = = = = = = = = = = = = =
SELECT COUNT(DISTINCT table_name) FROM table_name INNER JOIN table_name
public void register(String name) { hibernate.register(name); }
..................
NVL(NULL,), NVL(NULL,), NVL(NULL,),
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
SELECT COUNT(DISTINCT (SELECT NULL)) FROM (SELECT DISTINCT (SELECT NULL)) x
..,,,,,,,,,,,,,,,,
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE table1.id
SELECT a.id, a.name, a.email, a.phone, a
UPDATE SET = WHERE WHERE NOT
SELECT MIN(sequence) FROM ( SELECT sequence, MIN(sequence) sequence FROM ( SELECT
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( [ [
SELECT * FROM table ORDER BY (SELECT COUNT(*) FROM table) DESC, (SELECT
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
..................
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT SERVERPROPERTY('Server.Server.Client.Server.Client.Server.Client.
..................
INSERT INTO child_table (parent_id, child_id) SELECT parent_id
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag
UPDATE d SET d.d = d.d FROM d JOIN d d ON d.
SELECT * FROM ( SELECT @@ROWCOUNT = 0 ) x WHERE x.x =
public class MyDataContext { public MyDataContext() { } public MyDataContext()
public void................
POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST
SELECT * FROM table WHERE (column1 = 'value1' AND column2 = 'value
SELECT id, name, (SELECT COUNT(id) FROM (SELECT id, name,
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
UPDATE table1 SET column1 = CASE WHEN SUBSTR(column1,1,3) = '
max max max max max max max max max max max max max max max max max max
SQLCODE - - - - - - - - - - - - - - - -
SELECT TOP 1 @maxLength = MAX(LENGTH(Column)) FROM Table
SELECT * FROM table1 WHERE (@user = 'user1' AND @user = '
SELECT * FROM ( SELECT * FROM table1 WHERE (@user_id = @user
SELECT * FROM table1 WHERE (column1 = 'A' AND column2 = '
SELECT SUM(CASE WHEN a.date = '2011' THEN a.amount ELSE 0
SELECT a.id, a.name, a.address, a.address, a
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM table WHERE date_created >= DATEADD(day, DATEDIFF(day
SELECT SUM(CASE WHEN col1 = 'A' THEN 1 ELSE 0 END) A

WHERE (@@ROWCOUNT = 0) OR (@@ROWCOUNT = 1)
CREATE TABLE my_table ( id int, name varchar(max), constraint my_table
ALTER DATABASE [dbo] ADD CONSTRAINT [dbo] CHECK (name = 'test
SELECT CONVERT(CHAR(10), CONVERT(CHAR(10), CONVERT
CREATE PROCEDURE [dbo] @@@@@@@@@]
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
UPDATE A SET A.ID = B.ID FROM A INNER JOIN B ON A.
ALTER TABLE dbo.YourTable ALTER COLUMN dbo.YourColumn ADD COLUMN dbo
(convert(varchar(max(max(max(max(max(max(
SELECT u.name, u.email FROM users u INNER JOIN users u2 ON u
MATCH(text) AGAINST(text) AGAINST(text) MATCH(
SELECT SUM(CASE WHEN A.A = 1 THEN A.B ELSE A.B
SELECT * FROM ( SELECT * FROM table1 WHERE col1 = 'A' UNION
SELECT MIN(value) AS minvalue, MAX(value) AS maxvalue FROM table
SELECT SUM(CASE WHEN a.id = b.id THEN a.value ELSE 0
SELECT * FROM sys.tables WHERE name = 'MyTable'
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2)

SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
@@@@
SELECT * FROM mytable WHERE year(date) = year(date) AND month(
= = = = = = = = = = = = = = = = = =
SELECT SUM(Amount) AS Amount, SUM(Amount) AS Amount FROM ( SELECT SUM
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
UPDATE A SET A.A_ID = A.A_ID FROM A INNER JOIN
SELECT * FROM mytable WHERE UPPER(column) = UPPER('A')
..................
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM keywords WHERE keyword = 'keyword' AND keyword = 'keyword' AND keyword
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT CASE WHEN CHARINDEX(' ', CHARINDEX(' ', CHARINDEX(' ', CHARINDEX('
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Group
SELECT @row:=@row:=@row+1+1 AS row, @row
SELECT * FROM ( SELECT * FROM table1 WHERE (@user = 'user1' OR
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT * FROM ( SELECT * FROM sys.dm_exec_sessions WHERE session_id
..................

MERGE INTO your_table AS t1 ON t1 WHEN MATCH THEN WHEN t1
SELECT * FROM (SELECT * FROM your_table) WHERE NOT EXISTS (SELECT * FROM

LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT LIMIT
SELECT a.id, a.name, a.email, a.email, a
CREATE TABLE [dbo].[MyTable] ( [ID] INT IDENTITY(1,
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
,,,,,,,,,,,,,,,,,,
SELECT * FROM your_table WHERE your_column LIKE '%'
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT *
SELECT DATEDIFF(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
UPDATE table1 SET column1 = 'value1' WHERE table1.column1 = 'value
CREATE TABLE [dbo].[MyMyMyMyMyMyMyMyMyMyMy
SELECT * FROM ( SELECT * FROM history WHERE date_created >= DATEADD(day,
SELECT * FROM Person p WHERE EXISTS (SELECT 1 FROM Person_Hospital h WHERE h
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
$ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $
GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY
..................
SELECT * FROM table WHERE (@@search = 'Y' AND table.name LIKE
SELECT DISTINCT a.id, a.name, a.email, a.phone,
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY id ORDER
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM table WHERE (@@ROWCOUNT = 0) AND (@@ROWCOUNT
IF @@ = = = = = = = = = = = = = = =
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT PostCode, ZipCode, PostCode, ZipCode, PostCode, ZipCode
SELECT DISTINCT tag FROM tag_tag WHERE tag IN (SELECT tag FROM tag_tag WHERE
..................
SELECT word, COUNT(word) FROM ( SELECT word, COUNT(word) word_
..................
DELETE FROM table WHERE id IN (SELECT id FROM table WHERE value = 'value' AND
..................
..................
..., rating..., rating..., rating...
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
public void register(String name) { }
use use use use use use use use use use use use use use use use use use
REGEXP '^^^^^^^^^^^^^^^
SELECT a.id, a.name, a.email, a.email, a
sku sku sku sku sku sku sku sku sku sku sku sku sku sku sku sku sku sku
..................
SELECT CONVERT(datetime, CONVERT(varchar(30), CONVER
use $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $
SELECT p.name, p.name, p.score FROM players p JOIN (SELECT
var query = from a in from b in from a in from b in from a in
INSERT INTO new_table (id, name, email, phone, email, phone,
SELECT a.* FROM a LEFT OUTER JOIN b ON a.id = b.id AND
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT * FROM mytable WHERE REGEXP_LIKE(word, '^[[:
SELECT * FROM ( SELECT * FROM table1 WHERE id = (SELECT id FROM table1
DATEDIFF(CURRENT DATE, GETDATE())
ALTER TABLE [dbo].[YourTableName] ADD CONSTRAINT [dbo].[Your
SELECT a.id, a.name, a.address, a.phone, a
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
CREATE INDEX idx_date_time_time_time_time_time_time_
SELECT * FROM table WHERE date BETWEEN '2012-05-01' AND '2012-05-30' AND
SELECT SUBSTRING(field,1,3) FROM table
ALTER TABLE mytable ADD CONSTRAINT pk_mytable PRIMARY KEY (pk_mytable);
SELECT table_name, table_name, table_type, table_name, table
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
..................
SELECT MONTH(date_created) AS month, SUM(amount) AS amount FROM table
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM mytable WHERE MATCH(name, hit) AGAINST ('+search
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT * FROM table_name WHERE collation_name = 'collation_name'
SELECT * FROM ( SELECT * FROM Table1 WHERE ItemID IN (SELECT ItemID FROM
SELECT COUNT(id) FROM table WHERE id IN (SELECT id FROM table WHERE type='
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY key ORDER
WHERE DATE(date_of_the_the_the_the_the_the
SELECT * FROM mytable WHERE mycolumn LIKE '%[a-zA-Z0-9]
UPDATE d SET d.d = d.d FROM d JOIN d d ON d.
..................
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
..................
SELECT * FROM TABLE WHERE (TABLE.COLUMN_NAME = 'COLUMN_NAME' OR
SELECT COUNT(DISTINCT id) FROM your_table GROUP BY id HAVING COUNT
SELECT COUNT(DISTINCT a.id) AS num_of_accounts, COUNT(
SELECT * FROM [MDX_CX_CX_CX_CX
SELECT * FROM ( SELECT * FROM yourtable WHERE col1 = 'A' AND col
::::::::::::::::::
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT TOP 2 * FROM ( SELECT TOP 2 * FROM ( SELECT TOP 2 * FROM (
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.id = table.
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT CASE WHEN R = 1 THEN R WHEN R = 1 THEN R WHEN R = 1
SELECT DATENAME(mm, [Date]) AS [Date], SUM(CASE WHEN [
SELECT * FROM (SELECT * FROM table1 WHERE (column1 = 'x' OR
SELECT CONVERT(DATETIME, CONVERT(DATETIME, CONVERT(DATETIME
INSERT INTO table_name (date,time) SELECT DATEADD(MINUTE, DATE
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM (
SELECT SUM(CASE WHEN [Date] >= DATEADD(MONTH, DATEDIFF(MONTH
INSERT INTO #TempTable (id, name, email, email, email, email,
SELECT * FROM history WHERE NOT EXISTS (SELECT 1 FROM history WHERE history.id = history
SELECT * FROM my_table WHERE DATEPART(YEAR,my_date) = DATE
ut.db.db.db.db.db.db.db.db.
DATEADD(dd, DATEDIFF(dd, DATEADD(dd, DATEDIFF(
SUM(CASE WHEN WHEN WHEN WHEN = THEN THEN ELSE END) AS SUM_CASE,
..................
SELECT SUM(CASE WHEN WHEN = THEN THEN ELSE END) FROM your_table
SELECT CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
,,,,,,,,,,,,,,,,,,
SELECT COUNT(DISTINCT a.id) AS num_a, COUNT(DISTINCT
SELECT DISTINCT a.id, a.name, a.address, a.phone,
SELECT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT FROM FROM FROM FROM FROM FROM FROM TO TO TO TO TO
UPDATE table1 SET table1.value = table2.value FROM table1 INNER JOIN table2
SELECT AVG(value) FROM (SELECT AVG(value) AS value FROM table
select sum(amount) / sum(amount) from (select t.*, (sum
SELECT * FROM table1 WHERE (@@user = 'user') AND (@user
declare @var varchar(100) set @var = 'var' declare @sql varchar(100
select regexp_replace(col,'', '), regexp_replace(col, '
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 ORDER BY id DESC )
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT SUBSTRING(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
,,,,,,,,,,,,,,,,,,
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 ORDER BY id DESC LIMIT
..................
SELECT SUM(CASE WHEN [Date] = 'A' THEN [Date] ELSE [
DELETE FROM ( SELECT TOP 100 * FROM ( SELECT TOP 100 * FROM ( SELECT TOP 100
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
..................
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT AVG(time) FROM ( SELECT time, (time - interval '1 day'
var query = from c in context.Categories where c.Categories.Contains(c.
UPDATE a SET a.b = b.c FROM a a WHERE a.c IN
SELECT COUNT(DISTINCT (CASE WHEN col1 = 'A' THEN 1 ELSE 0
SELECT * FROM table WHERE (latitude = latitude AND longitude = longitude) OR (latitude =
UPDATE table1 SET count = (SELECT count FROM table1 WHERE table1.id = table
SELECT * FROM ( SELECT * FROM table1 WHERE col1 = 'A' UNION
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (CASE WHEN [Date] =
SELECT * FROM ( SELECT * FROM table1 WHERE id = (SELECT MIN(id)
..................
,,,,,,,,,,,,,,,,,,
SELECT * FROM table WHERE field LIKE '%[^0-9]%' OR field LIKE '%[^
SELECT a.id, a.name, a.address, a.city, a
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM Table1 WHERE DATEDIFF(day, StartDate, EndDate) =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Group
DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE
UPDATE A SET A.value = B.value FROM A INNER JOIN B ON A.
SELECT COUNT(DISTINCT [Group]) FROM ( SELECT [Group] AS [Group],
CREATE TABLE TABLE_A ( A INT, A INT, A INT, A INT,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
select to_number(to_number(to_number(to_number(to
SELECT SUM(CASE WHEN a.type = 'A' THEN 1 ELSE 0 END)
SELECT DISTINCT DISTINCT DISTINCT DISTINCT ON (col1) col1 FROM (SELECT DISTINCT ON (col
UPDATE [dbo].[tbl_user_update] SET [user_id]
SELECT COUNT(DISTINCT age) FROM ( SELECT age, COUNT(DISTINCT members.
UPDATE a SET a.a_id = b.a_id FROM a INNER JOIN
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table2
SELECT COUNT(DISTINCT CHARINDEX(' ', CHAR(13)) + CHAR(13))
------------------
DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF(
SELECT a.*, b.* FROM (SELECT a.*, ROW_NUMBER() OVER (
SELECT CASE WHEN @user_id = 1 THEN @user_id ELSE @user_
CREATE TABLE mytable ( id INT IDENTITY(1,1) PRIMARY KEY, name VARCHAR(50)
SELECT * FROM [dbo].[MyTable] WHERE [MyColumn] LIKE '
CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
SELECT * FROM (SELECT * FROM your_table ORDER BY your_column DESC LIMIT 1)
UPDATE [dbo].[MyTable] SET [MyColumn] = [MyColumn
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
..................
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM ( SELECT * FROM table1 WHERE (@user = 'user' AND
CREATE TABLE table_a ( a_id INTEGER PRIMARY KEY, b_id INTEGER,
SELECT * FROM Table1 t1 INNER JOIN Table2 t2 ON t1.id =
SELECT * FROM your_table WHERE your_column IN (SELECT your_column FROM your
CREATE TABLE `users` ( `id` int(11) NOT NULL, `name`
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY id ORDER

var query = from c in context.Categories join c in context.Categories on c.
$this->db->select('*'); $this->db->join('users',
SELECT * FROM table1 WHERE DATE(date) = DATE(date) AND DATE(
SELECT FROM FROM ORDER BY DESC
GRANT SELECT, INSERT, UPDATE, DELETE, CHECK, CHECK, CHECK, CHECK_
SELECT * FROM table1 WHERE id = (SELECT MAX(id) FROM table2 WHERE
SELECT * FROM table ORDER BY FIELD(column1, column2, column3, column4, column5)
SELECT COUNT(DISTINCT [User ID]) AS NumUsers FROM (SELECT [User ID
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT CONCAT(CONCAT(CONCAT(CONCAT(CON,CON),CON
SELECT SUM(CASE WHEN a.id = 1 THEN 1 ELSE 0 END) AS A
SELECT * FROM availability WHERE availability.available = 'available' AND availability.available = '
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.id =
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM Table1 t1 INNER JOIN Table2 t2 ON t1.id =
POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST
SELECT SUM(CASE WHEN type='type' THEN amount ELSE 0 END) type, SUM
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table t1 WHERE t1.parent =
MERGE INTO A.A_B_C_D_D_D_D
INSERT INTO [dbo].[tbl_test] ([id], [name], [
SELECT a.id, a.name, a.email, a.email FROM (
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
UPDATE table1 SET column1 ='some_value' WHERE table1.column1 =
..................
select to_char(to_date(time_stamp, 'HH24:MI
SELECT COUNT(DISTINCT (CASE WHEN col1 = 'A' THEN 1 ELSE 0
node node node node node node node node node node node node node node node node node node
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM Table1 WHERE (@c = 'A' AND
If(([([([([([([([([([([([([([([([([
SELECT DATEPART(wk,DATEADD(wk,DATEADD(wk,DATEADD
INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
JOIN JOIN ON ON.id = JOIN.id_user = ON.id_user
SELECT * FROM table1 WHERE (@user = 'user1' AND @user = '
CREATE FUNCTION dbo.CustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustom
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
SELECT * FROM table WHERE DATE(date) = DATE(NOW()) AND DATE(date
SELECT * FROM your_table WHERE your_column LIKE 'your_column'
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM INFORMATION_SCHEMA.STATS_STATS WHERE INFORMATION_SCHEMA
UPDATE your_table SET your_column = your_column +'' + your_
ALTER TABLE [dbo].[MyTable] WITH CHECK CHECK CHECK CHECK CONSTRAINT [d
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM your_table WHERE your_date_column BETWEEN '2013 '2013 '2013 '2013
SELECT * FROM orders WHERE DATEPART(hh,OrderDate) = DATEPART(hh
select sum(value) from ( select value, sum(value) over (partition by
CREATE TABLE mytable ( id INT NOT NULL PRIMARY KEY, name VARCHAR(255) NOT NULL
UPDATE table1 SET value = value1 WHERE value = value1 AND value2 = value
room room room room room room room room room room room room room room room room room room
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
SELECT * FROM [dbo].[tbl_a_b] WHERE [dbo
select to_char(a.col, 'yyyy') as col, to_char
SELECT TOP 1 * FROM (SELECT TOP 1 * FROM (SELECT TOP 1 * FROM (

SELECT AVG(AVG(value)) FROM (SELECT AVG(value)) AS
jdbcjdbc:datadatadatadatadatadatadatadatadatadatadatadatadatadatadata
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM (
SELECT SUBSTRING(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
function function function function function function function function function function function function function function function function function function
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (id = 1
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
SELECT a.id, a.name, a.address, a.address, a
SELECT DISTINCT a.id, a.name, a.email FROM (SELECT DISTINCT a
SELECT DATEPART(ww, DATEADD(ww, DATEDIFF(ww, DATEADD
SELECT SUBSTRING(name,1,1) FROM your_table
CONVERT(DATE, CONVERT(DATE, CONVERT(DATE,
CREATE TABLE [dbo].[MyTable] ( [Column] INT, [Column
..................
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
UPDATE mytable SET mycolumn = mycolumn + 1 WHERE mycolumn IS NOT NULL
org.jj.j.j.j.j.j.j.j
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM table1 WHERE (@user = 'user1' AND @user = '
SELECT * FROM [dbo].[MyFunction] WHERE @MyFunction = 'My
SELECT DISTINCT YEAR(date_created) AS year, COUNT(DISTINCT MONTH(date
INSERT INTO child(id) SELECT id FROM parent
DELETE FROM ( SELECT id, name, ROW_NUMBER() OVER (PARTITION BY name
SELECT CONVERT(VARCHAR(10), CONVERT(DATE, CONVERT
SELECT DISTINCT a.id, a.name, a.email, a.email FROM
SELECT MIN(value) AS minvalue, MAX(value) AS maxvalue FROM table
SELECT type, SUM(CASE WHEN type = 'type1' THEN 1 ELSE 0 END)
..................
SELECT * FROM table WHERE (user_id =? OR user_id =?)
FOREIGN FOREIGN FOREIGN FOREIGN(id) REFERENCE(id)
SELECT * FROM [dbo].[tbl_user_role_role_role_
SELECT * FROM my_table WHERE path IN (SELECT path FROM my_table WHERE path
CASE WHEN @@ ='' THEN ELSE END
SELECT a.grade, a.grade, a.grade_type, a.grade
SELECT COUNT(DISTINCT SUBSTRING(name,1,1)) FROM table WHERE SUBSTRING(
public String query(String query) { return query.to(String.class); }
select * from ( select regexp_substr(col, '[^a-zA-Z
SELECT COALESCE(CAST(CONVERT(varchar(50), CON
SELECT COUNT(DISTINCT (DATEADD(YEAR, DATEDIFF(YEAR, DATEADD
SELECT * FROM users WHERE userid IN (SELECT userid FROM users WHERE userid = 'user1')
UPDATE table1 SET column1 = (SELECT column1 FROM table2 WHERE table1.column
jdbcjdbcjdbcjdbcjdbc:datadatadatadatadatadatadatadatadatadatadatadata
INSERT INTO new_table (id, name, description) SELECT id, name, description
CREATE OR REPLACE PROCEDURE update_table(p_id IN NUMBER, p_
TO_DATE(TO_DATE(TO_DATE(TO_DATE(TO_
UPDATE [dbo].[MyTable] SET [dbo].[MyTable]
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
CASE WHEN (DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
@@identityidentityidentity identity identity identity identity identity identity identity identity identity identity identity identity identity
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id INNER
UPDATE [dbo].[tbl_replace_string] SET [dbo].[
SELECT FROM_UNUNUNUNUNUNUNUNUNUNUNUNUNUNUN
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
CREATE PROCEDURE [dbo].[GetCars] @CarsCode varchar
MERGE INTO MERGE INTO MERGE USING MERGE USING MERGE ON MERGE.
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
SELECT * FROM table WHERE DATE IS NULL OR DATE NOT IN (SELECT DATE FROM table WHERE
CASE WHEN (@@@rowcountcountcountcountcountcountcountcountcountcountcount
::::::::::::::::::
UPDATE a SET a.id = a.id FROM a INNER JOIN b ON a.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM friends WHERE friend_id =? AND friend_id =? AND friend
UPDATE SET SET = = WHERE WHERE NOT
public function function($request) { $this->db->function($request); }
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUB
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
------------------
SELECT * FROM Table1 WHERE DATEPART(hh, [Date]) = DATEPART(
..................
SELECT * FROM table WHERE (column1 IN ('A', 'B', 'C',
SELECT * FROM table WHERE (@condition1 = 1 AND @condition2 = 0 OR
------------------
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT TOP 1 * FROM (SELECT TOP 1 * FROM (SELECT TOP 1 * FROM (
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
,,,,,,,,,,,,,,,,,,
$this->db->select('*'); $this->db->join('users',
SELECT MIN(timestamp) FROM table WHERE timestamp >= NOW() AND timestamp < NOW() GROUP
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
<- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <-
SELECT GROUP_CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
seconds seconds seconds seconds seconds seconds seconds seconds seconds seconds seconds seconds seconds seconds seconds seconds seconds seconds
SELECT SUM(DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
SELECT DATEADD(MONTH, DATEDIFF(MONTH, GETDATE(), GETDATE()), GET
UPDATE table1 SET value = value1 WHERE value1 IN (SELECT value1 FROM table
SELECT DATEDIFF(day, DATEADD(day, DATEDIFF(day, DATEADD
..................
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
pip pip pip pip pip pip pip pip pip pip pip pip pip pip pip pip pip pip
..................
DELETE FROM FROM FROM FROM FROM FROM FROM TO TO TO TO TO TO TO TO TO TO
SELECT * FROM ( SELECT * FROM Table1 WHERE (latitude = 'Latitude' AND longitude
ALTER TABLE [dbo].[MyTable] ADD CONSTRAINT [dbo].[My
SELECT * FROM ( SELECT * FROM table1 WHERE (@user = 'user1' AND
UPDATE SET.id = new.id FROM new JOIN old ON old.id = new
SELECT player_id, player_name, game_name FROM games WHERE player_id
SELECT CASE WHEN CHARINDEX(''', RE RE RE RE RE RE RE RE RE RE
SELECT a.id, a.name, a.address, a.city, a
UPDATE A SET A.value = B.value FROM A INNER JOIN B ON A.
SELECT * FROM table WHERE DATEDIFF(day, @date, @date) > 0
SELECT * FROM table WHERE person_id IN (SELECT person_id FROM table GROUP BY
SELECT [Date], [Group], SUM(CASE WHEN [Group] = 'A'
INSERT INTO new_table (id, name, email, email, email, email,
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT DISTINCT ID FROM tbl_a WHERE ID IN (SELECT ID FROM tbl_b WHERE
..................
SELECT * FROM my_table WHERE my_column IN ('1','2','3','4','
SELECT * FROM ( SELECT * FROM Posts WHERE Posts.PostID = Posts
SELECT * FROM Table WHERE DATEPART(hh, [Date]) = DATEPART(hh
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
COPY FROM TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
SELECT * FROM your_table WHERE your_column IN ('A','','','','','
SELECT * FROM table1 WHERE DATEDIFF(day, GETDATE()) < 3
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT AVG(t.value) FROM table t WHERE t.value < (SELECT
SELECT * FROM Table1 WHERE ID IN (SELECT ID FROM Table2 WHERE ID = 1)
SELECT a.id, a.name, a.email, a.email, a
UPDATE Table1 SET Column1 = Column1 + Column2 WHERE Column1 = Column2
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
proc sql; select * from table1 where id in (select id from table2) union
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM table WHERE (@param1 = 'value1' AND @param2 =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
..................
INSERT INTO [dbo].[tbl_test] ( [id], [name],
SELECT * FROM table WHERE FIND_IN_SET('1', @list) > 0
SELECT AV FROM WHERE NOT NOT EXISTS (SELECT 1 FROM WHERE WHERE WHERE WHERE H H H
SELECT * FROM table1 WHERE ( (condition1 = 'A' AND condition2 =
SELECT SUM(value) AS Diff, MIN(value) AS MinValue, MAX(
SELECT * FROM table WHERE (@count = 0 AND (@count = 1 OR @
SELECT * FROM (SELECT * FROM your_table WHERE your_column IN ('A','
UPDATE table1 SET value = CONCAT('0', CONCAT('0', CONCAT('0',
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE id = 1)
SELECT SUBSTRING(column, CHARINDEX(' ', REVERSE(column)) - CHAR
use use use use use use use use use use use use use use use use use use
SELECT * FROM (SELECT * FROM your_table) AS t1
SELECT AVG(AVG(value)) FROM ( SELECT AVG(value) AS
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
use use use use use use use use use use use use use use use use use use
crosstab(crosstab(crosstab(crosst
SELECT FROM FROM WHERE IN ('''''''''''''
------------------
SELECT SUM(CASE WHEN date_time < date_time THEN amount_amount ELSE amount
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT TOP 10 * FROM ( SELECT TOP 10 * FROM YourTable ORDER BY Date DESC )
SELECT * FROM mytable WHERE DATEDIFF(MONTH, GETDATE()) = 0
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
INSERT INTO [dbo].[tbl_test] (id, name, email,
SELECT DISTINCT a.id, a.name, a.email, a.email FROM
UPDATE a SET a.a = a.b FROM a INNER JOIN b ON a.
..................
or a.id_name_name_name_name_name_name_name
@@@@@@@@@@@@@@@@@@
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')

SELECT * FROM Table1 WHERE EXISTS (SELECT 1 FROM Table2 WHERE Table1.ID =
SELECT * FROM table1 WHERE timestamp BETWEEN date1 AND date2 AND timestamp BETWEEN
SELECT DATEADD(MONTH, DATEDIFF(MONTH, GETDATE()), GETDATE()) FROM
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT DISTINCT a.id, a.name, a.email, a.phone,
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
CREATE PROCEDURE [dbo].[sp_GetData] @Data varchar(
..................
SELECT SUM(value) AS sum_value, SUM(value) AS sum_value
SELECT a.id, a.name, a.address, a.phone, a
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
UPDATE table1 SET value = value1 WHERE value1 IN (SELECT value FROM table1)
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM a WHERE a.id = b.id
INSERT INTO new_new_new_new_new_new_new_new_
USE [YourDatabase] GO USE [YourDatabase] GO USE [YourDatabase] GO
SELECT COUNT(DISTINCT c.id) FROM c INNER JOIN dbo.Categories c
..................
SELECT CONVERT(CHAR(10), CONVERT(DATE, CONVERT(
$this->get('your_table_name_here_here_here_here
,,,,,,,,,,,,,,,,,,
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
UPDATE SET._______________
..................
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
WHERE DATEPART(DAY,GETDATE()) = DATEADD(DAY,GETDATE())
..................
..................
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT DISTINCT FROM FROM FROM FROM FROM WHERE NOT EXISTS ( SELECT 1 FROM FROM TO TO TO
SELECT * FROM products WHERE name LIKE '%[[:<:]]%' OR name LIKE
SELECT COUNT(DISTINCT [Group]) FROM [Table] GROUP BY [Group]
SELECT a.id, a.name, a.address, a.phone, a
SELECT a.id, a.name, a.address, a.address, a
DELETE FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.id = table.id
UPDATE table SET column = REPLACE(column,'', '') WHERE SUBSTR(column,
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM Table WHERE SUBSTR(Column, 1, 4) = 'A'
SELECT parent FROM parent WHERE parent ='' AND NOT NOT NOT NULL
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
select to_number(to_number(to_number(to_number(to
SELECT * FROM ( SELECT * FROM mytable WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT a.id, a.name, a.address, a.address, a
CREATE TABLE [dbo].[MyTable] ( [Column] [int] [
SELECT a.id, a.name, a.address, a.phone, a
INSERT INTO [dbo].[tbl_test] ( [id], [name],
categories_id_id_id_id_id_id_id_id_
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.id = table.
RENEW TABLE [dbo].[MyTable] WITH RENEW;
SELECT COUNT(DISTINCT a.id) FROM a LEFT JOIN b ON a.id
import import import import import import import import import import import import import import import import import import
SELECT a.id, a.name, a.email, a.phone, a
SELECT COUNT(DISTINCT type) FROM table1 WHERE type IN ('A', 'B
SELECT id, COUNT(item) FROM table1 GROUP BY id
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM your_table WHERE MATCH(column1,column2,column3) AGAINST
SELECT SUM(amount) FROM ( SELECT SUM(amount) AS amount FROM mytable )
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE value = 'value'
SELECT a.id, a.name, a.address, a.address, a
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
INSERT INTO original_table SELECT id, SUM(value) FROM original_table GROUP BY
UPDATE a SET a.id = b.id FROM a INNER JOIN b ON a.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT * FROM [dbo].[MyStoredProcedure] WHERE [dbo].[
SELECT COUNT(DISTINCT a.id) FROM a LEFT JOIN b ON a.id
declare @list varchar(100) declare @sql nvarchar(100) set @list = '
SELECT a.* FROM (SELECT a.*, b.* FROM a INNER JOIN b ON a
MERGE INTO [dbo].[tbl_user_info] AS t USING (
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date_created
SELECT Town, Town, Town, Town, Town, Town
INSERT INTO my_table (id, name, email, email, email, email,
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM table WHERE (@param1 = 'value1' AND @param2 =
jdbcjdbcjdbcjdbcjdbcjdbc:datadatadatadatadatadatadatadatadatadatadata
..................
SELECT * FROM Table1 WHERE (@param1 IS NULL OR @param1 = @
viewviewviewviewviewviewviewviewviewviewviewviewviewviewviewviewviewview
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT DISTINCT a.id, a.name, a.email, a.email FROM
declare @xml xml set @xml = '<root> <name>name</name>'
= = = = = = = = = = = = = = = = = =
SELECT MIN(value) FROM table1 WHERE value IN (SELECT MIN(value) FROM
SELECT a.id, a.name, a.address, a.phone, a
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Product
SELECT * FROM mytable WHERE mycolumn LIKE '%[^0-9]%'
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT DATEDIFF(DAY, DATEADD(DAY, DATEDIFF(DAY, DATEADD
GROUP BY message;;;;;;;;;;;;;;;
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM ( SELECT * FROM mytable WHERE id = @id ) x
..................
SELECT * FROM links LEFT JOIN links_to_users ON links.user_id =
SELECT * FROM ( SELECT * FROM table1 WHERE (@param = 'value' OR
DELETE FROM mytable WHERE mycolumn LIKE '%' AND mycolumn NOT LIKE '%' AND
def if if if if if then then else end end
SELECT * FROM table WHERE MATCH(column_name) AGAINST ('*' IN
..................
while(true) { do____________
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.id =
SELECT id, name, SUM(value) FROM ( SELECT id, name, value FROM
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 AND (Date = '
SELECT * FROM my_table WHERE my_column ='some_column' AND my
SELECT CASE WHEN (CASE WHEN (DATEDIFF(MINUTE, DATEADD(MINUTE
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id INNER
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT @a = a, @b = b, @c = c FROM ( SELECT
SELECT * FROM ( SELECT * FROM mytable WHERE id = @id AND (@status
SELECT AVG(rating) FROM ( SELECT AVG(rating) AS average FROM table
SELECT SUM(CASE WHEN status = 'active' THEN 1 ELSE 0 END) active,
DELETE FROM ( SELECT id, name, row_number() OVER (PARTITION BY name
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
..................
SELECT * FROM posts p INNER JOIN posts_tags t ON p.post_id =
@@@@@@@@@@@@@@@@@@
SELECT u.user_id, u.username, COUNT(comments.comment_id
SELECT * FROM my_table WHERE my_column =?
purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
H H H H H H H H H H H H H H H H H H
MATCH(name) AGAINST(name) MATCH(name) AGAINST(
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
If(([([([([([([([([([([([([([([([([
SELECT to_char(to_char(to_date(to_char(to
SELECT * FROM [dbo].[MyTable] WHERE @@ROWCOUNT = 0
,,,,,,,,,,,,,,,,,,
SELECT id, name, SUM(value) FROM ( SELECT id, name, value FROM
,,,,,,,,,,,,,,,,,,
SELECT AVG(score) FROM ( SELECT AVG(score) AS avg_score
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY ID) R
var_var = ''; var var_var = ''; var_var = ''; while (
SELECT DISTINCT(date_entry) FROM ( SELECT date_entry, date_entry,
SQL> SELECT * FROM OPENROWSET('SELECT * FROM OPENROWSET(''C
SELECT * FROM mytable WHERE EXISTS (SELECT 1 FROM mytable WHERE path = @path
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT TO_DATE(SYSDATE, 'YYYYMMDD') FROM dual CONNECT BY
select id, row_number() over (order by id) as seqnum from (
SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable WHERE name = '
SELECT COUNT(DISTINCT (CASE WHEN a.id = 1 THEN a.id ELSE
SELECT * FROM table WHERE value = 'value' AND value < 'value'
SELECT * FROM your_table ORDER BY your_column
INSERT INTO new_table (id, name, description) SELECT id, name, description
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
UPDATE my_table SET my_column = replace(my_column,'', '
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
SELECT COUNT(id) FROM rates WHERE rates.id = 1 GROUP BY rates.id
SELECT CONVERT(Currency, CONVERT(Currency, CONVERT(Currency
SELECT a.id, a.name, a.address, a.address, a
CREATE INDEX INDEX_INDEX_INDEX_INDEX_INDEX_INDEX_INDEX_INDEX_
UPDATE dbo.YourTable SET dbo.YourColumn = dbo.YourColumn
Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle
SELECT * FROM A WHERE EXISTS (SELECT 1 FROM B WHERE A.A_ID =
UPDATE table SET field = field + 1 WHERE field = 'value'
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id INNER
------------------
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM ( SELECT * FROM [dbo].[tbl_a] UNPI
GRANT CONNECT TO [your_role_name] WITH GRANT CONNECT TO [your
..................
SELECT * FROM table WHERE (column LIKE '%' OR column LIKE '%' OR column LIKE
IF(@@@@@)
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
declare @sql varchar(max) set @sql = 'SELECT * FROM'+ @
MATCH(name) AGAINST ('' OR'' OR'' OR''
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT DATEPART(YEAR, [Date]) AS [Year], DATEPART(MONTH,
..................
::::::::::::::::::
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT DATEADD(DAY, DATEADD(DAY, DATEDIFF(DAY, DATEADD
SELECT * FROM table WHERE FIND_IN_SET(' ', @param) > 0
UPDATE Table1 SET Column1 = COALESCE(Column1, Column1) WHERE Column
SELECT * FROM table1 WHERE (field1 = 'value1' OR field1 = '
SELECT COUNT(event_id) FROM events WHERE start_date >= DATEADD(day
MERGE INTO my_table USING my_table USING my_table USING my_table
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM table WHERE name LIKE '%' + name + '%'
NV NV NV NV NV NV NV NV NV NV NV NV NV NV NV NV NV NV
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM mytable WHERE language = 'en' AND language = 'en' AND
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM messages WHERE time_sent >= NOW() - INTERVAL 1 HOUR
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
INSERT INTO mytable (id, name, email) SELECT id, name, email FROM
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col ORDER
netnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnet
..................
@@@@@@@@@@@@@@@@@@
SELECT DISTINCT FROM FROM FROM FROM WHERE IN (SELECT FROM FROM FROM WHERE WHERE IN (SELECT
JOIN JOIN ON ON.id = JOIN.id_user = ON.user_id
SELECT CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN
SELECT * FROM table WHERE DATEPART(YEAR, [Date]) = DATEPART(MONTH
SELECT MIN(value) FROM table1 WHERE value IN (SELECT value FROM table2 WHERE
SELECT CONCAT('''', QUOTENAME(REPLACE(REPLACE(REPLACE(REPLACE(
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT COUNT(DISTINCT SUBSTRING(name,1,1)) AS NumOfSubStrings FROM
CREATE PROCEDURE [dbo].[GetAllProducts] @ProductID int,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [id]
SELECT AVG(value) FROM (SELECT AVG(value) FROM (SELECT @
::::::::::::::::::
SELECT * FROM table WHERE REGEXP_LIKE (column_name, '^[
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT DISTINCT t1.* FROM table1 t1 JOIN table2 t2 ON t1.
UPDATE SET SET = WHERE WHERE =''
..................
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT COUNT(DISTINCT question_id) FROM questions WHERE question_id IN (SELECT
SELECT CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
..................

LEFT JOIN JOIN ON ON.id = LEFT.id AND.name = 'name'
SELECT DATE, SUM, SUM_ OVER_PARTITION BY DATE, DATE, DATE,
..................
SELECT id, max(value) FROM ( SELECT id, value FROM table1 UNION
var db = new Database(); var query = from c in db.Query(sqlQuery
$this->->->('('('('('('('(''''''
CREATE TABLE [dbo].[MyTable] ( [Column] CHAR(1) NOT NULL
= Me.db.query("SELECT * FROM " & Me.db.table1
SELECT * FROM table WHERE (column1 LIKE '%' OR column1 LIKE '%' OR
SELECT COUNT(DISTINCT (col1 OR col2 OR col3 OR col4 OR
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT a.id, a.name, a.price, a.price, a
JOIN JOIN ON ON.id = JOIN.id_user = ON.id_user
UPDATE A SET A.B = B.B FROM A INNER JOIN B ON A.
SELECT ROUND(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
SELECT * FROM your_table WHERE your_column LIKE'' AND your_column LIKE
SELECT MAX(value) FROM ( SELECT value, row_number() OVER (PARTITION
LIKE '%'
SELECT * FROM ( SELECT * FROM Table1 WHERE ParentID = @ParentID AND Parent
INSERT INTO [dbo].[tbl_user_role_role_role_role
SELECT * FROM table WHERE (@date = date) OR (@date = date)
SELECT SUBSTR(col,1,3) AS col1, SUBSTR(col,1,3)
SELECT MIN(a.value) FROM (SELECT MIN(value) AS value FROM table
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT a.id, a.name, a.address, a.phone, a
SELECT a.id, a.name, a.address, a.address, a
SELECT COUNT(DISTINCT col1) AS col1, COUNT(DISTINCT col2) AS col
..................
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date1 =
UPDATE table1 SET value = value + 1 WHERE table1.id = table2.id AND
SELECT * FROM table WHERE (column1 LIKE 'A%' OR column1 LIKE '
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT firstname, lastname FROM table1 WHERE firstname IN ('John', 'Doe', '
use use use use use use use use use use use use use use use use use use
DELETE FROM mytable WHERE pk IN (SELECT pk FROM mytable GROUP BY pk HAV
------------------
UPDATE a SET a.a = a.b FROM a JOIN b ON a.a
SELECT * FROM products p JOIN (SELECT store_id, MAX(price) AS price
SELECT * FROM ( SELECT parent_id, child_id, child_id, child

SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
TO_DATE(TO_DATE(TO_DATE(TO_DATE(TO_
..................
SELECT DATE_FORMAT(date_created, '%Y') AS month, SUM(CASE
SELECT * FROM table1 UNION ALL SELECT * FROM table2
UPDATE table1 SET value = value + 1 WHERE id = 1 AND value = 1 AND
SELECT SUM(value) FROM (SELECT SUM(value) FROM yourtable) t
SELECT * FROM mytable WHERE mycolumn LIKE '^[[:alpha:]]%'
SELECT * FROM table WHERE DATE(date) = DATE(date) AND DATE(date
SELECT array_agg(array_agg(array_agg(array_agg(array
var index = new Index(key); var index2 = new Index(key); var
SELECT * FROM mytable WHERE NOT EXISTS (SELECT 1 FROM mytable WHERE mytable.
::::::::::::::::::
SELECT * FROM tree WHERE NOT EXISTS ( SELECT 1 FROM tree_subtree WHERE tree.
var query = from c in context.Categories where c.Categories.Contains(c.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM job WHERE job.job_id = job.job
SELECT COUNT(DISTINCT MONTH(date_created)) AS Months, COUNT(DI
SELECT * FROM table1 WHERE (@user = 'user1' AND @user = '
JOIN JOIN JOIN ON ON ON.id = JOIN.id_user = ON.id
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.id = Table2.id INNER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
email address address address address address address address address address address address address address address address address address
CREATE TABLE week_table ( week_id INTEGER, week_id INTEGER, week_
// // // // // // // // // // // // // // // // // //
..................
SELECT a.id, a.name, a.email, a.email, a
DELETE FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id = table
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT * FROM ( SELECT * FROM mytable WHERE mytable.id = mytable.
SELECT * FROM product_specification_specification_specification_specification_spec
SELECT MONTH(date) AS month, category, SUM(CASE WHEN month = MONTH(
SELECT AVG(AVG(value)) FROM (SELECT AVG(value)) a
..................
SELECT CONVERT(varchar(10), CONVERT(varchar(10), CON
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
::::::::::::::::::
SELECT DISTINCT a.id, a.name, a.email FROM (SELECT DISTINCT a
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.clob = table
UPDATE a SET a.a = a.b FROM a WHERE a.a = '
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
UPDATE [dbo].[tbl_user_update] SET [user_id]
..................
SELECT [UserID], [UserName], [UserEmailAddress] FROM [User]
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
SELECT DATEADD(YEAR, DATEDIFF(YEAR, DATEADD(YEAR, DATEDIFF
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
CREATE TABLE A.A.A.A.A.A.A.A.
MATCH(name) AGAINST(name) RETURN(name)
SELECT SUM(CASE WHEN (x = x) THEN x ELSE x END) x,
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
------------------
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date1 =
SELECT * FROM table WHERE date BETWEEN date1 AND date2 AND date3 AND date
,,,,,,,,,,,,,,,,,,
SELECT [Date], [Value], [Value], [Value] FROM ( SELECT [Date
REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG
SELECT COUNT(DISTINCT [Date]) AS [Count] FROM ( SELECT [Date],
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT * FROM your_table WHERE your_column ='some_column'
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' OR
DECLARE @sql varchar(max) SET @sql = 'SELECT * FROM '
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
...,,,,,,,,,,,,,,,
INSERT INTO table_name (id, name, email, password) SELECT id, name
ALTER TABLE [dbo] ADD UNIQUE (name, surname)
SELECT * FROM ( SELECT * FROM table WHERE (@percent = 0) OR (@percent
GRANT EXECUTE permissions ON [user] TO [user] WITH GRANT EXECUTE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
UPDATE [dbo].[MyTable] SET [dbo].[MyTable]
UPDATE a SET a.b = b.c FROM a WHERE a.a = b
SELECT DISTINCT a.id, a.name, a.address, a.address,
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT a.id, a.name, a.price, a.price, a
SELECT CONVERT(CHAR(10), CONVERT(CHAR(10), CONVERT
SELECT * FROM ( SELECT * FROM table WHERE id IN (1,3) UNION ALL SELECT *
SELECT DATEPART(hh, [Date]) AS [Date], DATEPART(hh,
SELECT * FROM table WHERE date_from < DATEADD(day, DATEDIFF(day
INSERT INTO [dbo].[tbl_test] (col1,col2,col3,
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
..................
declare @sql varchar(100) set @sql ='select * from'+ @tablename
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM table1 WHERE (id IN (SELECT id FROM table2 WHERE table1.
DATEDIFF(MINUTE, DATEDIFF(MINUTE, DATEDIFF(MINUTE,
CREATE TABLE A ( A_ID INT, B_ID INT, C_ID INT
SELECT * FROM ( SELECT * FROM table1 WHERE col1 = 'value1' AND col
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.id, a.name, a.address, a.city, a
select * from ( select to_date(to_date(sysdate, 'HH
SELECT DISTINCT id FROM table WHERE id IN (SELECT id FROM table WHERE text = 'test

..................
SELECT * FROM table WHERE value = 'value' AND value <> 'value' AND
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Order
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE status = 'COMPLETED
UPDATE table1 SET table1.value = table2.value FROM table1 INNER JOIN table2
SELECT @sql = 'SELECT'+ @column +'FROM'+ @table +
= = = = = = = = = = = = = = = = = =
------------------
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
UPDATE d SET d.d = d.d FROM d JOIN d d ON d.
SELECT user_id, user_name, user_email, user_email, user
UPDATE table SET value = value - value WHERE value <> 0
CREATE OR REPLACE TRIGGER trigger_name AFTER UPDATE OF NEW OF NEW OF NEW OF NEW
UPDATE table1 SET table1.column1 = table2.column1 FROM table1 INNER JOIN
SELECT * FROM ( SELECT * FROM yourtable WHERE col1 IN ('A','B','
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM [dbo].[tbl_test] WHERE [test] IS NULL
ALTER TABLE [dbo] ADD CONSTRAINT [dbo] CHECK (([dbo]
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
SELECT * FROM A LEFT JOIN B ON A.id = B.id AND B.
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
::::::::::::::::::
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
..................
UPDATE a SET a.a = a.b FROM a LEFT JOIN b ON a.
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT tables FROM information_schema.tables WHERE table_name = 'MyTableName'
ALTER TABLE mytable ADD CONSTRAINT mytable_seq PRIMARY KEY (mytable_seq);
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM Table1 WHERE (@@ROWCOUNT = 0 AND @ROWCOUNT =
SELECT * FROM your_table ORDER BY DESC LIMIT 1
SELECT a.id, a.name, a.address, a.city, a
TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE DATE
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
mongodb.mongodb.mongodb.mongodb.mongodb.mongodb.mongodb.mongodb.mongodb.
CASE WHEN (SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDI
SELECT DISTINCT a.id, a.name, a.email, a.email FROM
INSERT INTO table_name (id, name, email) SELECT id, name, email
SELECT COUNT(DISTINCT (CASE WHEN @user = 'user' THEN 1 ELSE 0
django django django django.core.core.core.core.core.core.core
SELECT CONVERT(varchar(50), CONVERT(varchar(50
SELECT * FROM table WHERE MATCH(column) AGAINST ('*' IN BOOLEAN MODE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GUID ORDER
SELECT * FROM table1 WHERE (@param1 LIKE '%' OR @param1 LIKE
SELECT * FROM Table1 WHERE (@@ROWCOUNT = 0 AND Table1.ID =
SELECT * FROM ( SELECT * FROM Table1 WHERE Column1 = 'value1' UNION
SELECT CAST(DATEDIFF(MINUTE, GETDATE(), GETDATE()) AS TIME)
..................
..................
USE [your database name here] GO USE [your database name here] GO USE [
SELECT * FROM Table WHERE DATEDIFF(day, StartDate, EndDate) BETWEEN
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM table1 WHERE (user_id = 1 AND user_id = 2
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
ALTER TABLE [dbo].[MyTable] ALTER COLUMN [dbo].[My
SELECT ID, SUM(Value) AS Value, SUM(Value) AS Value FROM (
..................
SELECT * FROM table WHERE DATEPART(dw, @date) = DATEPART(dw
DELETE FROM FROM FROM FROM FROM TO TO TO TO TO TO TO TO TO TO TO TO
SELECT COUNT(DISTINCT item_id) FROM table WHERE date_created >= DATEADD
SELECT * FROM table1 WHERE DATE_ADD(date, DATEDIFF(date, GET
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT DISTINCT a.id, a.name, a.email FROM (SELECT DISTINCT a
..................
SELECT CASE WHEN (SELECT SUM(CASE WHEN [Date] >= DATEADD(MONTH,
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
SELECT * FROM ( SELECT *, RN = ROW_NUMBER() OVER (PARTITION
UPDATE a SET a.a = a.b FROM a INNER JOIN b ON a.
= = = = = = = = = = = = = = = = = =
max(max(max(max(max(max(max(max(max(
def sequence = Seq(sequence: Seq(sequence: Sequence(sequence: Sequence(sequence
MATCH(item) AGAINST(item) RETURN RETURN RETURN RETURN
SELECT SUM(CASE WHEN a.type = 'type1' THEN a.value ELSE 0
public public void register(string registered) { register(registered); }
WITH cte AS ( SELECT *, ROW_NUMBER() OVER (PARTITION BY Group
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT CASE WHEN ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
UPDATE a SET a.id = b.id FROM a INNER JOIN b ON a.
LOAD DATA INFILE 'file.txt' INTO TABLE my_table FIELDS TERMINATED
SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable WHERE id <>
CREATE VIEW [dbo].[tbl_test] AS SELECT * FROM [dbo
SELECT CONVERT(DATE, CONVERT(DATE, CONVERT(DATE
SELECT SUM(total) FROM table WHERE date_time >= NOW() - INTERVAL 1 DAY
INSERT INTO [dbo].[tbl_test] ( [id], [name],
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
CREATE TABLE new_table ( id INT IDENTITY(1,1) PRIMARY KEY, name VARCHAR(
SELECT SUM(CASE WHEN A = B THEN A ELSE B END) AS B_A
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
------------------
..................
SELECT SUM(CASE WHEN A = B THEN B ELSE 0 END) B, SUM(
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(DISTINCT SUBSTRING(col,1,1)) FROM table
SELECT CONVERT(CHAR(10), CONVERT(DATE, CONVERT(
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT CASE WHEN ISNULL(col1, col2) = 1 THEN col1 ELSE col2
merge(a,b,c,d,e,f,f,f,
SELECT SUBSTRING(col, CHARINDEX(' ', col) + 1, CHARINDEX(' ',
SELECT TOP 3 * FROM ( SELECT TOP 3 * FROM ( SELECT TOP 3 * FROM (
INSERT INTO [dbo].[tbl_test] (col1,col2,col3,
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY step ORDER
// // // // // // // // // // // // // // // // // //
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
------------------

SELECT MAX(id) FROM (SELECT id, max(id) AS max_id
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
SELECT * FROM Table1 WHERE FIND_IN_SET('1', @list) >
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
v v v v v v v v v v v v v v v v v v
WITH CTE AS ( SELECT *, ROW_NUMBER() OVER (PARTITION BY Parent
WHERE (@@search ='search' OR @search ='search' OR @
..................
SELECT TOP 1 * FROM your_view_your_view_your_your_view
SELECT DATEADD(DAY, DATEDIFF(DAY, GETDATE()), GETDATE())
_id_name_name_name_name_name_name_name_name
SELECT * FROM table1 WHERE SUBSTRING(column1,1,3) IN (SELECT SUBSTRING
SELECT u.user_id, u.message_id, u.message_id
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
INSERT INTO new_table (id, name, email, email, email, email,
SELECT u.username, u.username, u.username FROM users u INNER JOIN users
SELECT * FROM ( SELECT * FROM my_table WHERE parent_id = @parent_
CREATE FUNCTION dbo.GetAllUsers(@user_id int) RETURNS
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT TOP 1 @row := @row + 1 row_number() OVER (ORDER BY
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
...,,,,,,,,,,,,,,,
SELECT @@ROWCOUNT = COALESCE(@ROWCOUNT + @ROWCOUNT)
UPDATE t1 SET t1.id = t2.id FROM t1 INNER JOIN t2
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT * FROM table1 WHERE (@user = 'user' AND user = 'user
SELECT COUNT(DISTINCT a.id) FROM table1 a LEFT JOIN table2 b
..................
SELECT a.id, a.name, a.email, a.phone, a
SELECT SUM(CASE WHEN [Date] >= DATEADD(MONTH, DATEDIFF(MONTH
..................
SELECT * FROM table WHERE DATE(date) = DATE(date) AND DATE(date
public functionget($entity) { return $entity->get(new {name = $
$this->db->select('*'); $this->db->where('*',
..................
..................
SELECT [Column1], [Column2], [Column3], [Column4] FROM (SELECT [Column
..................
IF(@@@@@)
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT COUNT(DISTINCT date_created) FROM table WHERE date_created >= DATE_
REBUILD REBUILD REBUILD REBUILD REBUILD REBUILD REBUILD REBUILD RE RE
SELECT * FROM table ORDER BY DATE(date_field) DESC, DATE(date_
CREATE PROCEDURE dbo.usp_GetAllAllAllAllAllAllAllAll
SELECT DISTINCT a.id FROM (SELECT DISTINCT a.id FROM table1 a WHERE a
DATE DATE
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
..................
WHERE (@@search ='search' OR @search ='search' OR @
SELECT city FROM contacts WHERE city = 'city' GROUP BY city HAVING COUNT(
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM mytable WHERE (@param1 IS NULL OR @param1 = @
SELECT * FROM ( SELECT id, name, email, email, ROW_NUMBER() OVER
the the the the the the the the the the the the the the the the the the
INSERT INTO Table1 (id, name, email, phone, phone, email, phone
DELETE FROM Table1 a LEFT JOIN Table2 b ON a.id = b.id
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
the the the the the the the the the the the the the the the the the the
SELECT * FROM [dbo].[MyTable] WHERE [MyColumn] LIKE '%
SELECT DISTINCT post_id FROM posts WHERE tag_id IN (SELECT tag_id FROM
GROUP BY (CASE WHEN seq = 1 THEN THEN ELSE END), (CASE WHEN seq =
SELECT CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT
UPDATE a SET a.id = a.id FROM a INNER JOIN b ON a.
SELECT * FROM ( SELECT * FROM mytable ORDER BY version DESC ) t WHERE t.
[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [
..................
now()
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM (SELECT * FROM your_table ORDER BY your_column) WHERE your
,,,,,,,,,,,,,,,,,,
SELECT * FROM table WHERE (@param1 LIKE '%' OR @param1 LIKE '%
SELECT * FROM information_schema.columns WHERE table_name='your_table'
SELECT * FROM mytable WHERE mycolumn REGEXP '^[a-zA-Z
UPDATE A SET A.A_B = A.B_C FROM A INNER JOIN
pg:pg:pg:pg:pg:pg:pg:pg:pg:
SELECT u.user_id, u.picture, u.name, u.picture
SELECT * FROM ( SELECT a.id, a.name, a.address, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM sys.tables WHERE name ='my_table'
SELECT DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
SELECT * FROM table WHERE (column = 'abc' AND column = 'def' )
A A B C A B C A B C A B C A B C B C
SELECT COUNT(DISTINCT (CASE WHEN (A.ID = A.ID AND A
..................
heroku pg:psql
SELECT * FROM categories WHERE category_id IN (SELECT category_id FROM categories WHERE parent

= = = = = = = = = = = = = = = = = =
SELECT * FROM ( SELECT *, row_number() over (partition by key order by
DELETE FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT CASE WHEN (@status = 'Active' AND @status = 'Active') THEN
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM items WHERE item_id IN (SELECT item_id FROM items WHERE item
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM products WHERE YEAR(ProductID) = YEAR(GETDATE()) AND MONTH
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
var query = { "users.name" : { "users.name" : "
SELECT * FROM table WHERE (value1 BETWEEN value1 AND value2 OR value1
SELECT ROUND(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
SELECT * FROM table WHERE DATEPART(hh, GETDATE()) = DATEPART(hh
------------------
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
UPDATE table SET value = (SELECT MAX(value) FROM table WHERE id = table.
SELECT DISTINCT t1.id, t1.name, t2.name FROM (SELECT t1.
SELECT * FROM Table1 t1 INNER JOIN Table2 t2 ON t1.id =
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM table WHERE (@param1 LIKE '%' + @param1 + '%
SELECT SUM(CASE WHEN DATEPART(YEAR, [Date]) = DATEPART(YEAR
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT DISTINCT t1.title, t1.year, t1.year, t1.year,
INSERT INTO table_name (id, name, email, email, email, email,
SELECT * FROM mytable WHERE mycolumn IN ('a','b','c','d','
SELECT * FROM your_table WHERE your_column ='' AND your_column =
SELECT COUNT(DISTINCT (CASE WHEN (SELECT COUNT(DISTINCT (SELECT COUNT(
SELECT * FROM Table1 WHERE Table1.Column1 LIKE '%' + @column1 +
SELECT a.id, a.name, a.address, a.phone, a
CREATE FUNCTION dbo.dbo.dbo.dbo.dbo.d
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM my_table WHERE my_column LIKE 'IP%'
..................
= = = = = = = = = = = = = = = = = =
DELETE FROM WHERE WHERE WHERE
..................
..................
SELECT * FROM ( SELECT *, (SELECT MAX(score) FROM table1 WHERE id
SELECT AVG(value) FROM (SELECT AVG(value) AS value FROM table
SELECT * FROM [dbo].[tbl_test] WHERE [name] LIKE '%
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM mytable WHERE REGEXP_LIKE(field, '[[:[:[:
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
SELECT * FROM Table1 WHERE (@@ROWCOUNT = 0) OR (@ROWCOUNT
..................

SELECT MIN(price) FROM (SELECT price FROM table WHERE price <= (SELECT MIN(
SELECT MIN(id) AS min_id, MAX(id) AS max_id
CREATE TABLE my_table ( id INTEGER PRIMARY KEY, name TEXT, PRIMARY KEY (id
SELECT DATE FROM TABLE WHERE DATE >= DATE
SELECT COUNT(DISTINCT [Group]) AS [Group], SUM(CASE WHEN [Group
my my my my my my my my my my my my my my my my my my
SELECT ROUND(SUM(CASE WHEN WHEN THEN ELSE END)) / 100 FROM

SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable WHERE id IN (
SELECT MAX(date) FROM ( SELECT date, time, ROW_NUMBER() OVER (
,,,,,,,,,,,,,,,,,,
DELETE FROM FROM FROM FROM FROM FROM WHERE NOT EXISTS(SELECT 1 FROM FROM FROM FROM TO
..................
SELECT * FROM my_table WHERE my_column ='some_column' AND my
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *

GO USE GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
UPDATE table1 SET value = value + 1 WHERE id = 1
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
INSERT INTO my_table (id, name, sequence) SELECT id, name, sequence
SELECT COUNT(DISTINCT (CASE WHEN col1 = 'A' THEN 1 ELSE 0
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
use use use use use use use use use use use use use use use use use use
netnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnet
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
UPDATE a SET a.name = a.name FROM a INNER JOIN b ON a.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT SUM(CASE WHEN [Date] = '2011' THEN [Date] ELSE 0
SELECT SUM(value) FROM ( SELECT SUM(value) AS value FROM table1 )
WITH tree_tree AS ( SELECT *, ROW_NUMBER() OVER (PARTITION BY
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
INSERT INTO new_table (id, name, description) SELECT id, name, description
CREATE INDEX idx_idx_idx ON mytable (idx)
[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
UPDATE mytable SET length = LENGTH(length) WHERE length > LENGTH(length)
..................
SELECT a.id, a.name, a.address, a.phone, a
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
SELECT COUNT(messages.message_id) FROM messages INNER JOIN messages_to_messages
UPDATE A SET A.A_ID = B.A_ID FROM A INNER JOIN
ALTER TABLE NAME RENAME TO OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD
SELECT COUNT FROM GROUP H H H H H H H H H H H
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
WITH RECURSIVE RECURSIVE RECURSIVE RECURSIVE RECURSIVE RECUR
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table2)
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT SUM(value)) FROM your_table
re re re
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT COUNT(DISTINCT a.id) AS num_of_accounts, a.
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT a.id, a.name, a.address, a.address, a
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
ssh ssh ssh ssh ssh ssh ssh ssh ssh ssh ssh ssh ssh ssh ssh ssh ssh ssh
select * from ( select *, row_number() over (partition by col1, col
SELECT * FROM table WHERE REGEXP_LIKE(column, '^[[:digit
SELECT * FROM table WHERE col = 'value' AND col = 'value'
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM table WHERE (@param1 = 'Y' AND @param2 =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
CREATE VIEW v_v_v_v_v_v_v_v_
INSERT INTO A (id, name, email, phone, phone, email, phone,
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
CREATE TABLE t1 ( id int, name varchar(50) not null, constraint t1
SELECT * FROM table1 WHERE (@param1 = 'value1' AND @param2
DELETE FROM FROM WHERE WHERE NOT;;;;;;;;;;;;
SELECT e.employee_name, e.employee_name, e.employee_name
SELECT a.id, a.name, a.address, a.address, a
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
------------------
..................
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
select * from ( select *, row_number() over (order by id) rn
SELECT * FROM ( SELECT * FROM table WHERE id = @id AND (@id =
IF EXISTS (SELECT 1 FROM sys.dm_exec_sessions WHERE session_id =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY text) AS
SELECT * FROM table ORDER BY REGEXP_LIKE(col, '^[[:
SELECT DISTINCT word FROM table WHERE word IN (SELECT DISTINCT word FROM table WHERE word = '
UPDATE translation SET translation.translation_id = translation.translation_id FROM translation INNER JOIN
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
public void onCreate(SQLiteDatabase db) { db.createColumn("name", "text
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE table.id = table
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
UPDATE a SET a.id = a.id FROM a INNER JOIN b ON a.
SELECT CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN
SELECT DATEPART(YEAR,DateDate) AS Date, DATEPART(MONTH,Date
CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK
SELECT * FROM table WHERE (@name LIKE '%' OR @name LIKE '%' OR
SELECT DATENAME(MONTH, DATEADD(MONTH, DATEDIFF(MONTH, DATEADD
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(DISTINCT [Name]) AS NumOfNames FROM YourTable
UPDATE your_table SET your_column = replace(your_column,'', '
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
SELECT DISTINCT ON (id) id, name, email FROM ( SELECT id, name,
SELECT * FROM table1 WHERE id = (SELECT id FROM table2 WHERE table1.id
..................
..................
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
CREATE TABLE new_table_name (name VARCHAR(50)) INSERT INTO new_table
SELECT SUM(CASE WHEN WHEN THEN THEN ELSE END) FROM FROM FROM TO TO TO TO
SELECT TOP 1 * FROM (SELECT TOP 1 * FROM YourTable ORDER BY Date DESC)

,,,,,,,,,,,,,,,,,,
SELECT * FROM table WHERE date_time < NOW() AND time_time > NOW()
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT CONVERT(DECIMAL(18,2), CONVERT(DECIMAL(18,
..................
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT MAX(time) FROM table WHERE time >= DATEADD(SECOND, DATEDIFF(
SELECT * FROM mytable ORDER BY `name` DESC LIMIT 1;
CREATE FUNCTION dbo.GetAllCustomers( @CustomerId int, @CustomerId
..................
SELECT * FROM table WHERE DATEDIFF(day, GETDATE()) = 1
SELECT * FROM events WHERE DATE(event_date) = DATE(NOW()) AND DATE
SELECT * FROM Table1 WHERE (@param1 = 'value1' AND @param2
SELECT MAX(id)) FROM your_table
Oracle Data Source - - - - - - - - - - - - - - -
SELECT SUM(CASE WHEN a.name = 'A' THEN a.value ELSE 0
SELECT * FROM users u LEFT JOIN users_roles ur ON u.user_id =
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
INSERT INTO [dbo].[MyTable] ([Key],[Value]) SELECT
..,,,,,,,,,,,,,,,,
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY ID) AS
NSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNS
SELECT * FROM INFORMATION.SCHEMA.TABLES WHERE INFORMATION.SCHEMA.TABLES
SELECT * FROM ( SELECT *, rank() OVER (PARTITION BY score ORDER BY score
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT * FROM table WHERE column = 'A' AND column = 'B' AND column
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B
SELECT * FROM ( SELECT * FROM table1 WHERE table1.id = table2.id AND
SELECT * FROM ( SELECT * FROM mytable WHERE id = @id ) t
SELECT CONVERT(datetime, CONVERT(varchar(10), CONVERT
SELECT COUNT(DISTINCT a.id) AS total_count, a.id FROM
..................
var query = from c in context.Customers join c in context.Customers on
table_name (id, name, description) table_name (id, name,
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT a.id, a.name, a.address, a.phone, a
::::::::::::::::::
SELECT COUNT(DISTINCT a.id) FROM A INNER JOIN B ON A.id
SELECT CASE WHEN @user = 1 THEN @user ELSE @user END AS user1, CASE
..................
NSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNS
SELECT * FROM table WHERE MATCH(text) AGAINST ('$search' IN BOOLEAN
select * from ( select *, row_number() over (order by salary) as
SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('Your
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY NEWID())
SELECT FROM FROM FROM WHERE NOT EXISTS ( SELECT FROM FROM TO WHERE TO TO TO TO )
UPDATE table1 SET value = replace(value, 'value', 'value') WHERE id
SELECT * FROM ( SELECT [Date], [Date], [Date], [Date], [
SELECT * FROM users u LEFT JOIN users_to_login u2 ON u.user

SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
..................
proc sql; select * from table1 t1 join table2 t2 on t1.
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Name
SELECT * FROM my_table WHERE NOT EXISTS (SELECT 1 FROM my_table WHERE my
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY date ORDER
SELECT COUNT(DISTINCT DATE(time)) FROM ( SELECT DATE(time) AS time
SELECT a.id FROM a JOIN b ON a.id = b.id AND b
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT * FROM Table1 WHERE EXISTS (SELECT 1 FROM Table2 WHERE Table1.Column1
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name IN ('a',
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name IN ('a',
..,,,,,,,,,,,,,,,,
REGEXP''''''''''''''''
CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
CREATE TABLE mytable ( col1 text, col2 text, col3 text, col
SELECT COUNT(DISTINCT a.id) AS num_of_accounts, COUNT(
UPDATE table SET value = (SELECT SUM(value) FROM table) WHERE value = '
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM [dbo].[tbl_test] WHERE [test] = '
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
use use use use use use use use use use use use use use use use use use
SELECT a.id, a.name, a.address, a.city, a
SELECT DATEADD(MONTH, DATEDIFF(MONTH, GETDATE()), 0) AS Month,
SELECT a.id, a.name, a.address, a.city, a
ALTER TABLE [dbo].[YourTable] ADD [YourColumn] INT IDENTITY
..................
SELECT * FROM your_table WHERE DATE(your_date_your_date_your
SELECT * FROM tag_tag_tag WHERE tag_name = 'tox' AND
use use use use use use use use use use use use use use use use use use
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
MATCH(name) AGAINST(''name' IN BOOLEAN MODE)
..................
MERGE INTO dbo.tbl_tbl_tbl_tbl_tbl_tbl_
..................
SELECT * FROM orders WHERE order_date = DATEADD(DAY, DATEDIFF(DAY
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY OrderID

SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
JOIN JOIN ON ON.id = JOIN.id = JOIN.id = JOIN.id
CASE WHEN ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT SUM(CASE WHEN reportingservice = 'A' THEN 1 ELSE 0 END) A
v_________________
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table2
SELECT TOP 3 * FROM ( SELECT TOP 3 * FROM YourTable ORDER BY YourColumn DESC
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT COUNT(DISTINCT name) FROM table WHERE name = 'John'
SELECT * FROM ( SELECT *, (SELECT COUNT(id) FROM table1 WHERE id
[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [
SELECT a.id, a.name, a.address, a.phone, a
select id, sum(value) from ( select id, value, row_number()
ALTER TABLE ADD DEFAULT DEFAULT DEFAULT;
SELECT a.id, a.name, a.address, a.address, a
1. 1. 1. 2. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3. 3.
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
UPDATE table1 SET value = value + value WHERE id IN (SELECT id FROM table1)
SELECT COUNT(DISTINCT (CASE WHEN A.ID = 1 THEN A.ID ELSE
SELECT COUNT(DISTINCT table_name) FROM information_schema.columns WHERE table_
let let let let let let let let let let let let let let let let let let
SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable WHERE name = '
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT SUM(CASE WHEN (DATEPART(YEAR,DATEPART(YEAR,DATEPART
UPDATE [dbo].[MyTable] SET [dbo].[MyTable]
MATCH(name) AGAINST('''''''''''
REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG
redis-cli redis-cli redis-cli redis-cli redis-cli redis-cli
SELECT COUNT(DISTINCT t1.id) FROM table1 t1 JOIN table2 t
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date1 =

ALTER TABLE [dbo].[MyTable] ADD CONSTRAINT [dbo].[My
SELECT IFNULL(IFNULL(IFNULL(IFNULL(IFNULL(IFNULL
SELECT MONTH(date_name) AS Month, COUNT(DISTINCT MONTH(date_
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT u.user_name, u.user_email, u.user_email
select count(distinct(id)) from (select count(distinct(id)) as count
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table WHERE (column1 IN ('A','B','C','D','
..................
SELECT COUNT(DISTINCT ID) FROM your_table WHERE ID IN (SELECT ID FROM
SELECT DISTINCT t1.id, t1.name, t1.value, t2.value FROM
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table t2 WHERE t2.id =
SELECT a.id, a.name, a.address, a.phone, a
::::::::::::::::::
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM INFORMATION_SCHEMA.TABLE_STATISTICS WHERE TABLE_NAME =
MATCH(x,y,z) AGAINST(x,y,z)
SELECT AVG(AVG(value)) FROM (SELECT AVG(value)) a
public public public() { } public public public() { } public public() { } public
SELECT COUNT(DISTINCT a.id) FROM a LEFT JOIN b ON a.id
SELECT * FROM dbo.tbl_tbl_tbl_tbl_tbl_tbl_
CASE WHEN @@ ='' THEN ELSE END
MERGE INTO dbo.dbo.dbo.dbo.dbo.
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
..................
..................
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = '
UPDATE [dbo].[tbl_user] SET [user_id] = [
,,,,,,,,,,,,,,,,,,
CREATE TABLE new_user_role ( role_id INT, role_id INT,
hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate
..................
SELECT MAX(value) FROM table1 WHERE value = (SELECT MAX(value) FROM
SELECT * FROM ( SELECT * FROM [table] WHERE [date] >= DATEADD(
CREATE TABLE [dbo].[tbl_user_role_role_role_role
SELECT a.id, a.name, a.address, a.address, a
mongodb:mongodb:mongodb:mongodb:mongodb:mongodb:mongodb:mongodb:mongodb:
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT SUM(value) / SUM(value) AS total FROM table
SELECT * FROM mytable WHERE mycolumn LIKE '%' + search_string + '%'
..................
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *

= = = = = = = = = = = = = = = = = =
declare my_cursor my_cursor my_cursor my_cursor my_cursor my_
SELECT * FROM ( SELECT * FROM table1 WHERE parent_id = 1 UNION ALL
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE id = table.id
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table2
= = = = = = = = = = = = = = = = = =
..................
..................
SELECT * FROM ( SELECT * FROM [dbo].[Categories] WHERE [Category]
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
inventory inventory inventory inventory inventory inventory inventory inventory inventory inventory inventory inventory inventory inventory inventory inventory inventory inventory
SELECT * FROM table WHERE (@@search = '^[[:<:]]')
SELECT DATEADD(DAY, DATEDIFF(DAY, GETDATE()), GETDATE())
MERGE INTO new_table AS old_table AS new_table ON new_table
UPDATE SET._______________
SELECT regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [ID
declare @sql varchar(max) set @sql = 'CREATE DATABASE'+ @database
UPDATE mytable SET mycolumn = CONCAT('ALTER TABLE ', mycolumn, ',
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT person, min(date) AS min_date FROM table1
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM style WHERE style_id IN (SELECT style_id FROM style WHERE style
= = = = = = = = = = = = = = = = = =
UPDATE a SET a.b = b.c FROM a INNER JOIN b ON a.
public static classCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustom
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
INSERT INTO @table1 SELECT... FROM @table2

flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
SELECT COUNT(tag_id) FROM tags WHERE DATE(tag_date) = DATE
SELECT * FROM ( SELECT * FROM table WHERE id = (SELECT TOP 1 id FROM table
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM sys.tables
UPDATE a SET a.id = a.id FROM a INNER JOIN b ON a.
SELECT a.id, a.name, a.description, a.category, a
def def = = = = = = = = = = = = = = = =

SELECT SUM(CASE WHEN WHEN WHEN = THEN THEN ELSE END) AS SUM, SUM(
SELECT * FROM table1 WHERE (@param1 IS NULL OR @param1 = '
SELECT * FROM mytable ORDER BY (CASE WHEN col1 = 'value1' THEN 1

SELECT * FROM table WHERE DATE(date) BETWEEN DATE(NOW()) AND DATE(
SELECT * FROM mytable ORDER BY DATEPART(MONTH, mydate) DESC, DATE
SELECT * FROM ( SELECT * FROM table WHERE id = (SELECT MAX(id) FROM
..................
select id, min(date) as first_date, max(date) as last
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
..................
SELECT a.id, a.name, a.address, a.phone, a
SELECT a.id, a.name, a.email, a.phone, a
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [
SELECT * FROM table WHERE DATE_ADD(date, DATEDIFF(date, @start
SELECT MIN(date) AS mindate, MAX(date) AS maxdate FROM (
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date_created
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
CREATE PROCEDURE [dbo].[GetAllUsers] @user_id int
SELECT SUM(CASE WHEN x = 1 THEN y ELSE x END) AS x_1, SUM
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM mytable WHERE mycolumn ='somevalue'
SELECT id, name, value FROM ( SELECT id, name, value FROM ( SELECT id
CREATE TABLE [dbo].[MyTable] ( [MyColumn] [int]
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT * FROM ( SELECT * FROM product_product_product_relationships WHERE product_
..................
SELECT * FROM ( SELECT * FROM accounts WHERE account_id = 1 AND account_id
SELECT * FROM (SELECT * FROM table ORDER BY ABS(ABS(ABS
SELECT * FROM ( SELECT * FROM MyTable ORDER BY [Order] DESC ) AS t
SELECT COUNT(customer_id) FROM sys.dm_exec_sessions WHERE session_
SELECT name, rating FROM rating WHERE rating = (SELECT MIN(rating) FROM rating WHERE
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT SUM(CASE WHEN t.date = '01/01/2012' THEN t.amount
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM mytable WHERE parent_id IN (SELECT parent_id FROM mytable
SELECT * FROM table WHERE (column1 = 'x' AND column2 = 'y
INSERT INTO Table1 (col1,col2,col3) SELECT col1,col2,col3
SELECT SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB
..................
SELECT COUNT(DISTINCT (CASE WHEN col1 = 'A' THEN 1 ELSE 0
SELECT * FROM Table1 WHERE DATEDIFF(day, GETDATE()) < 3
SELECT * FROM table WHERE (@key = 'key1' AND (@key = '
hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM your_table WHERE your_column IN ('A','B','C','
SELECT MIN(value) FROM ( SELECT value FROM table1 WHERE value <= 4 ) x
CREATE PROCEDURE [dbo].[GetAllProducts] @ProductID int AS
SQL:::::::::::::::::
SELECT COUNT(DISTINCT c.id) FROM c LEFT JOIN d ON d.id
SELECT SUM(CASE WHEN [Date] = '01/01' THEN [Date] ELSE [
..................
------------------
CREATE TABLE [dbo].[tbl_a_b] ( [a_id
SELECT * FROM items WHERE item_id IN (SELECT item_id FROM items WHERE item
SELECT * FROM table WHERE (column1 = -1 OR column1 = -1 OR column1
SELECT p.name, p.group_id, p.name, p.group
SELECT * FROM table1 WHERE (@user = 'user' AND @user = '
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT CASE WHEN (somecondition) THEN 1 ELSE 0 END AS somecondition FROM sometable
::::::::::::::::::
CREATE INDEX idx_index_name ON my_table (name, index_name)
SELECT @xml.value('@ns:ns:ns:ns:ns:ns
,,,,,,,,,,,,,,,,,,
SELECT DATENAME(day,value) AS [Date], SUM(value) AS [
public function getEntity(entity $entity) { return $entity->get('entity'); }
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col ORDER
SELECT * FROM tree WHERE EXISTS ( SELECT 1 FROM tree WHERE tree.id = tree.
SELECT * FROM ( SELECT col1, col2, col3, col4, col5, col6, col
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
UPDATE a SET a.b = b.c FROM a INNER JOIN b ON a.
SELECT * FROM table WHERE (column1 IN ('A', 'B', 'C',
((((((((((((((((((
SELECT DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT COUNT(DISTINCT [Date]) AS CountOfDates FROM YourTable
SELECT * FROM [dbo].[tbl_user_role_role_role_
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
SELECT DATEPART(hh, [Date]) AS [Date], DATEPART(hh,
SELECT CONVERT(VARCHAR(10), CONVERT(DATE, CONVERT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
201201201201201201201201201201201201201201201201201201
SELECT SUBSTRING(name,1,3) AS name, SUBSTRING(name,1,3)
SELECT SUM(CASE WHEN a.date = '01/01' THEN 1 ELSE 0 END)
SELECT a.id, a.name, a.address, a.address, a
INSERT INTO [dbo].[tbl_test] ([id], [name], [
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
<cfquery name="tag" datasource="mydatabase.mydatabase.mydatabase.
SELECT * FROM mytable WHERE date_column >= NOW() - INTERVAL 1 DAY AND date
SELECT SUM(CASE WHEN date = 'now' THEN amount ELSE 0 END) AS sum
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
1. 1. 2. 3. 3. 3. 3. 3. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT DISTINCT a.id, a.name, a.email, a.phone,
If(([([([([([([([([([([([([([([([([
SELECT DATEADD(DAY, DATEDIFF(DAY, GETDATE()), GETDATE()) FROM
JOIN JOIN ON ON.id = JOIN.id_user = ON.id_user
CREATE TRIGGER dbo.MyTrigger ON dbo.MyTable AFTER INSERT AS BEGIN
REGEXP '^[[:digit:]][[:digit:]][[:digit:
..................
SELECT a.id, a.name, a.age, a.age, a
SELECT * FROM ( SELECT * FROM table1 WHERE (@param1 = 'value1'
SELECT MAX(version) FROM version WHERE version = 1
SELECT * FROM ( SELECT * FROM table1 WHERE (condition1 = 'A' AND
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT())))) FROM d
the the the the the the the the the the the the the the the the the the
SELECT * FROM ( SELECT * FROM mytable WHERE mycolumn IN ('a','b','
SELECT DATEDIFF(day, DATEADD(day, DATEDIFF(day, DATEADD
SELECT [Group], [Group], [Group], [Group], [Group], [Group
..................
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id IN (
GO USE GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO
..................
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
..................
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'name')
..................
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT COALESCE(NULL, '') + COALESCE(NULL, '')
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT id, name, SUM(value) FROM ( SELECT id, name, value FROM
,,,,,,,,,,,,,,,,,,
..................
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
CREATE TABLE [dbo].[MyTable] ([MyColumn] nvarchar(50)
SELECT * FROM mytable WHERE DATEPART(YEAR, [Date]) = DATEPART(
,,,,,,,,,,,,,,,,,,
SELECT SUM(CASE WHEN WHEN IN THEN ELSE END) FROM your_table
def def def def def def def def def def def def def def def def def def
SELECT DATE, DATE, DATE, DATE, DATE, DATE, DATE, DATE, DATE
$group = $group->group('name')->group('name')->group('
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT COUNT(DISTINCT c.id) FROM categories c INNER JOIN categories c ON c
SELECT CASE WHEN CHARINDEX(' ', @column) > 0 THEN @column ELSE '' END
SELECT COUNT(DISTINCT a.id) AS count FROM table1 a LEFT JOIN table
SELECT COUNT(comment_id) FROM comments WHERE comment_id ='some_comment
ORDER BY (weightweightweightweightweightweightweightweightweightweightweightweightweightweightweight
use use use use use use use use use use use use use use use use use use
SELECT * FROM ( SELECT * FROM mytable WHERE id = @id AND (@status
SELECT * FROM ( SELECT * FROM table WHERE id = 1 ORDER BY id DESC LIMIT 3
UPDATE t SET t.parent_id = t.id FROM t JOIN (SELECT parent
SELECT u.user_name, u.user_email, u.user_email
SELECT * FROM table WHERE value BETWEEN @start AND @end
SELECT * FROM ( SELECT category, COUNT(category) AS cnt FROM mytable GROUP BY
DELETE FROM child WHERE parent.parent_id = child.parent_id AND child.
IF @@ = 1 THEN ELSE END
DELETE FROM FROM WHERE WHERE NOT;;;;;;;;;;;;
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
UPDATE a SET a.a_b_c_d_d_d_d
UPDATE [dbo].[tbl_user_update] SET [user_id]
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT MAX(value) FROM table1 WHERE value IN (SELECT MAX(value) FROM
SELECT * FROM sys.tables t INNER JOIN sys.tables t1 ON t.object
SELECT * FROM table1 t1 LEFT JOIN table2 t2 ON t1.id =
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
jdbc.jdbc.jdbc.jdbc.jdbc.jdbc.jdbc.jdbc.jdbc.
SELECT CONVERT(CHAR(10), CONVERT(CHAR(10), CONVERT
SELECT * FROM ( SELECT * FROM mytable WHERE YEAR(date) = YEAR(date
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col ORDER
ALTER TABLE mytable ADD CONSTRAINT mytable_fk FOREIGN KEY (mycolumn) REFERENCES
SELECT DISTINCT c.id, c.name, c.name, c.name,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY item ORDER

SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM ( SELECT * FROM mytable WHERE mycolumn = 'value' ) AS
postgresql:::::::::::::::::
SELECT * FROM ( SELECT (SELECT (rownum) OVER (ORDER BY (SELECT (
SELECT SUBSTRING(CAST(CAST(CAST(CAST(CAST(CAST(CAST(
UPDATE a SET a.a_b_c_d_d_d_d
declare l_sql varchar2(100); l_sql varchar2(100); begin l_
SELECT * FROM ( SELECT * FROM table1 WHERE col1 = 'A' UNION
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT SUM(CASE WHEN status = 'active' THEN 1 ELSE 0 END) active,
SELECT DATEADD(d, DATEDIFF(d, DATEADD(d, DATEDIFF
ALTER TABLE [dbo].[MyTable] DROP IDENTITY IDENTIFIED BY [
SELECT * FROM table WHERE date_time > (SELECT MAX(date_time) FROM

SELECT SUM(value) FROM table WHERE (value = 'A' OR value = '
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
UPDATE contact SET contact_id = contact_id WHERE contact_id = (SELECT contact
SELECT * FROM table WHERE (column1 LIKE '%' OR column1 LIKE '%' OR
SELECT friend_id FROM friends WHERE friend_id IN (SELECT friend_id FROM friends
DROP TABLE IF EXISTS 'drop_tables' GO DROP TABLE IF EXISTS 'drop_tables
WHERE (DATEPART(YEAR,GETDATE()) = DATE AND DATEPART(YEAR,
DELETE FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT COUNT(DISTINCT [Group]) FROM [MyDB].[dbo].[
SELECT * FROM master INNER JOIN detail ON master.id = detail.master_id INNER
MERGE INTO dbo.dbo.dbo.dbo.dbo.
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
..................
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM Table1 WHERE NOT EXISTS (SELECT 1 FROM Table2 WHERE Table1.ID
SELECT * FROM ( SELECT id, MIN(date) AS first_date FROM table1
INSERT INTO new_table (id, name, email, email, email, email,
SELECT * FROM (SELECT * FROM table1 WHERE id = @id) t1
WITH c AS ( SELECT'''''''''''' '
..................
SELECT MIN(value) AS minvalue, MAX(value) AS maxvalue FROM table
1. 1. 2. 3. 3. 3. 3. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4.
..................
,,,,,,,,,,,,,,,,,,
..................
SELECT * FROM table1 WHERE (column1 = 'A' AND column2 = '
,,,,,,,,,,,,,,,,,,
..................
SELECT * FROM table1 WHERE (@@ROWCOUNT = 0) OR (@ROWCOUNT
SELECT * FROM tbl_user WHERE id IN (SELECT id FROM tbl_user WHERE id
SELECT SUM(CASE WHEN A.A_A_A_A_A_A
SELECT COUNT(DISTINCT(user)) FROM users WHERE user = 'user'
CREATE TABLE [dbo].[MyTable] ( [ID] INT NOT NULL PRIMARY
SELECT * FROM table WHERE (@start BETWEEN @end AND @start) AND (
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
select cast(cast(number as number), 'float') / cast(number as number
public static List<T> T(this T query) { return query.Select(
SELECT COUNT(DISTINCT(user)) FROM users LEFT JOIN users_user ON users.
SELECT time FROM time WHERE time < (NOW() - INTERVAL INTERVAL 1 HOUR)
SELECT * FROM Table1 ORDER BY MONTH(DateColumn)
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
SELECT * FROM dual WHERE NOT EXISTS (SELECT 1 FROM dual WHERE dual.id = dual
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
SELECT [Date], [Date], [Time], [Group], [Group], [Group
public public public public public() { } public public public public() { } public public public
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
SELECT a.id, a.name, a.email, a.email, a
CREATE INDEX IX_INDEX ON INDEX (INDEX_NAME) INCLUDE (INDEX_VERSION
SELECT a.id, a.name, a.address, a.address, a
::::::::::::::::::
SELECT * FROM table WHERE col1 = 'value1' AND col2 = 'value2'

,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT a.id, a.name, a.address, a.address, a
MIN(date)
ALTER TABLE [dbo].[MyTable] ADD CONSTRAINT [FK_MyTable_
SELECT * FROM (SELECT * FROM table WHERE column1 = 'A' AND column2

SELECT TOP 1 ID, Name, Value FROM ( SELECT ID, Name, Value, ROW

UPDATE table1 SET column1 = (SELECT MAX(column1) FROM table1 WHERE table
SELECT * FROM mytable WHERE MATCH(word) AGAINST ('A' IN BOOLEAN
SELECT * FROM ( SELECT * FROM your_table WHERE your_column = 'value'
SELECT a.name, a.address, a.address, a.address, a
TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
..................
CREATE TABLE [dbo].[Table] ( [ID] INT IDENTITY(1,1)
SELECT a.id, a.name, a.email, a.email, a
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
SELECT p.id, p.name, p.price, p.price, p
SELECT * FROM ( SELECT * FROM table WHERE x = x AND y = y ) t
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
= = = = = = = = = = = = = = = = = =
::::::::::::::::::
SELECT * FROM Table1 WHERE (@version = '1.0' OR @version = '
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
re re re re re re re re re
SELECT [Name] AS [Name], [Name] AS [Name], [Name]
SELECT CASE WHEN CHARINDEX(' ', @name) > 0 THEN @name ELSE @name
IF @@ROWCOUNT = 0 THEN 'INSERT INTO @table (id,name,
SELECT CASE WHEN ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
SELECT * FROM table WHERE TO_TIMESTAMP(date_to_date(date_to
INSERT INTO [dbo].[tbltbltbltbltbltbltbltbltbltbltbl
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT * FROM table1 WHERE (column1 = 'value' AND column2 = '
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( TIMESTAMP1
SELECT PasswordHash(PasswordHash(PasswordHash(PasswordHash(PasswordHash(PasswordHash
UPDATE d SET d.d = d.d + 1 WHERE d.d >= DATE
SELECT * FROM ( SELECT MIN(date) AS first_date, date FROM your_
..................
..................
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID AND
..................
SELECT COUNT(DISTINCT SUBSTRING(col, 1, CHARINDEX(' ', col) -
CREATE INDEX INDEX_INDEX_INDEX_INDEX_INDEX_INDEX_INDEX_INDEX_
..................
SELECT * FROM table WHERE DATEPART(hh, [Date]) = DATEPART(hh
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
UPDATE [dbo].[tbl_test] SET [dbo].[tbl_
..................
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
INSERT INTO [dbo].[MyTable] ([Column1], [Column2], [Column
CREATE TABLE [dbo].[MyTable] ( [AutoIncrement] INT IDENTITY
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(DISTINCT a.id) AS CountOfA, COUNT(DISTINCT
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
UPDATE d SET d.d = d.d FROM d JOIN d ON d.d
max(max(max(max(max(max(max(max(max(
CREATE INDEX IX_MyIndex ON MyTable (MyColumn) INCLUDE (MyColumn
unix_timestamp -t -i -i -i -i -i -i -
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT * FROM a UNION ALL SELECT * FROM b
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Product
CREATE TRIGGER [dbo].[SplitIntoTable] ON [dbo].[
CREATE PROCEDURE [dbo].[GetAllUsers] @user_id int
SELECT * FROM OPENROWSET( 'SELECT * FROM OPENROWSET('Microsoft.J
UPDATE a SET a.a = a.b FROM a WHERE a.a = '
SELECT COUNT(DISTINCT user_id) FROM users WHERE user_id = 1 AND
ALTER INDEX INDEX_NAME_NAME_NAME_NAME_NAME_NAME_NAME_
..................
SELECT * FROM sys.tables WHERE name ='my_table'
SELECT * FROM ( SELECT * FROM mytable ORDER BY id DESC LIMIT 2 ) t ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.id, a.name, a.email, a.phone, a
my $date = '2012-07'; my $date2 = '2012-07'; my $date
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM your_table WHERE your_condition
SELECT a.id, a.name, a.email, a.email, a
SELECT CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
SELECT FROM FROM WHERE TO(DATE(DATE(DATE(DATE(DATE(DATE(
SELECT * FROM table WHERE DATE(date) = DATE(date) AND DATE(date
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT SUM(CASE WHEN col1 = 1 THEN col2 ELSE 0 END) AS col
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
..................
..................
SELECT * FROM table1 WHERE (@from = 'from' AND @to = '
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
GRANT CONNECT TO 'your_schema_name'@'''@''
SELECT * FROM table WHERE (column1 = 'value1' AND column2 = 'value
SELECT SUM(value) FROM ( SELECT value FROM table1 WHERE value = 'value'
SELECT * FROM [dbo].[MyTable] WHERE [Column] IN ('A
IIf(IIf(IIf(IIf(IIf(IIf(
SELECT * FROM my_table WHERE my_column BETWEEN @latitude AND @longitude
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
SELECT * FROM Table1 WHERE DATE(Date) = DATE(Date) AND DATE(
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT a.id, a.name, a.address, a.address, a
UPDATE my_table SET my_column = my_column + 1 WHERE my_column
INSERT INTO [dbo].[tbl_test] ( [id], [name
SELECT COUNT(DISTINCT (CASE WHEN (A.A_A_A_A
var query = from c in context.Categories join c in context.Categories on c.
postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql postgresql
SELECT * FROM table WHERE creation_date > DATE_SUB(NOW(), INTERVAL 30 MINUTE
postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.
SELECT COUNT(DISTINCT user_id) AS num_users, COUNT(DISTINCT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN
SELECT * FROM table1 a INNER JOIN table2 b ON a.id = b.
..................
UPDATE table1 SET value = value + 1;
..................
select * from ( select row_number() over (order by id) as seqnum
SELECT * FROM table WHERE FIND_IN_SET(' ', field) > 0
use use use use use use use use use use use use use use use use use use
..................
If((([([([([([([([([([([([([([([([
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT CONVERT(VARCHAR(10), CONVERT(DATE, CONVERT
MIN(date_time_time_time_time_time_time) FROM (
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM ( SELECT DISTINCT parent_id FROM table_name UNION ALL SELECT DISTINCT
SELECT COUNT(DISTINCT [Date]) FROM [dbo].[tbl_date]
..................
SELECT COUNT(DISTINCT (CASE WHEN col1 = 'A' THEN 1 ELSE 0
=UFF(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
SELECT SUBSTRING(col, 1, CHARINDEX(' ', col) - CHARINDEX(' ',
TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT SUM(CASE WHEN a.type = 'A' THEN 1 ELSE 0 END)
For Each Each Each Each Each Each Each Each Each Each Each Each Each Each Each Each Each
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY date ORDER
..................
SELECT DISTINCT ON (col1) col1 FROM (SELECT DISTINCT ON (col1) col1
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT * FROM Table1 WHERE (@param1 = 'A'
SELECT SUBSTR(name,1,1) FROM dual CONNECT BY LEVEL LEVEL LEVEL LEVEL 1
DATEDIFF(MIN(DATE(DATE(DATE(DATE(DATE(DATE(DATE
SELECT * FROM mytable WHERE mytable.field1 LIKE 'x%' AND my
MATCH(name) AGAINST(name) MATCH(name) MATCH(name)
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
SELECT * FROM table1 WHERE (@param1 = 'value1' AND @param2
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [User
SELECT id, SUM(value) FROM ( SELECT id, value FROM table1 UNION
SELECT ID, COUNT(DISTINCT ID) AS Count FROM (SELECT ID, COUNT(
@@ROWCOUNT = 0 @@ROWCOUNT = 1
var query = from p in context.Posts join c in context.Categories on c.
..................
SELECT a.id, a.name, a.email, a.email, a
..................
UPDATE a SET a.value = b.value FROM a INNER JOIN b ON a.
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table WHERE column = 'A' AND
SELECT a.id, a.name, a.price, a.price, a
SELECT MAX(date_time_time_time_time_time_time_time
SELECT * FROM INFORMATION_SCHEMA.TABLE_USAGE WHERE INFORMATION_SCHEMA.
CREATE VIEW v_flat_flat_flat_flat_flat_flat_flat_
SELECT COUNT(id) FROM table1 WHERE name NOT IN (SELECT name FROM table2)
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM table WHERE (@start BETWEEN @end AND @start) OR (
..................
..................
..................
SELECT a.id, a.name, a.address, a.address, a
SELECT SUM(CASE WHEN DATE = DATE THEN 1 ELSE 0 END) AS SUM_DATE
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch
SELECT AVG(value) FROM ( SELECT AVG(value) AS value FROM table
IF(@@row = @row + 1, @row := @row + 1)
SELECT * FROM ( SELECT * FROM mytable WHERE date_time > DATE_TIME )
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
CREATE TABLE A ( B C )
SpatialData.Add(x, y, z)
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT COUNT(DISTINCT id) FROM table1 WHERE id IN (SELECT id FROM table
or. or. or. or. or. or. or. or. or.
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col ORDER
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
,,,,,,,,,,,,,,,,,,
SELECT LEFT(col1, col2) + LEFT(col2, col3) + LEFT(col
SELECT * FROM sys.database_principals WHERE name = 'MyFunctionName'
SELECT a.id, a.name, a.email, a.email, a

SELECT CASE WHEN (ISTrue(IsTrue(IsTrue(IsTrue(IsTrue
SELECT FROM FROM FROM TO TO TO TO TO TO TO TO TO TO TO TO TO TO
SELECT STUFF(SELECT STUFF(SELECT ST FROM ST FOR XML PATH('')),1,1,
..................
SELECT DISTINCT ON (id) id FROM ( SELECT id, name, row_number()
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM [dbo].[MyTable] WHERE [MyColumn] LIKE '%
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM mytable WHERE MATCH(text) AGAINST ('*' IN BOOLEAN
public void register(String name) { super.register(name); }
mysql - - - - - - - - - - - - - - - - -
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
UPDATE contact SET contact_id = contact_id WHERE contact_id = contact_id
GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY
INSERT INTO [dbo].[dbo].[dbo].[dbo].
SELECT DATEADD(MINUTE, DATEDIFF(MINUTE, GETDATE(), GETDATE
SELECT * FROM TableA a INNER JOIN TableB b ON a.id = b.
SELECT * FROM (SELECT * FROM your_table) x WHERE x.x = x
public void void...............
SELECT * FROM table1 WHERE (@var1 = 'A' AND @var2
SELECT SUM(amount) FROM table1 WHERE id = $id AND date_created >=
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
..................
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
201201201201201201201201201201201201201201201201201201
..................
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT a.id, a.name, a.address, a.phone, a
UPDATE A SET A.B = B.C FROM A INNER JOIN B ON A.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT COUNT(DISTINCT (CASE WHEN col1 = 'A' THEN 1 ELSE 0
SELECT COUNT(DISTINCT category) FROM categories WHERE category IN ('A', 'B',
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM mytable WHERE id = @id AND (@type
..................
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (@user =
DELETE FROM table WHERE id IN (SELECT id FROM table WHERE status = 'new')
SELECT * FROM table WHERE date_created >= (SELECT MAX(date_created) FROM
CREATE TABLE new_new_new_new_new_new_new_new_
ALTER TABLE MYTABLE ADD COLUMN MYCOLUMN INT;
SELECT CONVERT(CHAR(10), CONVERT(CHAR(10), CONVERT
SELECT client_id, MAX(time_stamp) FROM table1 GROUP BY client_
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
WITH recursive_tree AS ( SELECT * FROM tree WHERE parent = 'A' UN UN
ALTER TYPE dbo.YourColumn ADD CHECK(YourColumn = 'YourColumn')
SELECT a.id, a.name, a.address, a.address, a
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE

SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Order
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT * FROM ( SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE id
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
UPDATE [dbo].[tbl_user] SET [user_id] = [
SELECT SUBSTRING(col, 1, CHARINDEX(' ', col) - 1) AS col FROM
SELECT * FROM ( SELECT name, month, ROW_NUMBER() OVER (PARTITION BY
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
select @percent := @percent / @percent + @percent * 100
,,,,,,,,,,,,,,,,,,
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = @ID AND (@Date
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Group
DELETE FROM table WHERE NOT EXISTS (SELECT 1 FROM table t2 WHERE t2.id =
SELECT * FROM db2 WHERE TO_CHAR(SYSDATE, 'YYYYMMDD
CREATE TABLE TABLE____(__________
SELECT COUNT(MONTH(DATE(DATE(DATE(DATE(DATE(DATE(DATE
SELECT SUM(price) FROM ( SELECT SUM(price) AS total_price FROM orders
WHERE (@[[[[[[[[[[[[[[[
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
WHERE (user_id =? OR user_id =?)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT DATEADD(YEAR, DATEDIFF(YEAR, GETDATE()), GETDATE())
,,,,,,,,,,,,,,,,,,
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE NULL END)
SELECT COUNT(DISTINCT (CASE WHEN col1 = 'A' THEN 1 ELSE 0
CREATE VIEW v_view_name AS SELECT v_name, v_name FROM v
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT a.id, a.name, a.address, a.address, a
UPDATE a SET a.b = b.c FROM a a JOIN b b ON a
SELECT DISTINCT a.id, a.name, a.email, a.phone,
..................
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM table WHERE time_diff(time_diff(time_diff(time
SELECT * FROM sys.dm_exec_requests_exec_requests_exec_requests
MERGE INTO [dbo].[MyTable] AS t USING [dbo].
..................
SELECT SUM(DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
JOIN JOIN JOIN JOIN ON ON ON ON.id = JOIN.id_user = ON
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
CREATE TABLE my_table ( my_column text, my_column text, my_
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
import import import import import import import import import import import import import import import import import import
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT COUNT(DISTINCT (DATE(date_start) + DATE(date_end
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date_created
SELECT * FROM ( SELECT * FROM table WHERE id = 'A' AND name = '
UPDATE table1 SET value = value + 1 WHERE EXISTS (SELECT 1 FROM table2 WHERE
SELECT * FROM your_table ORDER BY CASE WHEN your_column ='' THEN WHEN
..................
SELECT * FROM customers WHERE DATEDIFF(day, GETDATE()) = 0
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
...,,,,,,,,,,,,,,,
SELECT DISTINCT a.id, a.name, a.email, a.email,
..................
CREATE TABLE mytable ( id INT IDENTITY(1,1) PRIMARY KEY, name VARCHAR(255)
SELECT DISTINCT ON (id) id, name, email, email, email_address,
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT CASE WHEN (CAST(CAST(CAST(CAST(CAST(CAST(CAST(
SELECT * FROM table WHERE (column1 LIKE '%' + column2 + '%' OR
UPDATE table1 SET value = value + 1 WHERE EXISTS (SELECT 1 FROM table2 WHERE
DELETE FROM table WHERE time_stamp >= NOW() - INTERVAL 1 HOUR
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM [dbo].[MyTable] WHERE ( ( ( ( [ [
SELECT * FROM ( SELECT * FROM [dbo].[YourTable] WHERE [Column
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
SELECT a.id, a.name, a.address, a.phone, a
SELECT a.id, a.name, a.address, a.phone, a
SELECT CONVERT(varchar(10), CONVERT(varchar(10), CON
UPDATE mytable SET mycolumn = SUBSTRING(mycolumn, 1, CHARINDEX('_
use my my my my my my my my my my my my my my my my my
MATCH(name) AGAINST(''name'') AGAINST(''name
UPDATE a SET a.id = a.id FROM a INNER JOIN b ON a.
SELECT COUNT(hour) FROM ( SELECT hour, DATEADD(hour, DATEDIFF(
..................
SELECT MAX(price) FROM ( SELECT MAX(price) AS price FROM mytable )
SELECT user_id, max(value) FROM ( SELECT user_id, value FROM
SELECT * FROM table WHERE FIND_IN_SET('33.*', '3.
CREATE TABLE [dbo].[MyTable] ( [ID] INT IDENTITY(1,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col1,
SELECT DISTINCT DISTINCT DISTINCT FROM ORDER BY NEW NEW NEW NEW NEW NEW NEW NEW NEW NEW NEW
SELECT MIN(date) AS min_date, MIN(date) AS min_date
SELECT * FROM dbo.tbl_users u INNER JOIN dbo.tbl_users
JOIN JOIN ON.id = JOIN.id_user = LEFT.id_user AND
SELECT * FROM table WHERE (@@ROWCOUNT = 0) AND (@@ENDROW
SELECT * FROM Table1 t1 INNER JOIN Table2 t2 ON t1.id =
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
public void register(String name, String password) { jp jp jp jp jp jp jp
TO_CHAR(TO_CHAR(TO_CHAR(TO_CHAR(TO_
SELECT TOP 1 @r := @r + 1 AS sampling FROM (SELECT @r :=
SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable WHERE name = '
SELECT * FROM table WHERE (@param1 = 'value1' AND @param2 =
INSERT INTO table1 (id, name, email, password) SELECT id, name,
SELECT * FROM table WHERE DATE(date) = DATE(NOW()) AND DATE(date
..................
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM your_table WHERE DATE BETWEEN DATE AND DATE
CASE WHEN ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
SELECT SUBSTRING(column, CHARINDEX(' ', REVERSE(column)) - CHAR
SELECT * FROM food_table WHERE food_id IN (SELECT food_id FROM food
SELECT * FROM my_table WHERE my_column LIKE '%' + @ @ + '%
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.id =
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
UPDATE [dbo].[tbl_user_update] SET [user_update_
..................
SELECT a.id, a.name, a.address, a.address, a
UPDATE a SET a.a = a.a FROM a WHERE a.a = '
DELETE FROM ( SELECT id, name, ROW_NUMBER() OVER (PARTITION BY name
SELECT COUNT(DISTINCT c.id) FROM customers c LEFT JOIN customers_customers_
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
SELECT COUNT(DISTINCT user_id) FROM user_data
..................
SELECT SUBSTRING(col, CHARINDEX(' ', SUBSTRING(col, CHARINDEX('
SELECT * FROM dbo.dbo.dbo.dbo.dbo.
anyanyanyanyanyanyanyanyanyanyanyanyanyanyanyanyanyany
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (user_id
SELECT * FROM ( SELECT * FROM table1 WHERE id = @id AND (@name
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch
SELECT TOP 10 * FROM (SELECT TOP 10 * FROM (SELECT TOP 10 * FROM (
SELECT master.id, master.name, master.id, master.name, master
UPDATE [dbo].[MyTable] SET [dbo].[MyTable]
CREATE TABLE A.B.C.C.A (A.A, A.
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.parent_
SELECT * FROM ( SELECT * FROM table1 WHERE time BETWEEN '2014-01-30' AND
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT FROM your_table_name_alias_alias
..................
select sum(value) / count(value) from table
SELECT SUM(CASE WHEN [Date] = 'A' THEN [Date] ELSE 0
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
..................
SELECT * FROM table WHERE DATEPART(hh, @date) = DATEPART(hh
SELECT REGEXP_LIKE(REGEXP_SUBSTR(col, '^[
SELECT TO_TIMESTAMP(TO_DATE(TO_DATE(TO_DATE(TO
SUM(((((((((((((((((
SELECT a.id, a.name, a.email, a.phone, a
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM table WHERE (column LIKE '%' + column + '%' OR column LIKE
CREATE INDEX ON your_table_name (your_column_name)
SELECT MIN(date) AS mindate, MIN(date) AS mindate FROM (
SELECT MONTH(date) AS Month, SUM(CASE WHEN month ='month' THEN
SELECT TOP 10 * FROM ( SELECT TOP 10 * FROM ( SELECT TOP 10 * FROM (
SELECT ROUND(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
SELECT * FROM Table1 UNION ALL SELECT * FROM Table2
SELECT SUM(IF(a.id = 1, a.value, a.value))
UPDATE A SET A.A_ID = A.A_ID FROM A INNER JOIN
SELECT * FROM ( SELECT * FROM Table1 WHERE Date BETWEEN @StartDate AND @EndDate
SELECT * FROM mytable WHERE FIND_IN_SET('123456', my_
WHERE (@StartDate IS NULL OR @StartDate = DATEADD(day, 1, @StartDate
SELECT AVG(value) FROM ( SELECT value FROM table1 UNION ALL SELECT value
SELECT a.id, a.name, a.description, a.date, a
..................
SELECT COUNT(id) FROM ( SELECT id, name, row_number() OVER (
CREATE TEMPORARY TABLE TEMPORARY TABLE TEMPORARY TABLE TEMPORARY TABLE TEMP

SELECT * FROM ( SELECT * FROM table1 WHERE col1 = 'value' AND col
GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
CREATE OR REPLACE PROCEDURE dbo.GetAllUsers(u in varchar2, u
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SUM(CASE WHEN WHEN WHEN = THEN THEN ELSE END)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY Name ORDER
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
declare @xml xml set @xml ='my.my.my.my.my
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
SELECT * FROM table1 a INNER JOIN table2 b ON a.id = b.
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
SELECT ID, SUM(CASE WHEN Type = 'A' THEN 1 ELSE 0 END)

Table A Table B Table B Table C Table D Table A Table A Table B Table C
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM table1 WHERE id = 118 ) x WHERE x.
SELECT * FROM ( SELECT * FROM [dbo].[tbl_user_stats]
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT DATENAME(MONTH,[Date]) AS Month, DATENAME(MONTH,[
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM Table1 WHERE DATEPART(hh,Date) BETWEEN DATEADD(
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col ORDER
mailmailmailmailmailmailmailmailmailmailmailmailmailmailmailmailmailmail
SELECT * FROM table WHERE name LIKE '%' + search_string + '%'
SELECT * FROM ( SELECT * FROM Table1 WHERE (@user = 'user1' AND
CREATE TABLE new_table ( id INT IDENTITY(1,1) PRIMARY KEY, name VARCHAR(
UPDATE table SET status = 'new' WHERE status = 'new'
SELECT * FROM ( SELECT * FROM table WHERE col1 = 'A' AND col2
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
date date date date date date date date date date date date date date date date date date
use use use use use use use use use use use use use use use use use use
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT SUM(CASE WHEN a.value = 'A' THEN a.value ELSE 0
SELECT * FROM ( SELECT ROW_NUMBER() OVER (ORDER BY id) id, id
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
SELECT a.id, a.name, b.name FROM a LEFT JOIN b ON
SELECT a.id, a.name, a.price, a.price, a
select * from ( select *, row_number() over (order by id) rn
SELECT * FROM ( SELECT * FROM YourTable WHERE YourColumn = 'A' ) t
USE [YourProcedure] GO USE [YourProcedure] GO USE [YourProcedure] GO
SELECT * FROM table1 a INNER JOIN table2 b ON a.id = b.
..................
SELECT TOP 1 pk FROM (SELECT pk FROM table WHERE pk = 'A' ORDER BY
SELECT * FROM table1 WHERE (@@ROWCOUNT = 0 AND table1.id =
select to_date(to_date(to_date(to_date(to
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (id = 2
SELECT * FROM my_table WHERE my_column ='some_column' AND my
SELECT * FROM mytable WHERE mycolumn LIKE '%' + @mycolumn + '%'
SELECT SUBSTRING(path, 1, CHARINDEX(' ', path) - 1) FROM ( SELECT
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
public void register(string name) { // // // // // // // // // //
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM ( SELECT * FROM table WHERE (@date = date AND @date <=
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT TOP 1 @sequence = (SELECT TOP 1 @sequence := @sequence + 1 FROM
def if if if then else end end
SELECT SUM(value) FROM ( SELECT value FROM table1 UNION ALL SELECT value FROM
SELECT area, count(area) FROM ( SELECT area, count(area) AS cnt
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
def self.count_by_user_user_user_user_user_user
SELECT * FROM table WHERE (column1 = 'A' AND column2 = 'B

SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
.hhhhhhhhhhhhhhhhh
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY ID) AS
SELECT * FROM your_table WHERE your_column ='some_column'
SELECT DATEADD(DAY, DATEDIFF(DAY, GETDATE()), GETDATE()) FROM
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT * FROM my_table WHERE my_column = 'value'
UPDATE [dbo].[tbl_test] SET [dbo].[tbl_
INSERT INTO [dbo].[MyTable] ([MyColumn]) ([MyColumn])

DELETE FROM ( SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION
SELECT * FROM (SELECT * FROM your_table WHERE your_column = 'value'
------------------
SELECT SUBSTRING(column, 1, CHARINDEX('-', column) - CHARINDEX('-',
UPDATE table SET value = REPLACE(value,'', '') WHERE value IN ('A','
UPDATE table SET value = CASE WHEN value = 'value1' THEN 'value1' WHEN value
SELECT caller_id FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE caller_id
::::::::::::::::::
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
CREATE TABLE address_address(address_address_address_address_address_address_
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *

CREATE PROCEDURE [dbo].[usp_GetData] ( @Data varchar
update set = where where and and and and and and and and and and and and and
SELECT * FROM Table1 WHERE DATEDIFF(MINUTE, GETDATE()) < 30
SELECT * FROM Table1 t1 INNER JOIN Table2 t2 ON t1.id =
SELECT SUBSTRING(column, 1, CHARINDEX(' ', column) - 1) FROM table
UPDATE A SET A.B = B.B FROM A INNER JOIN B ON A.
SELECT * FROM ( SELECT t.*, ROW_NUMBER() OVER (PARTITION BY Account
SELECT * FROM your_table WHERE your_condition
Table: Table: Table_name Table: floor_id Table: floor_id Table
INSERT INTO Table1 (id, name, email, email, email, email, email
SELECT DATENAME(YEAR, [Date]) AS [Date], DATENAME(MONTH,
DATE DATE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
UPDATE table1 SET value = value1 WHERE value1 IN (SELECT value FROM table2
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
postgresql:::::::::::::::::
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
SELECT * FROM ( SELECT * FROM table WHERE (@rn := @rn + 1) ORDER
SELECT COUNT(DISTINCT id) FROM (SELECT id FROM table1 WHERE id = 1)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
..................
::::::::::::::::::
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
INSERT INTO Table1 (id, name, email, email, email, email, email
table_name (name, date, time, time, time, time, time,
1. 2. 3. 3. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4.

------------------
UPDATE table1 SET NEWID = NEWID() WHERE NEWID = NEWID()
::::::::::::::::::
UPDATE table SET column = SUBSTRING(column, 1, CHARINDEX(' ', column) -
..................
CHECK(state = 'NY')
SELECT AVG(score) FROM (SELECT AVG(score) FROM mytable)
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id INNER
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM ( SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 )
SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID = Table2.ID AND
UPDATE my_table SET my_column = REPLACE(my_column,'', '
SELECT a.id, a.name, a.address, a.address, a
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
UPDATE table1 SET column1 = 'value1' WHERE id = 'value1' AND NOT
SELECT a.id, a.name, a.address, a.address, a
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID AND
UPDATE A SET A.A_ID = A.A_ID FROM A INNER JOIN
SELECT SUM(CASE WHEN [Type] = 'A' THEN [Amount] ELSE 0
SELECT * FROM my_table WHERE (my_column IN ('1','2','3','4
SELECT a.id, a.name, a.address, a.city, a
SELECT COUNT(DISTINCT [user_id]) AS NumUsers FROM (SELECT [user
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT SUBSTRING(column, CHARINDEX(' ', column) + 1, CHARINDEX(' ',
SELECT SUBSTRING(column_name,1,1) + SUBSTRING(column_name,
select regexp_substr(col, '^[[:digit:]]', 1, level)
..................
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
CREATE TABLE [dbo].[MyTable] ( [ID] INT IDENTITY(1,
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE table1.id
SELECT SUM(value) FROM ( SELECT SUM(value) AS sum FROM table1 )
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM table1 WHERE (@user = 'user1' AND @user = '
SELECT a.id, a.name, a.address, a.address, a
SELECT [Group], [Group], [Group], [Group], [Group], [Group

CREATE DATABASE [dbo].[mydatabase] WITH FILE=N'C:\my
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT DISTINCT DISTINCT DISTINCT DISTINCT FROM FROM FROM FROM H H
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY NEWID())
SELECT FROM FROM TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
..................
INSERT INTO new_table (id, name, description) SELECT id, name, description
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY ID) AS
SELECT CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
SELECT * FROM table1 WHERE (@status = 'Y' AND (@status =
message message message message message message message message message message message message message message message message message message
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT COUNT(DISTINCT user_id) FROM users WHERE user_id IN (SELECT
SELECT * FROM TABLE WHERE BET BETWEEN AND AND AND AND AND AND AND AND AND AND
SELECT * FROM table WHERE DATEDIFF(d, GETDATE()) = 0
validation validation validation validation validation validation validation validation validation validation validation validation validation validation validation validation validation validation
SELECT SUM(IIF(IIF(IIF(IIF(IIF(
SELECT COUNT(DISTINCT (CASE WHEN (A.ID = A.ID AND A
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM table WHERE column1 = 'A' AND column2 = 'B'
..................
UPDATE SET... =.. FROM JOIN JOIN ON.id = JOIN.id
SELECT * FROM table WHERE DATEPART(hh, [Date]) = DATEPART(hh
SELECT * FROM mytable WHERE MATCH(text) AGAINST('some text')
SELECT id, SUM(value) AS value FROM ( SELECT id, value FROM table1
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID
SELECT a.id, a.name, a.email, a.email, a
,,,,,,,,,,,,,,,,,,
SELECT * FROM sys.dm_triggers WHERE name = 'MyView' AND type
INSERT INTO [dbo].[tbl_test] (id, name, email,
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT p.id, p.name, p.parent_id, p.name
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
WITH CTE AS ( SELECT * FROM CTE WHERE CTE.ID = 1 UN
..................
SELECT TOP 1 [Transaction] FROM [dbo].[YourTable] WHERE [Transaction
SELECT a.id, a.name, a.address, a.address, a
SELECT a.id, a.name, a.email, a.phone, a
..................
SELECT * FROM ( SELECT * FROM Table1 WHERE Column1 IS NULL OR Column1 IS
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (name = '
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID
CREATE UNIQUE INDEX idx_unique_unique_unique_unique_unique_unique ON [
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
,,,,,,,,,,,,,,,,,,
SELECT u.name, u.name, u.id FROM friends u INNER JOIN friends
,,,,,,,,,,,,,,,,,,
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT a.id, a.name, a.email, a.email FROM a
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
SELECT * FROM ( SELECT * FROM mytable WHERE @param = 'param1' ) t
postgres:::::::::::::::::
MERGE INTO table_name USING table_name ON table_name.id = table
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *

SELECT XMLColumn FROM XMLTable WHERE XMLColumn ='mymymymymymymy
SELECT * FROM mytable WHERE url LIKE '%http://%' OR url NOT LIKE '%
CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
netnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnetnet
SELECT SUM(CASE WHEN a.date = DATEADD(MONTH, DATEDIFF(MONTH
SELECT * FROM mytable ORDER BY DATE(date_to_date(date_to
SELECT TOP 1 * FROM (SELECT TOP 1 * FROM table1 WHERE table1.id =
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT COUNT(DISTINCT condition) FROM table WHERE condition = 1 AND (condition = 1
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (name = '
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
select t1.id, t1.name, t2.name, t2.name, t
SELECT a.id, a.name, a.address, a.address, a
INSERT INTO new_table (name,address,address,address,address,address,
SELECT a.id, a.name, a.price, a.price, a
SELECT a.id, a.name, a.address, a.address, a
UPDATE a SET a.a = a.b WHERE a.a IS NULL
SELECT DISTINCT a.id, a.name, a.address, a.phone,
TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
import import import import import import import import import import import import import import import import import import
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY TABLE_
SELECT SUM(CASE WHEN (A.A_B_C_D_D_
SELECT SUM(CASE WHEN a.type = 1 THEN 1 ELSE 0 END) AS A
CREATE UNIQUE INDEX ON your_table_name_unique_unique_unique_unique_
SELECT * FROM ( SELECT * FROM mytable WHERE parent_id = 1 UNION ALL
CREATE TABLE user_settings ( user_id INTEGER, user_id INTEGER, user_
INSERT INTO table1 (id, name, email) SELECT id, name, email FROM
UPDATE SET = WHERE NOT
SELECT a.id, a.name, a.address, a.phone, a
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
pg:dump -u postgres -p -p -u -p -p -u
SELECT DATEADD(d, DATEDIFF(d, DATEADD(d, DATEDIFF
..................
SELECT * FROM mytable WHERE mycolumn LIKE '%[%'
SELECT * FROM table WHERE name LIKE '%' + search + '%' OR name LIKE '%
INSERT INTO new_new_new_new_new_new_new_new_
GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =

mongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodb
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
..................
SELECT DISTINCT a.id, a.name, a.email, a.phone,
SELECT * FROM table1 WHERE DATE(date) = DATE(date) AND DATE(
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY parent_id
,,,,,,,,,,,,,,,,,,
SELECT COUNT(DISTINCT c.id) FROM categories c INNER JOIN categories c ON c
SELECT IDENTITY_INSERT(CURRENT_NUM, 'your_table_name') AS
SELECT * FROM Table1 WHERE DATEDIFF(d, GETDATE() - GETDATE())
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT a.id, a.name, a.address, a.phone, a
CREATE TABLE mytable ( id INT PRIMARY KEY, name VARCHAR(255) NOT NULL, email
public public public public public public public public public public public() { public public public public public
select t1.id, t1.name, t1.group, t2.group, t
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID INNER
SELECT * FROM table WHERE date_from >= '2012-01-01' AND date_to < '2012
UPDATE table1 SET table1.value = table2.value FROM table1 INNER JOIN table2
SQL.................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY id ORDER
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table WHERE (@start BETWEEN @end AND @start BETWEEN @
SELECT * FROM table ORDER BY (CASE WHEN col1 = 'A' THEN 1 ELSE
db22.db22.db2.db2.db2.sql.SQL_TEXT_
SELECT * FROM Table1 WHERE NOT EXISTS (SELECT 1 FROM Table2 WHERE Table1.ID
SELECT COUNT(DISTINCT [User ID]) AS NumUsers, [User ID] FROM
def def def def def def def def def def def def def def def def def def
UPDATE [dbo].[MyTable] SET [dbo].[MyTable]
$date = $date - 1
SELECT SUM(value) FROM table WHERE (value IN ('1','2','3','','','
UPDATE table SET column = SUBSTRING(column, 1, CHARINDEX(' ', column) -
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
@@locallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocal
..................
SELECT * FROM ( SELECT *, (SELECT score FROM courses WHERE course_id = courses
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM table WHERE (@flag = 'yes' OR @flag = 'no
,,,,,,,,,,,,,,,,,,
UPDATE d SET d.d = d.d FROM d JOIN d d ON d.
SELECT CONVERT(CHAR(10), CONVERT(CHAR(10), CONVERT
..................
SELECT DISTINCT ON (user_id) user_id FROM user_user_user_
SELECT regexp_replace(regexp_replace(regexp_replace(regexp_replace(regexp
SELECT a.id, a.name, a.email, a.email, a
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col1,
CREATE TABLE my_table ( my_column text, my_column text, my_
UPDATE table SET value = NEWVALUE() WHERE NEWVALUE() = NEWVALUE()
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
CREATE TABLE mytable ( id INT PRIMARY KEY, name VARCHAR(50) NOT NULL, PRIMARY
SELECT FROM FROM FROM WHERE IN (SELECT FROM FROM FROM WHERE IN (SELECT FROM FROM))
SELECT * FROM table WHERE SUBSTR(column, 1, 3) LIKE '%[[:digit:
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
..................
,,,,,,,,,,,,,,,,,,
SELECT DATEDIFF(MINUTE, DATEDIFF(MINUTE, DATEDIFF(MINUTE
SELECT * FROM table WHERE SUBSTR(column, 10) = SUBSTR(column, 10)
..................
SELECT * FROM table1 WHERE (@date1 = DATEADD(day, DATEDIFF

SELECT * FROM my_table WHERE my_column LIKE '%' + @param + '%
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
..................
SELECT * FROM ( SELECT * FROM Table1 ORDER BY [Date] DESC ) t ORDER
SELECT * FROM table WHERE (column LIKE '%' OR column LIKE '%' OR column LIKE
SELECT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT FROM FROM FROM FROM FROM H H H
SELECT MIN(time) FROM table1 WHERE time < (SELECT MAX(time) FROM
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM table WHERE primary_key = 'A' AND primary_key = '
INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
SELECT XML.value('@xml.value('@xml.value('@xml.
SELECT CASE WHEN x = 1 THEN 'Y' ELSE 'N' END AS x,
MATCH(text) AGAINST(text) AGAINST(text) AGAIN
use use use use use use use use use use use use use use use use use use
WITH CTE AS ( SELECT *, ROW_NUMBER() OVER (ORDER BY parent_
GROUP BY
SELECT DISTINCT a.id, a.name, a.email FROM table1 a INNER
SELECT * FROM Table1 t1 LEFT JOIN Table2 t2 ON t1.id =
UPDATE A SET A.value = B.value FROM A INNER JOIN B ON A.
SELECT u.user_id, u.username, u.email, u.email
SELECT COUNT(DISTINCT a.id) FROM (SELECT a.id, a.
INSERT INTO table1 (id, name, email, email, email, email, email
SELECT COUNT(DISTINCT [user_id]) AS NumUsers FROM (SELECT [user
@@@@@@@@@@@@@@@@@@
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT SUM(value) FROM table WHERE sign ='sign' AND value = 'value
::::::::::::::::::
..................
SELECT COUNT(DISTINCT [Date]) FROM ( SELECT [Date], [Date], [

SELECT a.id, a.name, a.type, a.type FROM a
SELECT COUNT(DISTINCT a.id) AS num_a, COUNT(DISTINCT
MATCH(name) AGAINST(''name' IN BOOLEAN MODE) MATCH(name
SELECT * FROM sys.tables WHERE table_name = 'MyTable'
SELECT * FROM users WHERE id IN (SELECT id FROM users WHERE user_id = @
import import import import import import import import import import import import import import import import import import
SELECT * FROM table WHERE (@user = 'user' AND @user = 'user
DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF(
SELECT * FROM table WHERE (@@ROWCOUNT = 1) AND (@@ROWCOUNT
SELECT a.name, a.email, a.email FROM users a INNER JOIN users
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
..................
SELECT * FROM mytable WHERE SUBSTR(mycolumn, 1, LENGTH(mycolumn)
utf8 utf8_utf8_utf8_utf8_utf8_utf8_utf8_utf8_
SELECT a.id, a.name, a.email, a.email, a
select to_date(to_date(sysdate, 'dd/mm/yyyy
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
UPDATE [dbo].[MyTable] SET [dbo].[MyTable]
MERGE INTO [dbo] USING [dbo] ON [dbo] ON
UPDATE table SET column = REPLACE(column,'','')
INSERT INTO temp_table (id, name, address, address, address, address,
v v v v v v v v v v v v v v v v v v
SELECT MIN(value) FROM (SELECT value FROM table WHERE value <= 10) t GROUP BY
use use use use use use use use use use use use use use use use use use
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT FROM FROM WHERE REG REG REG
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
DELETE FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id = table
SELECT SUM(CASE WHEN status ='' THEN 1 ELSE 0 END) AS''
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM mytable WHERE mycolumn IN ('A', 'B', 'C',
SELECT * FROM route_route_route_route_route_route_route_route
SELECT * FROM table WHERE timestamp >= NOW() - INTERVAL 1 DAY AND timestamp < NOW()
UPDATE a SET a.a = a.a FROM a WHERE a.a = '
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT TOP 3 * FROM ( SELECT TOP 3 * FROM ( SELECT TOP 3 * FROM (
WITH recursive AS ( SELECT * FROM mytable WHERE parent = 'parent' UNION ALL
SELECT * FROM ( SELECT * FROM table1 WHERE date_created >= DATEADD(MONTH
$this->db->select('id'); $this->db->select('name');
SELECT a.id, a.name, a.address, a.city, a
SELECT a.id, a.name, a.address, a.phone, a
MATCH(user, user) AGAINST(user) AGAINST(user)
..................
DROP TABLE IF EXISTS 'drop_table'
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table2
..................
INSERT INTO A (id, name, address, city, state, zip, zip,
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT a.id, a.name, a.address, a.city, a
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
public class MyEntity { public MyEntity() { } public MyEntity() { } public
select a.id, a.name, a.address, a.city, a
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
------------------
CASE WHEN ( ( ( ( ( ( ( ( ( ( ) ) ) ) ) )
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
..................
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY NEWID())
SELECT * FROM Table1 WHERE NOT EXISTS (SELECT 1 FROM Table2 WHERE Table1.ID
SELECT * FROM ( SELECT * FROM mytable WHERE id = @id AND time > @
INSERT INTO table1 (id, name, email, password) SELECT id, name,
SELECT * FROM table WHERE (@@search = '^[a-zA-Z
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE table1.id
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM [dbo].[YourTableName] WHERE [YourColumn] LIKE '%
INSERT INTO [dbo].[tbl_test] ([id], [name], [
MATCH(x,y) AGAINST(x,y) MATCH(x,
SELECT * FROM ( SELECT * FROM Table1 WHERE (@user = 'user1' AND
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
SELECT * FROM ( SELECT * FROM Table1 WHERE (@user = 'user1' AND
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY

$sql = "SELECT COUNT(DISTINCT name) FROM " & $dbName &
If Then Else End
select count(distinct emp_id) from emp
INSERT INTO A (id, name, email, phone, email, phone, email,
CREATE TABLE `table_name` ( `name` varchar(50) NOT NULL, `
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
INSERT INTO my_table (id, name, email, email, email, email,
WHERE (@@search ='search' OR @search ='search' OR @
(date_diff(date_diff(date_diff(date_diff(date
SELECT * FROM dbo.tbl_tbl_tbl_tbl_tbl_tbl_
viewviewviewviewviewviewviewviewviewviewviewviewviewviewviewviewviewview
UPDATE A SET A.A_ID = B.A_ID FROM A INNER JOIN
doct doct doct doct doct doct doct doct doct doct doct doct doct doct doct doct doct doct
..................
INSERT INTO table_name (id, name, email, email, email, email,
SELECT DATE_FORMAT(date_column, '%Y-%m') FROM table_name
SELECT CONCAT(' ', CONCAT(' ', CONCAT(' ', CONCAT(' ', CON
..................
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
SELECT * FROM categories WHERE categories IN (SELECT DISTINCT category FROM categories WHERE categories IN ('category
SELECT * FROM messages WHERE NOT EXISTS (SELECT 1 FROM messages2 WHERE messages2.message =
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT * FROM table1 WHERE (@@ROWCOUNT = 0) OR (@ROWCOUNT
SELECT * FROM table WHERE (column LIKE '%' OR column LIKE '%' OR column LIKE
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
------------------
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.Date = Table2.Date AND
SELECT * FROM ( SELECT *, (@rn := @rn + 1) OVER (order
SELECT * FROM your_table WHERE your_column IS NULL
INSERT INTO new_table (id, name, email) SELECT id, name, email
UPDATE your_table SET your_column = your_column WHERE your_condition
SELECT CASE WHEN field_name = 'value' THEN 'value' ELSE 'value'
ALTER TABLE my_table ADD CONSTRAINT my_column_name CHECK (name IN ('default
SELECT a.id, a.name, a.price, a.price, a
def current_user.user.user.user.user.user.user.user
WITH c AS ( SELECT c.c, c.c, c.c, c
SELECT SUM(CASE WHEN a = b THEN 1 ELSE 0 END) AS B, SUM
UPDATE A SET A.value = B.value FROM A INNER JOIN B ON A.
SELECT * FROM table WHERE id IS NULL OR id = (SELECT id FROM table WHERE id
..................
SELECT * FROM ( SELECT * FROM table1 WHERE date_diff(date_diff(
SELECT * FROM ( SELECT * FROM table1 WHERE col1 = 'A' UNION
SELECT a.id, a.name, a.address, a.phone, a
SELECT COUNT(DISTINCT name) AS CountOfNames FROM (SELECT name, COUNT(
MATCH(user_id) AGAINST(user_id) AGAINST(
..................
..................
SELECT u.user_id, u.username, COUNT(u.user_id
..................
SELECT COUNT FROM your_table GROUP BY COUNT H H H H
SELECT MIN(value) AS value, MIN(value) AS first_value FROM (
SELECT a.id, a.name, a.email, a.email FROM users
SELECT * FROM table1 WHERE table1.id = table2.id
RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT DATEADD(hh, DATEDIFF(hh, GETDATE(), GETDATE()), GET
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' OR
SELECT CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
::::::::::::::::::
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
id name name name name name name name name name name name name name name name name name
SELECT CONVERT(DECIMAL(18,2), CONVERT(DECIMAL(18,
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT SUM(DATEDIFF(DAY, DATE, DATE)) AS DATEDIFF(DAY,
SELECT * FROM table WHERE DATEDIFF(NOW(), start_date) <= 30
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.table
SELECT * FROM table WHERE DATEPART(YEAR, [Date]) = DATEPART(MONTH
UPDATE a SET a.a_b_c_d_d_d_d
SELECT * FROM ( SELECT * FROM table WHERE sigma = (SDO(SDO(
SELECT COUNT(DISTINCT a.id) FROM A LEFT JOIN B ON A.id
SELECT * FROM table WHERE DATEDIFF(d, @StartDate, @EndDate) >= 0
select * from ( select row_number() over (order by id) rn, id
SELECT * FROM table WHERE (@user_id = @user_id AND @user
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT * FROM ( SELECT DATEDIFF(day, DATEADD(day, DATEDIFF(
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT FROM FROM WHERE NOT EXISTS ( SELECT 1 FROM FROM WHERE WHERE WHERE AND )
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table1)
..................
Private Sub txtButton_Click() Me.txtButton.Value = Me.txtButton
SELECT SUBSTRING(col, 1, CHARINDEX(' ', col) - CHARINDEX(' ',
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (CASE WHEN type = 'A
SELECT OBJECT_NAME(SEQUENCE_NAME) FROM INFORMATION_SCHEMA.SEQUENCES WHERE
SELECT COUNT(DISTINCT col1) AS col1, COUNT(DISTINCT col2) AS col
CREATE TABLE t1 (id NUMBER, name VARCHAR2(20) ); CREATE INDEX t1_idx
DATE(date(date(date(date(date(date(date(date(
..................
MERGE INTO db.table1 AS t1 USING (SELECT * FROM db.table
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
WHERE ( ( ( ( ( ( ( ( ( ( ( ) ) ) ) ) )
CREATE TABLE [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
SELECT SUM(DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
SELECT a.id, a.name, a.address, a.city, a
SELECT SUM(sales) FROM sales GROUP BY product

SELECT * FROM ( SELECT * FROM mytable WHERE id = @id AND status = '

SELECT DATE, SUM, SUM, SUM OVER OVER OVER OVER OVER OVER OVER OVER OVER OVER
SELECT * FROM transactions WHERE NOT EXISTS (SELECT 1 FROM transactions WHERE transactions.transaction_id
..................
SELECT * FROM my_table WHERE my_column ='some_column' AND my
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = '
SELECT SUM(value) FROM (SELECT value FROM table) x GROUP BY x ORDER BY
..................
CREATE TABLE my_table ( id INT IDENTITY(1,1) PRIMARY KEY, name VARCHAR(
<- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <-
UPDATE mytable SET mycolumn = replace(mycolumn,'', ') WHERE mycolumn
SELECT SUM(CASE WHEN A.ID = 1 THEN 1 ELSE 0 END) AS A
SELECT * FROM table WHERE FIND_IN_SET('1', @value) > 0
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT @@ROWROWROW
latest latest latest latest latest latest latest latest latest latest latest latest latest latest latest latest latest latest
SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB SUB
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (1,3) UNION ALL SELECT
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM Table1 WHERE Column1 IS NULL ) t1 WHERE
INSERT INTO Table1 (id, name, email, email, email, email, email
INSERT INTO table1 (id, name) SELECT id, name FROM table1 WHERE id
SELECT * FROM table WHERE (@param1 = 'Y' AND @param2 =
use use use use use use use use use use use use use use use use use use
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM ( SELECT *, RN = ROW_NUMBER() OVER (PARTITION
SELECT CONCAT(' ', CONCAT(' ', CONCAT(' ', CONCAT(' ', CON
SELECT CONVERT(float, CONVERT(float, CONVERT(float
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
INSERT INTO [dbo].[tbl_test] (id, name, email,
var query = { "users.id": { "users.name": "John",
SELECT COUNT(user_id) FROM wp_postmeta WHERE post_date = DATE
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
pg_pg_pg_pg_pg_pg_pg_pg_pg_
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.id =
SELECT MIN(date) FROM ( SELECT date, min(date) min_date FROM
MATCH(node) AGAIN MATCH(node) AGAIN MATCH(node) AGAIN

SELECT DATENAME(dw, DATEPART(dw, DATEADD(d, DATEDIFF
CREATE UNIQUE INDEX ON ( ( ( ( ( ( ( ( ( ( ( ) ) )
,,,,,,,,,,,,,,,,,,
SELECT rank FROM (SELECT rank FROM (SELECT rank FROM (SELECT rank FROM (SELECT rank
SELECT COUNT(DISTINCT [Name]) AS NumOfNames FROM YourTable GROUP BY [
SELECT SUBSTRING(col, 1, CHARINDEX(' ', col) - CHARINDEX(' ',
SELECT a.id, a.name, a.address, a.phone, a
DROP TABLE IF EXISTS users;
SELECT * FROM ( SELECT *, (SELECT AVG(score) FROM mytable WHERE
SELECT * FROM mytable WHERE name = 'name' AND name = 'name' AND
SELECT id, SUM(value) FROM ( SELECT id, value, row_number()
SELECT * FROM A JOIN B ON A.A_B_B_B_B
SELECT DATEDIFF(DAY, DATEADD(DAY, DATEDIFF(DAY, DATEADD
<-data.frame(data = " " " " " " " " " " "
SELECT COUNT FROM WHERE WHERE NOT EXISTS (SELECT 1 FROM WHERE WHERE WHERE WHERE H H H
..................
SELECT * FROM ( SELECT * FROM mytable WHERE mycolumn = 'value' ) x
SELECT XMLColumn('myxml','myxml','myxml') AS my
DELETE FROM FROM WHERE WHERE NOT EXISTS ( SELECT 1 FROM FROM WHERE WHERE WHERE WHERE )
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM ( SELECT id, name, email, ROW_NUMBER() OVER (PART
Dim db As Database Dim db As Database Dim db As Database Set db = Nothing Set db
CREATE TABLE mytable ( id INT PRIMARY KEY, name VARCHAR(255) NOT NULL, PRIMARY
SELECT a.id, a.name, a.price, a.price, a
..................
SELECT CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT SUM(IF(a.type = 'A', a.amount, a.
SELECT * FROM (SELECT * FROM table WHERE (@user = user) OR (@
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID INNER
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
..................
...,,,,,,,,,,,,,,,
SELECT * FROM client WHERE client_id IN (SELECT client_id FROM client_to
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT id, name, rank() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT *, (CASE WHEN [A] = 'A' THEN
SELECT COUNT(DISTINCT item_id) FROM items WHERE item_id IN (SELECT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY state) R
SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID = Table2.ID AND
...,,,,,,,,,,,,,,,
var query = from c in context.Categories join c in context.Categories on c.
SELECT a.id, a.name, a.address, a.phone, a
,,,,,,,,,,,,,,,,,,
SELECT * FROM mytable WHERE DATEPART(MINUTE, @date) <= DATEPART
SELECT COUNT(DISTINCT (CASE WHEN a.id = 1 THEN a.id ELSE
SELECT SUBSTRING(col, CHARINDEX(' ', col) + 1, CHARINDEX(' ',
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
SELECT COUNT(DISTINCT a.id) AS num_a, COUNT(DISTINCT
UPDATE a SET a.value = b.value FROM table1 a INNER JOIN table2
SELECT DATENAME(MONTH, [Date]) AS [Month], DATENAME(YEAR,
CREATE PROCEDURE [dbo].[GetAllUsers] @UserName varchar(50)
$collection = Mage::getModel('catalog/product')->getCollection(); $
public class MyEntity { public MyEntity() { } public MyEntity() { } public
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM mytable WHERE mycolumn LIKE '%[^0-9]%'

SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
UPDATE table SET value = value + 1 WHERE value <> value
ALTER TABLE mytable ADD COLUMN mycolumn DEFAULT NEW_COLUMN;
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
SELECT a.id, a.name, a.address, a.address, a

UPDATE table1 SET value = value1 WHERE value1 IN (SELECT value2 FROM table
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT())))) FROM
SELECT DATEDIFF(MINUTE, DATEADD(MINUTE, DATEDIFF(MINUTE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER

SELECT TOP 1 @top:=@top+1 order by (@top:=@
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
..................
UPDATE a SET a.value = b.value FROM a INNER JOIN b ON a.
SELECT p.name, p.surname, p.email FROM person p LEFT JOIN person
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM ( SELECT * FROM Table1 ) UNION ALL SELECT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table WHERE (user_id =? OR user_id =?)
SELECT * FROM Table1 WHERE CONVERT(varchar(10), [Date], 101
SELECT grades.grade, grades.grade FROM grades INNER JOIN grades_table grades ON grades
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM table1 WHERE (table1.date BETWEEN table2.
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name='John')
SELECT * FROM my_table WHERE (my_column IN ('1','2','3','','
SELECT * FROM table1 WHERE (@condition1 = 'Y' AND @condition2
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
..................
SELECT * FROM mytable ORDER BY REGEXP_SUBSTR(REPLACE(REPLACE(REPLACE
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT * FROM table WHERE (@param1 LIKE '%' OR @param1 LIKE '%
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
DELETE FROM FROM WHERE WHERE NOT EXISTS(SELECT 1 FROM FROM WHERE WHERE WHERE WHERE WHERE AND
SELECT * FROM dbo.YourTable WHERE YourColumn = @YourColumn
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
viewsviewsviewsviewsviewsviewsviewsviewsviewsviewsviewsviewsviewsviewsviewsviewsviewsviews
SELECT MIN(date) AS mindate, MAX(date) AS maxdate FROM (
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT * FROM mytable WHERE mycolumn = 'value' ) t
select * from ( select * from ( select * from ( select * from ( select *
SELECT * FROM ( SELECT peak, peak FROM table1 UNION ALL SELECT peak, peak
SELECT AVG(AVG(value)) FROM (SELECT AVG(value)) a
SELECT * FROM Table1 t1 INNER JOIN Table2 t2 ON t1.id =
..................
SELECT * FROM mytable WHERE (@name = 'name' AND @name = '
SELECT * FROM ( SELECT * FROM mytable WHERE mycolumn = 'value' ) t
SELECT SUBSTR(ip_addr, 1, 4) FROM (SELECT ip_addr, SUB
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
CREATE TABLE table1 ( id INTEGER PRIMARY KEY, name VARCHAR(50) NOT NULL, PRIMARY
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM table1 UNION ALL SELECT * FROM table2
INSERT INTO new_table (id, name, description) SELECT id, name, description
SELECT a.id, a.name, a.email, a.phone, a
select * from ( select t.*, row_number() over (partition by t.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM [dbo].[tbl_users] WHERE [user] = @
SELECT * FROM mytable WHERE DATEDIFF(day, DATEADD(day, DATEDIFF
@varvarvarvarvarvarvarvarvarvarvarvarvarvarvarvarvar
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT SUM(value) FROM table1 WHERE value IN (SELECT value FROM table2)
SELECT SUBSTRING(col,1,3) AS col1, SUBSTRING(col,1,3)
SELECT * FROM table WHERE id = (SELECT min(id) FROM table WHERE id =
::::::::::::::::::
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY parent_
UPDATE dbo.YourTable SET dbo.YourColumn = dbo.YourColumn
def def def def def def def def def def def def def def def def def def
SELECT * FROM mytable WHERE language = 'en' AND name ='my_name
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
::::::::::::::::::
SELECT SUB________________
GO USE GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT SUBSTRING(col, 1, CHARINDEX(' ', col) - CHARINDEX(' ',
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT a.id, a.name, a.address, a.city, a
CREATE TABLE mytable ( col1 int, col2 int, col3 int, col
SELECT * FROM ( SELECT *, RN = ROW_NUMBER() OVER (PARTITION
SELECT SUM(CASE WHEN (x.x = 'a' AND x.y =
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
WHERE ISNULL(@name, '') = @name
LOAD DATA INFILE 'file.txt' INTO TABLE your_table FIELDS TERMINATED
SELECT a.id, a.name, a.address, a.city, a
DELETE FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT * FROM ( SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name

public void Initialize(string name) { var query = from c in context.Customers
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
def def = = = = = = = = = = = = = = = =
SELECT * FROM [dbo].[MyTable] WHERE @Param1 = @Param
SELECT * FROM ( SELECT * FROM [dbo].[tbl_user_info]
COUNT(DISTINCT category))
SELECT * FROM Table1 t1 INNER JOIN Table2 t2 ON t1.id =
SELECT * FROM table WHERE TO_DATE(date_time, 'HH24') =
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM my_table WHERE NOT EXISTS (SELECT 1 FROM my_table WHERE my
SELECT * FROM @parent.parent WHERE parent.parent_id = @parent.id
INSERT INTO [dbo].[tbl_tbl_tbl_tbl] (id,
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT COUNT(DISTINCT ID) FROM ( SELECT ID, ROW_NUMBER() OVER (
::::::::::::::::::
SELECT * FROM mytable WHERE DATEPART(month, [Date]) = DATEPART(
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
CREATE TABLE [dbo].[MyTable] ( [Column] varchar(50) )
sqlplus -s /path/to/your/file.sql
WHERE (@@ROWCOUNT = 0 AND @ROWCOUNT = 1 ) OR (@
SELECT CASE WHEN @@ROWCOUNT = 1 THEN ELSE END AS [ITEM], SUM(
SELECT a.name, a.address, a.address, a.address, a
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [
ALTER TABLE [dbo].[tbl_test] ADD [dbo].[tbl
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT * FROM my_table WHERE my_column IN ('123344
JOIN JOIN JOIN JOIN JOIN ON ON ON.id = JOIN.id_user = LEFT
SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable WHERE name = '
SELECT MIN(value) FROM table WHERE value < (SELECT MIN(value) FROM table
SELECT * FROM ( SELECT a.id, a.name, a.address, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY Bill ORDER
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
UPDATE dbo.YourTable SET YourColumn = dbo.YourColumn WHERE YourColumn
IF @@ROWCOUNT = 0 AND (@ROWCOUNT = 1 OR @ROWCOUNT
DELETE FROM table1 WHERE EXISTS(SELECT 1 FROM table2 WHERE table1.id = table
SELECT MONTH(date) AS Month, SUM(value) AS MonthValue FROM table1
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT * FROM dbo.YourTable WHERE @YourColumn ='' AND (@
SELECT * FROM table1 UNION ALL SELECT * FROM table2
MERGE INTO exam_results USING (SELECT exam_results.exam_results_name
SELECT a.id, a.name, a.address, a.address, a
$query = $this->getDoctr(); $query->set('name', $
UPDATE table1 SET value = value + 90 WHERE...
SELECT * FROM ( SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE id
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name='John')
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (@result =
..................
CREATE TABLE [dbo].[MyTable] ( [ID] INT IDENTITY(1,
..................
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT DATE_SUB(DATE
..................
CREATE TABLE mytable ( id INTEGER PRIMARY KEY, name TEXT, value INTEGER, PRIMARY KEY
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM Table1 WHERE ID = @ID
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Name
CREATE TABLE [dbo].[MyTable] ( [ID] INT IDENTITY(1,
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
SELECT CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT
SELECT a.id, a.name, a.address, a.city, a
CREATE INDEX ON mytable (id, name, address, address, address, address,
CREATE TABLE dbo.YourNewColumn(YourColumn) GO
SELECT SUBSTRING(col, CHARINDEX(' ', REVERSE(col)) - CHAR
RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM ( SELECT * FROM yourtable WHERE @xml = 'yourxml' )
SELECT SUBSTRING(col,1,3) AS col1, SUBSTRING(col,1,3)
SELECT a.id, a.name, a.address, a.city, a
= = = = = = = = = = = = = = = = = =
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
select regexp_substr(col, '^[[:digit:]]', 1, 1) from
UPDATE parent_table SET parent_id = parent_table.parent_id FROM parent
SELECT COUNT(DISTINCT a.id) FROM a LEFT JOIN b ON a.id
,,,,,,,,,,,,,,,,,,
..................
SELECT a.id, a.name, a.address, a.phone, a
table_name table_name table_name table_name table_name table_name
SELECT a.id, a.name, a.address, a.address, a
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [Date]
..................
SELECT CONCAT('http://', CONCAT('http://', CONCAT('https://
SELECT * FROM your_table WHERE your_column IN ('A','B','C','
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
@@@@@@
POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST POST
SELECT COALESCE(COALESCE(COALESCE(COA
::::::::::::::::::
@dbo.MyCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustomCustom
SELECT * FROM table WHERE DATEDIFF(day, DATEADD(day, 1, DATEADD
SELECT CASE WHEN (SELECT COUNT(*) FROM table WHERE id = 'A' AND value
SELECT TOP 1 @row := @row + 1 AS RN FROM (SELECT @row
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM Table1 WHERE ID = @ID
SELECT a.id, a.name, a.address, a.address, a
..................
SELECT [name], [value], [value], [value] FROM (SELECT [name
UPDATE table SET last_update = NOW() WHERE id = NEW.id;
hibernate.hbm.hbm.hbm.hbm.hbm.h
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
@ @ @
..................
SELECT u.user_id, u.user_name, u.user_email
GO USE GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO
SELECT a.id, a.name, a.email, a.email, a
..................
SELECT TOP 8pm FROM ( SELECT TOP 8pm FROM YourTable ORDER BY LastModified DESC
SELECT * FROM table WHERE DATE_FORMAT(date_time, '%Y-%m')
SELECT * FROM dbo.tbl_tbl_tbl_tbl_tbl_tbl_
DELETE FROM FROM WHERE WHERE NOT;;;;;;;;;;;;
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM table1 WHERE (user_id = 1 AND user_id = 1)
INSERT INTO table_name (id, name, email, password) SELECT id, name
...,,,,,,,,,,,,,,,
SELECT a.id, a.name, a.email, a.phone, a

SELECT CAST(CAST(CAST(height AS decimal(18,2)) AS decimal(18,2))
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
SELECT SUM(CASE WHEN WHEN = THEN ELSE END) FROM your_table
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY user_
DELETE FROM FROM WHERE WHERE NOT EXISTS(SELECT 1 FROM FROM WHERE WHERE WHERE WHERE WHERE H
CREATE TABLE [dbo].[MyTable] ( [id] INT IDENTITY(1,
CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
SELECT Product, Product_Price, Product_Price, Product_Price, Product_Price
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT SUM(CASE WHEN [Date] >= DATEADD(day, DATEDIFF(day
RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY key ORDER
CREATE TABLE child_child_child ( child_id int, child_id int,

------------------
SELECT * FROM sys.tables WHERE name = 'MyTable'
SELECT @myVariable ='myvariable' FROM customers WHERE customer_id = @my
to_char(to_date(to_char(to_date(to_
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM Table1 t1 INNER JOIN Table2 t2 ON t1.id =
SELECT TOP 1 * FROM (SELECT TOP 1 * FROM YourTable ORDER BY NEWID())
CREATE FUNCTION dbo.GetAllUsers(@user_id int) RETURNS
SELECT AVG(DATEDIFF(day, DATEADD(day, DATEDIFF(day
SELECT s.id, s.name, s.surname, s.email, s
MATCH(name,address) AGAINST('address',address) AGAINST('
SELECT a.id, a.name, a.address, a.phone, a
SELECT MAX(date) FROM (SELECT date FROM your_table GROUP BY date HAV
WHERE (@@param1 = 'Y' AND @param2 = 'N'
::::::::::::::::::
UPDATE A SET A.Value = B.Value FROM A LEFT JOIN B ON A.
INSERT INTO new_table (col1,col2,col3) SELECT col1,col2,col
UPDATE SET.value =.value WHERE.key =''
update_date_date_date_date_date_date_date_date_
Dim db As Database Dim adapter As New SqlDataAdapter() adapter.Fill(db)
public static final final final final final final final final final final final final final final final final
UPDATE d SET d.d = d.d + d.d WHERE d.d
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
hhhhhhhhhhhhhhhhhh
SELECT DISTINCT COALESCE(a.id, a.id) AS id,
UPDATE SET = WHERE WHERE AND AND AND AND AND AND AND AND AND AND AND AND AND
ALTER TABLE [dbo].[MyTable] ALTER COLUMN [dbo].[My
SELECT * FROM (SELECT * FROM your_table) WHERE NOT EXISTS (SELECT * FROM
..................
ALTER TABLE [dbo].[YourTable] ADD COLUMN [YourColumn] varchar(
------------------
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID AND
= = = = = = = = = = = = = = = = = =
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT countries.Country, countries.Country FROM countries INNER JOIN countries_countries ON countries.
USE master GO USE master GO USE master GO USE master GO USE master GO USE master GO
UPDATE table1 SET column1 = 'value1' WHERE table1.column1 = 'value
WHERE ( ( ( ( ( ( ( ( ( ( ) ) ) ) ) ) )
SELECT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [time
if if then else else end
..................
::::::::::::::::::
SELECT CASE WHEN ISNULL(col1, col2) = 1 THEN col1 ELSE col2
..................
SELECT FROM FROM WHERE NOT EXISTS ( SELECT 1 FROM FROM TO TO TO TO TO TO TO
SELECT SUM(CASE WHEN a.id = b.id THEN a.value ELSE 0
SELECT a.id, a.name, a.address, a.phone, a
declare @sql nvarchar(max) set @sql = 'SELECT * FROM [d
SELECT a.id, a.name, a.address, a.city, a
( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ) ) )
$this->db->select('name'); $this->db->select('name');
CREATE UNIQUE INDEX ON RE RE RE RE RE RE RE RE RE RE RE RE RE RE
SELECT DISTINCT ON (column) column FROM table
SELECT CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN
SELECT SUM(CASE WHEN [Date] = 'A' THEN [Date] ELSE [
..................
UPDATE [dbo].[tbl_test] SET [dbo].[tbl_
SELECT customer_id, MIN(value) AS minvalue, MAX(value) AS
::::::::::::::::::
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT DISTINCT t1.* FROM table1 t1 INNER JOIN table2 t2 ON t
SELECT tag_id, tag_name FROM tag_tag WHERE tag_name = '
SELECT ROUND(ROUND(ROUND(ROUND(ROUND(ROUND(ROUND(ROUND(ROUND
SELECT TOP 1 [Date], [Time], [Time], [Time], [Time],
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
select * from ( select t.*, row_number() over (partition by id order
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER

SELECT COUNT(user_id) FROM users WHERE age >= (SELECT age FROM age_
[NSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNS
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT DISTINCT keyword FROM keywords WHERE keyword IN ('a', 'b',
LOAD DATA LOCAL INFILE 'file.name' INTO TABLE 'file.name' FI

INSERT INTO A (id, name, email, email, email, email, email,
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT a.id, a.name, a.price, a.price, a
SELECT TO_TIMESTAMP(SYSDATE, 'YYYYMMDD') FROM TO_TIMESTAMP
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
UPDATE a SET a.a_b_c_d_d_d_d
SELECT * FROM table1 WHERE (column1 LIKE '%' OR column1 LIKE '
select ip_address from dual connect by level <= 10
SELECT a.id, a.name, a.address, a.phone, a
select to_number(to_char(to_number(to_number(to
CREATE UNIQUE INDEX idx_my_table_x_x_x_x_x
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM Table1 t1 INNER JOIN Table2 t2 ON t1.id =
DELETE FROM WHERE WHERE NOT
SELECT COUNT(*) FROM ( SELECT COUNT(*) AS cnt FROM table1 ) t
SELECT * FROM ( SELECT * FROM yourtable WHERE DATEDIFF(WEEK, DATEADD(
SELECT COUNT(DISTINCT a.id) FROM A LEFT JOIN B ON A.id
SELECT COUNT(DISTINCT (CASE WHEN a.id = 1 THEN a.id ELSE
use use use use use use use use use use use use use use use use use use
CREATE TABLE my_table ( my_column text ); INSERT INTO my_table (my
SELECT * FROM mytable WHERE customer = 'customer' AND customer = 'customer' AND
SELECT * FROM ( SELECT *, rank() over (order by season) AS rank FROM
SELECT * FROM employee WHERE NOT EXISTS (SELECT 1 FROM department WHERE department.employee_id
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT COUNT(DISTINCT name) FROM ( SELECT name, COUNT(DISTINCT email)
CREATE OR REPLACE PROCEDURE dbo.GetGetGetGetGetGetGetGetGet
UPDATE SET..______________
heroku:::::::::::::::::
SELECT COUNT(DISTINCT user_id) FROM users WHERE user_id = 1 AND
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID
SELECT * FROM Table1 WHERE EXISTS (SELECT 1 FROM Table2 WHERE Table1.ID =
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT * FROM users u INNER JOIN users_groups g ON u.user_id =
SELECT id FROM table WHERE id IN (SELECT id FROM table WHERE name IN ('A',
SELECT DATEPART(WEEKDAY, DATEADD(DAY, DATEDIFF(DAY, DATE
SELECT * FROM parent WHERE parent.id = (SELECT id FROM child WHERE child.parent
SELECT * FROM ( SELECT *, RN = ROW_NUMBER() OVER (PARTITION
SELECT COUNT(DISTINCT a.id) AS num_a, COUNT(DISTINCT
SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID AND
SELECT AVG(score) FROM ( SELECT AVG(score) AS score FROM table
..................
SELECT * FROM table WHERE time_stamp >= NOW() AND time_stamp < NOW()
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY item ORDER
CREATE FUNCTION dbo.GetAllUsers(@user_id int) RETURNS
SELECT DISTINCT a.id, a.name, a.email FROM (SELECT DISTINCT a
CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
UPDATE table1 SET value = value + 1 WHERE id = 1
ALTER TABLE [dbo].[MyTable] DROP CONSTRAINT [dbo].[My
SELECT DATE_FORMAT(date_time, '%m-%d') AS DATE_FORMAT
SELECT * FROM ( SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID =
ALTER TABLE [dbo].[YourTableName] RESEED WITH ROLLBACK;
SELECT * FROM ( SELECT * FROM mytable WHERE date_trunc('day', now())
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
SELECT MAX(value) FROM (SELECT max(value) AS value FROM table) t
MATCH(name) AGAINST (''name'') MATCH(name) AGAIN
SELECT * FROM sys.dm_exec_requests WHERE sp_name = 'SP_
SELECT a.id, a.name, a.parent_id, a.parent
regexp_replace( regexp_replace( regexp_replace( regexp_replace( regexp_
SELECT CASE WHEN EXISTS (SELECT 1 FROM table1 WHERE table1.id = table2.id
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
WHERE ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ) )
SELECT * FROM table WHERE value IN ('a', 'b', 'c', 'd
CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
SELECT COUNT(DISTINCT [User ID]) AS NumUsers, COUNT(DISTINCT [
INSERT INTO dbo.dbo.dbo.dbo.dbo.d
SELECT * FROM mytable ORDER BY CASE WHEN upper(name) = upper(name)
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM ( SELECT * FROM report WHERE type='A' AND date='2011'
DROP TABLE IF EXISTS `table_name``````````
..................
SELECT SUBSTRING(name,1,1) AS name1, SUBSTRING(name,1,2)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY col1) AS
$ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $
..................
SELECT SUM(Amount) AS Total FROM (SELECT SUM(Amount) AS Total FROM Table
..................
def csv_file = File.open("data.csv", "w:text.
SELECT * FROM ( SELECT * FROM table WHERE id = 1 UNION ALL SELECT * FROM
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT a.id, a.name, a.address, a.phone, a
A A A A A A A A A A A A A A A A A A
SELECT a.id, a.name, a.email, a.phone, a
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
------------------
SELECT GROUP_CONCAT(DISTINCT CONCAT(DISTINCT CONCAT(DISTINCT
SELECT TOP 1 @list = list(@list + 1) FROM (SELECT @list:
SELECT a.id, a.name, a.address, a.phone, a
declare @i int declare @i int declare @i int declare @i int declare @
INSERT INTO table (col1,col2,col3) SELECT col1,col2,col3 FROM
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT SUBSTRING(col,1,3) AS col1, SUBSTRING(col,1,3)
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
..................
select id from ( select id, row_number() over (order by id) rn
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Group
declare @sql nvarchar(max) set @sql = 'SELECT @sql = '
UPDATE table1 SET table1.column1 = table2.column1 FROM table1 INNER JOIN
SELECT a.id, a.name, a.address, a.phone, a
SELECT DATEPART(hh, [Date]) AS [Date], SUM(CASE WHEN [
SELECT * FROM mytable WHERE mycolumn LIKE '[[:<:]]'
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
UPDATE table1 SET value = (SELECT SUM(value) FROM table2 WHERE table1.
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [rank]
SELECT COUNT(DISTINCT a.id) FROM A INNER JOIN B ON A.id
SELECT DATEADD(hh, DATEDIFF(hh, GETDATE()), GETDATE())
SELECT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT DISTINCT FROM FROM FROM FROM FROM FROM TO TO TO TO TO
SELECT COUNT(DISTINCT user_id) FROM users LEFT JOIN users_to_user
strftime(date,''''''''''''''
SELECT * FROM table WHERE IN IN IN (SELECT IN FROM table WHERE IN IN IN ('
substr(str, instr(str, substr(str, instr(str, substr(
..................
SELECT DATEADD(MINUTE, DATEDIFF(MINUTE, 0, GETDATE()), GET
::::::::::::::::::
SELECT * FROM playlists WHERE composer = 'composer' AND EXISTS (SELECT 1 FROM
SELECT a.id, a.name, a.address, a.address, a
UPDATE [dbo].[MyTable] SET [dbo].[MyTable]
DELETE FROM my_table WHERE my_column LIKE '^^^^^^^
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM table WHERE DATEDIFF(date, start_date, end_date)
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
INSERT INTO new_table (col1,col2,col3) SELECT col1,col2,col
SELECT * FROM my_table WHERE my_column IN ('a', 'b', '
SELECT CONVERT(varchar(10), CONVERT(varchar(10), CON
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
sqlite sqlite sqlite sqlite sqlite sqlite sqlite sqlite..........
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE value = 'value'
SELECT * FROM table ORDER BY upper(column) ASC, upper(column) ASC,
SELECT CASE WHEN ISNULL(a.id, 0) = 0 THEN a.id ELSE
SELECT COUNT(DISTINCT a.id) FROM a LEFT JOIN b ON a.id
UPDATE table1 SET value = value1 WHERE value1 IN (SELECT value FROM table1)
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch
SELECT * FROM ( SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name
SELECT * FROM Table1 WHERE (@A IS NULL OR @A = @A)
SELECT DATEDIFF(MINUTE, DATEADD(MINUTE, DATEDIFF(MINUTE
SELECT * FROM sys.tables WHERE name = 'MyTable'
SELECT CONVERT(varchar(10), CONVERT(varchar(10), CON
UPDATE SET._______________
UPDATE MyTable SET MyColumn = MyColumn FROM MyTable WHERE MyColumn IN (SELECT
$this->db->like('*', '^[[:<:]]*$
..................
SELECT COUNT(hour) FROM (SELECT hour, COUNT(hour) AS NumHours
GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA
SELECT * FROM ( SELECT * FROM table1 WHERE age = (SELECT MAX(age)
SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
@@@@@@@@@@@@@@@@@@
CREATE INDEX IX_MyIndex ON MyTable (MyColumn) INCLUDE (MyColumn
SELECT SUM(CASE WHEN [Type]='A' THEN [Amount] / [Amount
SELECT SUBSTRING(text,1,3) FROM TABLE
INSERT INTO A (id, name, email, phone, phone, phone, phone,
SELECT * FROM table WHERE value < (SELECT value FROM table WHERE value < (SELECT value
SELECT CASE WHEN EXISTS (SELECT 1 FROM table1 WHERE table1.id = table2.id
::::::::::::::::::
..................
IF @@ = = = = @@ then else else end
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
use use use use use use use use use use use use use use use use use use
SELECT MAX(CASE WHEN CHARINDEX(CHAR, CHARINDEX(CHAR, CHARINDEX(
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
SELECT CONCAT(' ', CONCAT(' ', CONCAT(' ', CONCAT(' ', CON
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
CREATE TABLE mytable ( col1 INT, col2 INT, col3 INT, col
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
INSERT INTO new_table (id, name) SELECT id, name FROM old_table
SELECT CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN

children children children children children children children children children children children children children children children children children children
SELECT a.id, a.name, b.name FROM A INNER JOIN B ON
..................
org.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.
SELECT * FROM table WHERE (@user_id = 1 AND (@user_id
SELECT SUBSTRING(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
CREATE TABLE mytable ( id int primary key, name varchar(50) not null, constraint
INSERT INTO `users` (`id`,`name`,`email`,`password`,
// // // // // // // // // // // // // // // // // //
$this->getDoctrine()->getDoctrine()->getDoctr
INSERT INTO new_table (id, name, description) SELECT id, name, description
SELECT username FROM users ORDER BY username DESC, username DESC, username DESC, username DESC,
SELECT SUBSTR(SUBSTR(SUBSTR(SUBSTR(SUBSTR(SUBSTR
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY id ORDER
INSERT INTO [dbo].[tbl_test] (col1,col2,col3)
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
CREATE PROCEDURE [dbo].[GetAllProducts] @ProductId int,
INSERT INTO table1 (id, name, email, email, email, email, email
@@@@@@@@@@@@@@@@@@
SELECT a.id, a.name, a.address, a.phone, a
UPDATE a.a_b_c_d_d_d_d_d
ALTER TABLE [dbo].[tbl_a] DROP CONSTRAINT [dbo].[
..........
SELECT * FROM ( SELECT * FROM table WHERE date_created >= DATEADD(day,

SELECT a.id, a.name, a.address, a.phone, a
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER

SELECT DISTINCT a.id, a.name, a.email, a.email FROM
normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal
DELETE FROM FROM WHERE WHERE NOT EXISTS (SELECT 1 FROM FROM WHERE WHERE WHERE WHERE AND )
public void onCreate(SQLiteDatabase db) { db.execSQL("CREATE TABLE product_
select * from table_name where table_name = 'MY_TABLE';
SELECT * FROM reservation WHERE reservation_id IN (SELECT reservation_id FROM reservation_table
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT u.user_id, u.user_name, u.user_email
INSERT INTO Table1 (id, name, email, phone, email, phone, email
==================
SELECT * FROM TABLE WHERE ROWTYPE = 'X' AND ROWTYPE = 'Y'
SELECT * FROM products WHERE date_sub(year, date_sub(year, date
SELECT * FROM table WHERE id IN (SELECT id FROM table GROUP BY id HAVING
GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA GRA
SELECT MIN(value) FROM ( SELECT MIN(value) AS value FROM table1 GROUP
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
.texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
SELECT * FROM mytable WHERE NOT EXISTS (SELECT 1 FROM mytable WHERE mytable.
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT DATENAME(MONTH,birthdate) FROM table WHERE birthdate >= DATEADD(
UPDATE table1 SET value = REPLACE(value,'', '') WHERE EXISTS (SELECT 1
SELECT CASE WHEN CHARINDEX(' ', @string) > 0 THEN @string ELSE '' END
SELECT * FROM table WHERE SUBSTR(column,1,3) IN ('A','B','
SELECT CAST(ROW_NUMBER() OVER (ORDER BY ID) AS INT) AS ID
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT COUNT(DISTINCT [Name]) FROM ( SELECT [Name] AS [Name],
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
WHERE (@@user = 'user' AND @user = 'user' OR @
SELECT a.a, a.b, a.c, a.d, a
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT SUM(CASE WHEN [Date] = 'A' THEN [Date] ELSE 0
INSERT INTO table1 (id, bit) SELECT id, bit FROM table1 WHERE bit
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT SUM(amount) FROM your_table
MERGE INTO dbo.dbo.dbo.dbo.dbo.
UPDATE A SET A.A_ID = A.A_ID FROM A INNER JOIN
..................
SELECT a.id, a.name, a.address, a.address, a
SELECT DISTINCT c.code, c.name, c.code_master, c.
to to to to to to to to to to to to to to to to to to
SELECT ID, [Date], [Value], [Date], [Value], [Value],
SELECT * FROM ( SELECT * FROM table1 WHERE (CASE WHEN @some_condition THEN
DELETE FROM FROM WHERE WHERE NOT EXISTS ( SELECT 1 FROM FROM_ WHERE WHERE___
MERGE INTO [dbo].[MyTable] AS AS AS AS AS AS AS
SELECT SUM(CASE WHEN (DATEDIFF(day, DATEADD(day, DATEDIFF
SELECT * FROM ( SELECT *, (SELECT AVG(score) FROM table1 WHERE
A A B C A B C A B C A B B C A B B C
SELECT * FROM table WHERE id IN (SELECT id FROM table)
postgresql:::::::::::::::::
INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl] (
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT SUBSTRING(column, CHARINDEX(' ', column) + 1, CHARINDEX(' ',
SELECT * FROM A WHERE A.DATE BETWEEN DATEADD(DAY, DATEDIFF(
UPDATE SET SET = WHERE WHERE NOT
SELECT TOP 1 Type, Type, Type, Type, Type, Type, Type, Type
SELECT TOP 1 [Date], [Value], [Value], [Value] FROM ( SELECT
SELECT id, DATEADD(MINUTE, DATEDIFF(MINUTE, GETDATE()),
SELECT SUM(Amount) FROM Table1 WHERE ID IN (SELECT ID FROM Table2)
::::::::::::::::::
SELECT * FROM your_table WHERE your_column ='some_column'
INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl] ([
SELECT DISTINCT(date_time) FROM table WHERE date_time >= DATE_SUB(
bitwise bitwise
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.name, a.address, a.address, a.address, a
SELECT user_id, user_name, user_email, user_password, user
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
SELECT * FROM customers WHERE DATE_SUB(NOW(), INTERVAL 3 MONTH) = DATE_
,,,,,,,,,,,,,,,,,,
purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch
SELECT a.id, a.name, a.address, a.phone, a
SELECT SUM(CASE WHEN DATEPART(YEAR,DATEDATEDATEDATEDATEDATEDATEDATE
SELECT DISTINCT a.id, a.name, a.email FROM (SELECT DISTINCT a
SELECT * FROM table1 a INNER JOIN table2 b ON a.id = b.
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE name = '
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name='John')
SELECT * FROM your_table WHERE your_column IN ('A','B','C','
ALTER TABLE [dbo].[YourTableName] ADD CONSTRAINT [dbo].[Your
INSERT INTO [dbo].[tbl_user] (user_id,user_
::::::::::::::::::
,,,,,,,,,,,,,,,,,,
CREATE TABLE t_t(t_id, t_name, t_time,
..................
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.id, a.name, a.email FROM a INNER JOIN b ON
SELECT a.id, a.name, a.email, a.email, a
SELECT DATEADD(MONTH, DATEDIFF(MONTH, GETDATE() - DATEADD(
SELECT * FROM a LEFT JOIN b ON a.id = b.id AND b.
SELECT * FROM tags WHERE tag_name IN (SELECT tag_name FROM tags WHERE tag
SELECT * FROM Table1 t1 LEFT JOIN Table2 t2 ON t1.id =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
USE master GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO
SELECT * FROM mytable WHERE mycolumn LIKE '%' + @search + '%'
SELECT @@ROWCOUNT = IF(@ROWCOUNT = 0) BEGIN PRINT 'Error: '
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT COUNT(DISTINCT t.id) FROM (SELECT t.*, ROW_NUMBER
=[[[[[[[[[[[[[[[[[
select distinct on (col1) col1, col2 from (select col1, col2, col
SELECT * FROM mytable WHERE tag IN (SELECT tag FROM mytable GROUP BY tag H
SELECT SUM(CASE WHEN WHEN WHEN THEN THEN ELSE END) FROM FROM FROM FROM
CREATE TRIGGER trigger_name ON table1 AFTER INSERT AS BEGIN INSERT INTO table2 (
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id

SELECT * FROM myTable WHERE (SELECT COUNT(x.name) FROM myTable x
SELECT * FROM (SELECT * FROM mytable ORDER BY priority DESC LIMIT 10) AS t ORDER
WITH CTE AS ( SELECT TOP 1 Bosses, Bosses, CTE
update your_table set your_column = replace(your_column,'', '')
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
heroku:::::::::::::::::
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.id = table.
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT MIN(value) FROM ( SELECT value, MIN(value) AS value FROM your
TO_DATE(TO_DATE(TO_DATE(TO_DATE(TO_
SELECT * FROM table WHERE (@param = 'value' OR @param = 'value
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id INNER
GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY H H H H
INSERT INTO [dbo].[tbl_Product] ([ProductID], [ProductName
SELECT a.id, a.name, a.address, a.phone, a
UPDATE [dbo].[tbl_test_date] SET [dbo].[
SELECT TO_DATE(TO_DATE(TO_DATE(TO_DATE(TO
SELECT * FROM table1 WHERE (column1 = 'A' AND column2 = '
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
SELECT * FROM ( SELECT * FROM mytable WHERE id IN (1,3) ) x WHERE x
SELECT * FROM ( SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM ( SELECT TOP
UPDATE A SET A.A_ID = B.A_ID FROM A INNER JOIN
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM table1 WHERE id = @id AND (@name
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE table1.id
SELECT MIN(timestamp)) FROM your_table GROUP BY MIN(timestamp)) H H H
import import import import import import import import import import import import import import import import import import
SELECT * FROM ( SELECT * FROM table WHERE id = (SELECT MAX(id) FROM
DELETE FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.id = table.id
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
1. 2. 3. 3. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4. 4.
SELECT COUNT(DIST_Intersects(geom, x, y, z))
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
= = = = = = = = = = = = = = = = = =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
,,,,,,,,,,,,,,,,,,
SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='your_schema
SELECT MONTH(date_col) AS Month, COUNT(MONTH(date_col))
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM (SELECT *, ROW_NUMBER() OVER(PARTITION BY id ORDER
..................
SELECT * FROM table1 WHERE (column1 = 'A' AND column2 = '
var query = from c in context.Categories where c.Categories.Contains(c.
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM [dbo].[tbl_test] WHERE [dbo].[
,,,,,,,,,,,,,,,,,,
SELECT FROM FROM IN IN IN IN IN IN IN IN IN IN IN IN IN IN IN

DELETE FROM WHERE WHERE WHERE
SELECT id, sum(value) FROM ( SELECT id, value FROM table1 UNION
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2) ORDER BY id ASC
SELECT a.class, a.name, a.name, a.class, a
DELETE FROM ( SELECT t.*, ROW_NUMBER() OVER (PARTITION BY t.
SELECT * FROM table WHERE MATCH(column) AGAINST ('*' IN BOOLEAN MODE
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT a.id, a.name, a.address, a.phone, a
WHERE (@user = 'user' AND user = 'user' AND user = '
INSERT INTO new_table (id, name, email, email, email, email,
$ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $
SELECT * FROM [dbo].[tbl_tbl_tbl_tbl_tbl_
hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate
SELECT CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT
MERGE INTO [dbo].[dbo] AS AS AS AS AS AS AS
use use use use use use use use use use use use use use use use use use
..................
INSERT INTO [dbo].[tbl_test] (id, name, email,
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
UPDATE d SET d.d = d.d + 1 WHERE d.d = d
SELECT 'custom' AS abbreviation FROM my_table
SELECT * FROM mytable WHERE DATEPART(hh, [Date]) BETWEEN DATEADD
ALTER TABLE [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
SELECT * FROM (SELECT * FROM your_table) WHERE NOT EXISTS (SELECT 1 FROM
UserId UserId UserId UserId UserId RatingId RatingId RatingId RatingId
...,,,,,,,,,,,,,,,
SELECT * FROM INFORMATION_SCHEMA.INDEX_STATISTICS WHERE TABLE_NAME =
------------------
..................
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col1,
..................
..................
SELECT * FROM Table1 WHERE DATEPART(hh, [Date]) = [Date]
CREATE TABLE A ( A_ID INT, B_ID INT, C_ID INT
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM table WHERE (@StartDate = DATEADD(day, 1, @StartDate))
CREATE TABLE [dbo].[MyTable] ( [ID] INT IDENTITY(1,
..................
SELECT DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID INNER
var table1 = new Table1(); var table2 = new Table2(); var table
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
SELECT SUM(CASE WHEN type='type1' THEN amount ELSE 0 END) type1, SUM
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT * FROM table WHERE exec_datetime >= DATEADD(MINUTE
..................
INSERT INTO [dbo] ([id], [date], [date], [type],
SELECT AVG(score) FROM (SELECT AVG(score) FROM score) a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Order
SELECT listagg(listagg(listagg(listagg(listagg(listagg
INSERT INTO table_name (date, name, address, date) SELECT DATEADD(
..................
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT parent_id FROM parent_child WHERE parent_id = parent_id AND child
SELECT SUM(QUQUQUQUQUQUQUQUQUQUQUQUQUQUQU
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date_created
UPDATE table1 SET table1.id = table2.id FROM table1 INNER JOIN table2
SELECT * FROM ( SELECT * FROM Table1 WHERE (@distance = @distance AND @
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
SELECT MIN(id) FROM ( SELECT id, min(id) min_id FROM
SELECT DATEADD(YEAR, DATEDIFF(YEAR, DATEADD(YEAR, DATEDIFF
SELECT a.id, a.name, a.email, a.phone, a
..................
ALTER DATABASE [dbo] SET DEFAULT LOCATION [YourLocationHereHereHereHereHereHere
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY score) AS
..................
SELECT * FROM dbo.YourTable WHERE (@TelephoneNumber = @Telephone
SELECT FROM FROM WHERE NOT EXISTS ( SELECT 1 FROM FROM TO TO TO TO TO TO TO
..................
SELECT DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE(DATE
select * from ( select t.*, row_number() over (partition by t.
SELECT * FROM your_table WHERE DATE(your_date_your_date_your
(item.item.item.item.item.item.item.item.item
UPDATE Table1 SET Column1 = (SELECT Column2 FROM Table2 WHERE Table1.Column
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
ALTER TABLE dbo.YourTableName DROP COLUMN dbo.YourTableName
public void save(String name) { // your query here }
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) AS
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM ( SELECT * FROM revision WHERE revision_id = (SELECT MAX(Revision
,,,,,,,,,,,,,,,,,,
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
REGEXP '^[[:<:]][[:>:]][[:>:]]$
SELECT a.id, a.name, a.address, a.address, a
SELECT DISTINCT index_name FROM ( SELECT DISTINCT index_name FROM index_name ) x
Oracle Oracle 11.1.0.2.0.4.0.4.0.4.0.4.0.4.0.4.0
SELECT * FROM table WHERE (@search LIKE '%' OR @search LIKE '%' OR
viewviewviewviewviewviewviewviewviewviewviewviewviewviewviewviewviewview
SELECT DISTINCT t1.name, t2.name FROM t1 JOIN t2 ON t1.
SELECT * FROM table WHERE DATEPART(hh, [Date]) BETWEEN DATEADD(
SELECT FROM FROM WHERE NOT EXISTS ( SELECT 1 FROM FROM FROM TO TO TO TO TO TO
SELECT FROM FROM WHERE NOT EXISTS (SELECT 1 FROM FROM WHERE WHERE WHERE H H H H
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ProductID
SELECT COUNT(item.item_id) FROM item INNER JOIN item_category ON item
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM (SELECT * FROM your_table WHERE your_column ='some_
SELECT * FROM table WHERE DATEPART(mm, [Date]) = DATEPART(mm
UPDATE A SET A.A_ID = B.A_ID FROM A INNER JOIN
SELECT * FROM your_table WHERE your_column ='' AND your_column =
SELECT a.id, a.name, a.email FROM a INNER JOIN b ON
SELECT [Query].[Query].[Query].[Query].[Query].[Query
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT * FROM ( SELECT * FROM Table1 WHERE [Date] >= DATEADD(day
SELECT CAST(CAST(LENGTH(column_name) AS INT) AS VARCHAR(MAX
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
def def def def def def def def def def def def def def def def def def
WHERE (@user = 'user') OR (@user = 'user')
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
SELECT * FROM table WHERE (@param1 = 'A' AND @param2 =
..................
ALTER TABLE [dbo].[MyTable] ADD [Date] DATE IDENTITY(1,
..................
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
If(((((((((((((((((
..................
UPDATE d SET d.d = d.d + d.d + d.d
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
SELECT SUM(CASE WHEN WHEN THEN ELSE ELSE END) FROM FROM FROM TO
MATCH(x, y) AGAINST(x, y) MATCH(x,
MATCH(name,address) AGAINST(address) AGAINST(address)
UPDATE a SET a.b = b.c FROM a INNER JOIN b ON a.
SELECT * FROM table WHERE id = (SELECT id FROM table WHERE name = 'John')
..................
SELECT room_id, room_name, room_name, room_time, room
SELECT a.id, a.name, a.address, a.address, a
CREATE TABLE [dbo].[MyTable] ( [MyColumn] [MyColumn
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT DISTINCT FROM FROM HISTORY WHERE NOT EXISTS (SELECT 1 FROM HISTORY WHERE HISTORY
DELETE FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id = table
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date_created
SELECT COUNT FROM EVENT WHERE NOT EXISTS (SELECT 1 FROM USERS WHERE USERS.EVENT
SELECT * FROM product_product_relationships WHERE product_id IN (SELECT product_
SELECT YEAR(date) AS year, MONTH(date) AS month, YEAR(date
update set = where where where and and and and and and and and and and and and
UPDATE A SET A.B = B.B FROM A INNER JOIN B ON A.
you just to to to to to to to to to to to to to to to to
SELECT IF(IF(user_id=1,1,0)) AS user_id, IF
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
django.db.db.db.db.db.db.db.db.
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT CONVERT(varchar(10), CONVERT(varchar(10), CON
DELETE FROM FROM FROM WHERE WHERE NOT;;;;;;;;;;;
..................
SELECT a.id, a.name, a.email, a.email, a
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
..................
SELECT DATEPART(MONTH, [Date]) AS [Month], DATEPART(MONTH,
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT CASE WHEN (SELECT COUNT(*) FROM Table1 WHERE Table1.ID = Table2.
..................
SELECT * FROM website WHERE threshold = (SELECT MAX(Threshold) FROM website WHERE website.
SELECT * FROM table1 WHERE culture = 'culture' AND NOT EXISTS
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT tag FROM tag_tag WHERE tag IN ('tag1', 'tag2') GROUP BY
..................
SELECT MAX(value) FROM ( SELECT value FROM yourtable GROUP BY value HAVING
db.delete = { "_id": "mongodb.mongodb.mongodb.mongodb.mongodb
SELECT a.id, a.name, a.address, a.phone, a
SELECT MONTH(date_created) AS month, COUNT(DISTINCT MONTH(date_
..................
------------------
SELECT * FROM ( SELECT * FROM table WHERE (@start = @end AND @end
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT a.id, a.name, a.address, a.phone, a
SELECT FROM FROM WHERE ORDER DESC LIMIT 1
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE table.id = table
=.get(get.get(get.get(get.get(get.
SELECT * FROM mytable WHERE mycolumn LIKE '%' + search_string + '%'
SELECT a.id, a.name, a.address, a.phone, a
SELECT COUNT(DISTINCT (CASE WHEN (user.user_id = @user.
SELECT TOP ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM table WHERE effective_date >= DATEADD(day,
SELECT * FROM [dbo].[YourTable] WHERE DATEPART(YEAR,Your
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID AND
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.id = table.
INSERT INTO [dbo].[tbl_test] ( [id], [name
,,,,,,,,,,,,,,,,,,
..................
select * from ( select t.*, row_number() over (partition by t.
INSERT INTO new_table (id, name, email, password) SELECT id, name
..................
SELECT chat.id, chat.name, chat.id, chat.name, chat
DELETE FROM MyTable WHERE DATEDIFF(day, @date, @date) > 0
GO USE GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
data.table(var1,var2,var3,var4,var5,var6,var7,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [Order]
..................
$ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $ $
SELECT a.id, a.name, a.address, a.address, a
<- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <-
SELECT IF(col1 = 'Y', 1, 0) AS Y, IF(col2
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
,,,,,,,,,,,,,,,,,,
SELECT COUNT(DISTINCT (CASE WHEN a.id = 1 THEN a.id ELSE
..................
SELECT DATEDIFF(MINUTE, GETDATE()), DATEDIFF(MINUTE, GETDATE
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table2
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY [Date]
UPDATE [dbo].[tbl_user] SET [user_id] = [
INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
SELECT SUBSTRING(col, CHARINDEX(' ', col) + 1, CHARINDEX(' ',
SELECT COUNT(DISTINCT col1) col1, COUNT(DISTINCT col2) col2 FROM
SELECT * FROM ( SELECT *, (@rn := @rn + 1) / @rn
SELECT CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN (CASE WHEN
SELECT post_id, post_title, post_id, post_content, post
..................
LEFT JOIN ON ON.id = LEFT.id AND LEFT.name = 'name'
$db = $db->connect('user' => 'user' => 'user'
SELECT * FROM ( SELECT id, value, rank() over (order by value) rn
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
ROUND(SUM(value), 2)
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT COUNT FROM WHERE WHERE NOT EXISTS (SELECT 1 FROM WHERE WHERE WHERE WHERE AND )
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
import import import import import import import import import import import import import import import import import import
SELECT * FROM table WHERE date_column = DATE_FORMAT(date_column, '%
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
..................
SELECT * FROM ( SELECT * FROM table1 WHERE (@user = 'user1' OR
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
SELECT SUBSTRING(column, CHARINDEX(' ', REVERSE(column)) - CHAR
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT * FROM ( SELECT id, name, email, email, ROW_NUMBER() OVER
SELECT AVG(AVG(price)) FROM ( SELECT AVG(price)) AS
SELECT COUNT(DISTINCT p.id) AS total_pots, COUNT(DI
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID AND
SELECT * FROM ( SELECT id, name, (SELECT COUNT(*) FROM mytable WHERE
SELECT TOP 3 * FROM ( SELECT TOP 3 * FROM ( SELECT TOP 3 * FROM (
..................
SELECT * FROM myTable WHERE myColumn LIKE '%' + @myColumn + '%'
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE table.id = table
DATE_FORMAT(date_of_of_of_of_of_of_
SELECT SUBSTRING(key, 1, CHARINDEX(' ', key) - 1) AS value FROM
DATEADD(DAY, DATEDIFF(DAY, GETDATE()), GETDATE())
SELECT * FROM mytable WHERE mycolumn IN ('a','b','c','d','
CREATE INDEX idx_my_index_name ON my_table (name, value)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
sql = sql.bind(v1, v2, v3, v4, v4, v5,
------------------
..................
------------------
REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
CREATE TABLE k1 (col1 int, col2 int); CREATE TABLE k2 (
..................
..................
SELECT * FROM table WHERE (@param1 = 'Y' AND @param2 =
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY name) AS
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY id ORDER
NSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNSNS
SELECT * FROM myTable WHERE id =?
..................
SELECT * FROM sys.tables WHERE table_name ='my_table'

postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql.postgresql_postgresql_
UPDATE table1 SET value = value + 1 WHERE id IN (SELECT id FROM table1)
SELECT * FROM my_table WHERE my_column = 'foo'
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT SUM(CASE WHEN WHEN WHEN = THEN THEN ELSE END) FROM your_table
SELECT * FROM table1 t1 INNER JOIN table2 t2 ON t1.id =
UPDATE [dbo].[tbl_user_info] SET [user_info_
select * from ( select *, row_number() over (partition by id order by
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT SUM(quantity) FROM ( SELECT SUM(quantity) AS quantity FROM your_table
( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MY_
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table WHERE value = 'Y' AND
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT a.id, a.name, a.email, a.email, a
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT SUM(CASE WHEN @@ROWROWROWROWROWROWROWROWROWROWROW
SELECT COUNT(DISTINCT purchases.id) FROM purchases LEFT JOIN purchases_
[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [
SELECT table_name FROM information_schema.columns WHERE table_schema = 'YourSchema
SELECT DATE, DATE, DATE, DATE, DATE, DATE, DATE, DATE, DATE
JOIN JOIN ON ON.id = JOIN.id_user = LEFT.id_user
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT * FROM mytable WHERE category = 'category' AND timestamp >
SELECT SUM(CASE WHEN WHEN THEN ELSE END)) FROM your_table
..................
ALTER TABLE [dbo].[MyTable] ADD CONSTRAINT [PK_MyTable]
SELECT COUNT(DISTINCT(column)) FROM table
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT a.id, a.name, a.address, a.address, a
..................
or. or. or. or. or. or. or. or. or.
SELECT * FROM [dbo].[tbl_tbl_tbl_tbl_tbl_
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
..................

SELECT * FROM users WHERE users.user_id =? AND users.user_id

DELETE FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM ( SELECT * FROM table1 WHERE id = 5 ORDER BY id DESC LIMIT
DELETE FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id = table
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
<- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <-
..................
SELECT * FROM table1 WHERE DATE(date_time) = DATE(NOW()) AND
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
USE master GO USE master GO USE master GO USE master GO USE master GO USE master GO
DELETE FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.id = table.id
SELECT DISTINCT room_type FROM room_types WHERE room_type IN (SELECT DISTINCT room
SELECT a.id, a.name, a.address, a.phone, a
hibernate.mapping.mapping.mapping.mapping.mapping.mapping.mapping.mapping.
MATCH(a, b, c) AGAINST(a, b, c)
SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
SELECT a.id, a.name, a.address, a.phone, a
,,,,,,,,,,,,,,,,,,
matlab. matlab. matlab. matlab. matlab. matlab. matlab. matlab. matlab.
sqlite-sqlite-sqlite-sqlite-sqlite-sqlite-sqlite-sqlite-sqlite-
SELECT a.id, a.name, a.address, a.city, a
..................
..................
ALTER TABLE [dbo].[Article] ADD CONSTRAINT [FK_Article_Article_
jdbcjdbcjdbcjdbcjdbcjdbcjdbcjdbcjdbcjdbcjdbc:::::::
SELECT COUNT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(DISTINCT(
CREATE TABLE t1 ( id INT PRIMARY KEY, name VARCHAR(50) NOT NULL, address
SELECT DISTINCT t.* FROM (SELECT DISTINCT t.*, ROW_NUMBER() OVER (PART
to to to to to to to to to to to to to to to to to to
File file = new File("your.file.extension"); File file = file.get
SELECT * FROM table WHERE time_to_sec(time_to_sec(time
..................
@SQL = 'SELECT'+ @SQL +'FROM'+ @SQL + '
,,,,,,,,,,,,,,,,,,
DELETE FROM FROM FROM WHERE WHERE NOT;;;;;;;;;;;
SET SQL_DEFAULT_VALUE ON;
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE col1 = 'A
SELECT * FROM table WHERE DATEPART(hh,date) = DATEPART(hh,

UPDATE mytable SET mycolumn = concat(mycolumn,'', mycolumn) WHERE
SELECT * FROM your_table WHERE NOT EXISTS (SELECT 1 FROM your_table WHERE your
SELECT a.id, a.name, a.address, a.phone, a
MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
SELECT DATE_ADD(DAY, DATE_ADD(DAY, DATE_ADD(DAY
SELECT SUM(Amount) AS Amount, SUM(Amount) AS Amount FROM ( SELECT SUM
CREATE TABLE [dbo].[tbl_user_role_role_role_role
SELECT branch, COUNT(DISTINCT YEAR(date)) AS year, COUNT(DISTINCT
SELECT * FROM table WHERE (column1 IS NULL OR column1 = 'NULL' OR
SUM(wwwwwwwwwwwwwwww
UPDATE tag SET tag.tag_name = tag.tag_name WHERE tag.tag
SELECT DATEADD(MINUTE, DATEDIFF(MINUTE, DATEADD(MINUTE
UPDATE table1 SET value = value WHERE id = 1; UPDATE table1 SET value = value
SELECT SUM(Price) FROM ( SELECT SUM(Quantity) AS Total FROM Table1 GROUP
..................
DELETE FROM table WHERE id IN (SELECT id FROM table GROUP BY id HAVING COUNT
SELECT * FROM (SELECT * FROM your_table) WHERE (your_column = '
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT * FROM ( SELECT pk, MAX(value) AS value FROM table1 GROUP BY
SELECT a.id, a.name, a.address, a.city, a
CREATE TABLE A ( A_ID INT, B_ID INT, C_ID INT
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
::::::::::::::::::
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM table1 WHERE (@param1 = 'value1' OR @param1
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
declare @start datetime = '2012-05-30' declare @end datetime = '2012-05-30'
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT * FROM ( SELECT * FROM my_table ORDER BY id DESC LIMIT 1 ) x
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
..................
UPDATE [dbo].[tbl_user_info] SET [user_info].
SELECT * FROM ( SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name
SELECT meta_key FROM wp_postmeta WHERE meta_key = 'post_name
UPDATE a SET a.b = b.c FROM a a JOIN b b ON a
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT a.id, a.name, a.email, a.email, a
SELECT CONVERT(varchar(10), CONVERT(varchar(10), CON
CREATE PROCEDURE [dbo].[GetAllColumns] @column_name nv
SELECT AVG(count) FROM ( SELECT AVG(count) AS avg_count
SELECT SUBSTR(col, 1, 1) FROM (SELECT SUBSTR(col, 1, 1)
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT MIN(date) AS mindate, MAX(date) AS maxdate FROM (
..................
SELECT * FROM ( SELECT a.id, a.name, a.address, a
SELECT * FROM TABLE WHERE COL IN (SELECT COL FROM TABLE WHERE COL IN (SELECT COL
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
INSERT INTO table1 (id, name, email, email, email, email, email
UPDATE Table1 SET Table1.Value = Table2.Value FROM Table1 INNER JOIN Table2
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
SELECT * FROM table WHERE TO_TIMESTAMP(TO_TIMESTAMP(TO_TIMESTAMP(TO
UPDATE [dbo].[tbl_user_info] SET [user_info_
SELECT a.id, a.name, a.price, a.price, a
= = = = = = = = = = = = = = = = = =
SELECT SUM(IF(B='',')) FROM your_______
ALTER TABLE mytable ADD COLUMN mycolumn VARCHAR2(20) NOT NULL;
IF EXISTS(SELECT * FROM table1 WHERE table1.id = table2.id) INSERT
USE master GO USE master GO USE master GO USE master GO USE master GO USE master GO
CREATE VIEW [dbo].[view_name] AS SELECT [name], [name
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT SUM(value) FROM ( SELECT SUM(value) AS value FROM table1 )
SELECT COUNT(DISTINCT c.id) AS count FROM c LEFT JOIN dbo.
UPDATE [dbo].[[[[[[[[[[[[[
MERGE INTO dbo.tbl_tbl_tbl_tbl_tbl_tbl_

SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY pattern ORDER
SELECT * FROM ( SELECT *, RN = ROW_NUMBER() OVER (PARTITION
SELECT * FROM ( SELECT pid, min(date) as mindate FROM mytable GROUP
SELECT TOP 5 * FROM ( SELECT TOP 5 * FROM Table1 ) t1 INNER JOIN
UPDATE my_table SET my_column = my_column +'' + my_
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT COUNT(DISTINCT (CASE WHEN (COUNT(DISTINCT (CASE WHEN (COUNT
SELECT SUBSTRING(col, CHARINDEX(' ', col) + 1, CHARINDEX(' ',
select id, max(value) from ( select id, value, row_number()
SELECT * FROM table WHERE REGEXP_LIKE(column, '^[[:digit
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
UPDATE t1 SET t1.value = t2.value FROM t1 INNER JOIN t2
USE master GO USE master GO USE master GO GO GO GO GO GO
DELETE FROM FROM FROM TO TO TO TO TO TO TO TO TO TO TO TO TO TO
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 ORDER BY id DESC )
SELECT * FROM my_table WHERE my_column IN (SELECT my_column FROM my
SELECT a.id, a.name, a.address, a.phone, a
SELECT DISTINCT a.id, a.name, a.email, a.email,
SELECT * FROM dbo.tbl_tbl_tbl_tbl_tbl_tbl_
SELECT COUNT(ticket_id) FROM ticket_tickets WHERE ticket_id IN (
..................
..................
select to_char(name, 'fm') from dual;;;;;;
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
UPDATE table1 SET new_value = new_value FROM table1 WHERE new_value
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID AND
DELETE FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id = table
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
..................
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table2
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
django.db.db.db.db.db.db.db.db.
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table WHERE table.id = table.
SELECT EmpName, ManagerName FROM Employees WHERE EmpName = 'John'
SELECT COUNT(DISTINCT a.id) FROM (SELECT a.id, a.
SELECT a.id, a.name, a.address, a.address, a
UPDATE a SET a.a_id = a.a_id FROM a JOIN b
UPDATE A SET A.A = B.A FROM A A INNER JOIN B B ON
UPDATE d SET d.d = d.d FROM d JOIN d d ON d.
SELECT * FROM ( SELECT transaction_id, max(transaction_id) as max_
SELECT a.id, a.name, a.address, a.city, a
cd cd cd cd cd cd cd cd cd cd cd cd cd cd cd cd cd cd
SELECT * FROM table WHERE MATCH(column) AGAINST('A' IN IN IN
SELECT colA, colB, colC FROM (SELECT colA, colB,
SELECT SUM(price) FROM orders WHERE DATE(orderdate) = DATE(NOW())
declare @sql varchar(max) set @sql = 'SELECT * FROM'+ @
SELECT DISTINCT a.id FROM a JOIN b ON a.id = b.id AND
SELECT * FROM mytable WHERE DATEPART(hh, [Date]) = DATEPART(
SELECT SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING(SUBSTRING
SELECT * FROM mytable WHERE REGEXP_LIKE(mycolumn, '^[
SELECT TOP 1 @value = value FROM table1 WHERE @value = 'value' ORDER
SELECT DISTINCT guid FROM (SELECT DISTINCT guid FROM mytable) AS t1
SELECT * FROM ( SELECT * FROM Table1 WHERE [Date] >= DATEADD(day
purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch purch
SELECT * FROM ( SELECT * FROM mytable WHERE DATE(date) = DATE(CURRENT
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.id, a.name, a.address, a.address, a
mongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodbmongodb
comcomcomcomcomcomcomcomcomcomcomcomcomcomcomcomcomcom
SELECT * FROM `table` WHERE `key` IN ('a', 'b', '
SELECT TOP 1 [Date], [Value], [Value], [Value], [Value]
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
..................
SELECT * FROM mytable WHERE REGEXP_LIKE(mycolumn, '^[
INSERT INTO table_name (col1, col2, col3) SELECT col1, col2, col
SELECT DATEADD(DAY, DATEDIFF(DAY, DATEADD(DAY, DATEDIFF
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col ORDER
SELECT a.id, a.name, a.address, a.address, a
SELECT SUM(CASE WHEN [Date] = '01/01/2012' THEN [Date]
SELECT a.id FROM a LEFT JOIN b ON a.id = b.id AND
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
SELECT * FROM cars WHERE NOT EXISTS ( SELECT 1 FROM jobs WHERE job_id = cars
SELECT ROUND(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST
..................
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT FROM FROM ORDER BY DESC DESC
DELETE FROM FROM TO TO TO TO TO TO TO TO TO TO TO TO TO TO TO
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 AND (date_created
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT DISTINCT [Group], [Group], [Group], [Group], [Group], [
select to_date(to_date(date_to_date(date_to
..................
SELECT * FROM table1 WHERE (@user = 'user1' AND user = 'user
..,,,,,,,,,,,,,,,,
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
..................
SELECT * FROM ( SELECT * FROM staffs WHERE staff_id = 'A' AND
SELECT SUM(CASE WHEN a = b THEN 1 ELSE 0 END) FROM a
SELECT * FROM mytable WHERE unix_timestamp(time_stamp) >= unix_timestamp
SELECT * FROM dbo.MyTable WHERE MyColumn = @MyColumn
SELECT COUNT(DISTINCT SUBSTRING(col, 1, CHARINDEX(' ', col) -
SELECT a.id, a.name, a.address, a.city, a
SELECT SUM(CASE WHEN [Date] = '01/01' THEN [Date] ELSE [
SELECT * FROM (SELECT * FROM table1 WHERE table1.id = table2.id)
..................
SELECT * FROM (SELECT * FROM my_table) WHERE my_table.my_
DELETE FROM FROM FROM FROM WHERE NOT EXISTS (SELECT 1 FROM FROM FROM WHERE WHERE WHERE.
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
::::::::::::::::::
SELECT COUNT(DISTINCT [Date]) FROM ( SELECT [Date], [Count] =
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM Table1 WHERE (@param1 = 'value1' OR @param1
SELECT a.id, a.name, a.address, a.city, a
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT * FROM mytable WHERE mycolumn LIKE '%' + @mycolumn + '%'
UPDATE [dbo].[MyTable] SET [dbo].[MyTable]
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 0 UNION ALL SELECT *
SELECT SUM(CASE WHEN a.type = 'A' THEN a.value ELSE 0
SELECT u.name, u.email, u.email FROM users u INNER JOIN users
..................
SELECT COUNT(DISTINCT c.id) AS Cnt, COUNT(DISTINCT d
requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests requests
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT SUM(CASE WHEN status = 'active' THEN 1 ELSE 0 END) active,
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
ALTER DATABASE [dbo] WITH CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK CHECK
SELECT * FROM room WHERE room_id IN (SELECT room_id FROM room WHERE room
var query = from a in db.TableA join b in db.TableB on
SELECT FROM ORDER BY DESC LIMIT 1
SELECT * FROM table WHERE (@user = 'user' AND @user = 'user
GRANT CONNECT TO 'your_user' WITH GRANT OPTION

For For For For For For For For For For For For For For For For For For
SELECT * FROM table1 WHERE (column1 LIKE '%' OR column1 LIKE '%'
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
public void notify(VVVVVVVVVVVVVV
SELECT * FROM mytable WHERE id IN (SELECT id FROM mytable WHERE name = '
<- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <-
SELECT YEAR FROM HISTORY WHERE HISTORY.HISTORY.HISTORY.HISTORY.
select emp_name, emp_salary, emp_salary, emp_salary, emp
SELECT * FROM [dbo].[tbl_user] WHERE [user] LIKE '%
SELECT a.id, a.name, a.email, a.phone, a
SELECT DISTINCT t1.id, t1.name, t1.email, t1.email FROM
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Group

MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER MER
the the the the the the the the the the the the the the the the the the
SELECT * FROM users WHERE location = 'http://google.com' AND location = '
DELETE FROM ( SELECT id, MIN(date) AS date FROM table GROUP BY id )
UPDATE table1 SET column1 = CASE WHEN column1 = 'value1' THEN 'value
INSERT INTO table_name (name,value) SELECT name,value FROM table_name
Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle
SELECT [Name], [Value], [Value], [Value], [Value], [Value
update.value('@@text', 'v')

SELECT * FROM your_table WHERE your_column = 'your_column'
CREATE TRIGGER ON_______ AFTER AFTER AFTER ON___
declare @var varchar(max) set @var = 'var' declare @var varchar
UPDATE A SET A.A_ID = B.A_ID FROM A INNER JOIN
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
MATCH(name,email) AGAINST('email',email) AGAINST('
SELECT SUM(time) FROM (SELECT time FROM your_table WHERE time <= DATE(
CREATE TABLE [dbo].[MyTable] ( [ID] INT IDENTITY(1,
INSERT INTO A (id, name, email, phone, phone, email, phone,
SELECT * FROM table1 a JOIN table2 b ON a.id = b.id
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY GroupID
SELECT AVG(value) FROM ( SELECT AVG(value) FROM table1 )
SELECT FROM FROM WHERE NOT EXISTS ( SELECT 1 FROM FROM WHERE WHERE BY BY BY BY BY
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT a.id, a.name, a.address, a.phone, a
SELECT CAST(DATEPART(hh,DateDateDate) AS DATE) AS DATEPART
SQL> declare l_sql varchar2(100); SQL> begin l_sql := '
::::::::::::::::::
SELECT * FROM mytable WHERE SUBSTR(col, 1, CHARINDEX(' ', col)
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
CREATE TABLE my_table ( id INT IDENTITY(1,1) PRIMARY KEY, name VARCHAR(
SELECT * FROM ( SELECT * FROM your_table WHERE your_column ='some_
SELECT table_name, column_name, ordinal_position FROM information_schema.columns
..................
SELECT a.id, a.name, a.address, a.phone, a
::::::::::::::::::
SELECT * FROM ( SELECT *, @date := @date + 1 AS date FROM table
SELECT COUNT(DISTINCT a.id) FROM a LEFT JOIN b ON a.id
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(DISTINCT user_id) FROM users u LEFT JOIN users_courses courses

SELECT COUNT(id) FROM ( SELECT id, COUNT(id) AS cnt FROM (
SELECT * FROM sys.traces WHERE name = 'MyProcedureName'
CREATE TYPE my_type_my_type_my_type_my_type_
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
( ( ( ( ( ( ( ( ( ( ( ( ( ) ) ) ) )
SELECT COUNT(DISTINCT(CASE WHEN(DATE(DATE(DATE(DATE(DATE
SELECT COUNT(DISTINCT GROUP_CONCAT(DISTINCT GROUP_CONCAT(DI
WHERE DATEPART(YEAR,GETDATE()) = DATEPART(YEAR,GETDATE())
def def def def def = = = = = = = = = = = = =
SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
..................
SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id AND
REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
public void register(String name) { register(name); }
pg_catalog.pg_catalog.pg_catalog.pg_catalog.pg_
var query = from c in context.Categories join c in context.Categories on c.
UPDATE a SET a.b = b.c FROM a INNER JOIN b ON a.
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM table WHERE (column1 IN ('A', 'B', 'C',
SELECT * FROM dbo.your_table WHERE DATE(your_date_your_

SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT a.id, a.name, a.email, a.email FROM a
SELECT SUM(CASE WHEN a.id = b.id THEN a.value ELSE 0
SELECT SUM(value) FROM table1 WHERE id IN (SELECT id FROM table2)
DELETE FROM TABLE WHERE NOT EXISTS (SELECT 1 FROM TABLE WHERE TABLE.ID = TABLE.
SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.ID = Table2.ID AND
SELECT * FROM ( SELECT * FROM mytable ORDER BY id DESC LIMIT 1 ) t ORDER
SELECT a.id, a.name, a.address, a.address, a
SELECT COUNT(DISTINCT DATE(DATE(DATE(DATE(DATE(DATE(DATE
INSERT INTO new_table (id, name, default) SELECT id, name, default
UPDATE SET.new_new_new_old_old_old_old_old
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name = 'John')
..................
SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t
SELECT * FROM ( SELECT * FROM Table1 WHERE (Column1 = 'A' AND
SELECT * FROM table ORDER BY (CASE WHEN value = 'A' THEN value ELSE NULL
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT SUM(T.TOTAL) OVER (PARTITION BY T.TOTAL ORDER
SELECT a.id, a.name, a.email, a.phone, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT a.id, a.name, a.email, a.email, a
public partial class Country { public CountryCountryCountryCountryCountryCountryCountryCountryCountryCountryCountryCountry
UPDATE d SET d.d = d.d + d.d WHERE d.d
UPDATE SET SET = = = = = = = = = = = = = = =
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [user
SELECT * FROM [dbo].[tbl_test] WHERE DATEPART(hh,
SELECT a.id, a.name, a.address, a.phone, a
..................
SELECT * FROM ( SELECT * FROM Table1 WHERE (@user = 'user1' AND
..................
SELECT * FROM table WHERE date_time >= DATEADD(hh, DATEDIFF(hh
SELECT listagg(listagg(listagg(listagg(listagg(listagg
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT SUM(CASE WHEN (a.value = 0 THEN a.value / a.
UPDATE a SET a.a_b_c_d = b.c_d
SELECT * FROM TABLE WHERE ( ( ( ( ( ( ( ( ) ) ) ) )
::::::::::::::::::
DATE
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM table1 WHERE timestamp >= NOW() AND timestamp < NOW()
SELECT * FROM ( SELECT * FROM Table1 WHERE StartDate >= DATEADD(MONTH,
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT * FROM your_table WHERE DATE(your_date_your_date_your
SELECT * FROM mytable ORDER BY CASE WHEN language = 'en' THEN 1 WHEN language
..................
SELECT COUNT(DISTINCT(CASE WHEN(A.A_A_A_A
SELECT * FROM mytable WHERE mycolumn LIKE '%' + @search + '%'
= = = = = = = = = = = = = = = = = =
SELECT * FROM ( SELECT * FROM table1 WHERE parent_id = 1 UNION ALL

ALTER TABLE [d] DROP IDENTITY IDENTITY IDENTITY IDENTITY IDENTITY IDENTITY
MATCH(text) AGAINST('text') AGAINST('text') AGAIN
SELECT * FROM ( SELECT * FROM sys.tables WHERE table_name = 'tbl_
UPDATE a SET a.b = b.b FROM a JOIN b ON a.b
SELECT CASE WHEN (CASE WHEN @user = 'user' THEN @user ELSE @user
SELECT * FROM your_table WHERE your_column IN ('A','B','C','
SELECT DISTINCT FROM FROM ORDER BY CASE WHEN MATCH THEN THEN WHEN THEN END
SELECT SUM(CASE WHEN status = 'active' THEN 1 ELSE 0 END) active,
UPDATE table1 SET id = (SELECT id FROM table1 t1 WHERE t1.id
SELECT * FROM ( SELECT *, (SELECT * FROM (SELECT * FROM (SELECT *
SELECT DATEDIFF(MINUTE, DATEADD(MINUTE, DATEDIFF(MINUTE
UPDATE table SET col = SUBSTRING(col, 1, CHARINDEX(' ', col) -
SELECT SUBSTRING(column, 1, CHARINDEX(' ', REVERSE(column)) -
SELECT AVG(score) FROM ( SELECT AVG(score) AS score FROM table
MERGE INTO new_table_new_table_new_table_new_table
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT * FROM table_name UNION ALL SELECT * FROM table_
SQL-LEM-SQL-LEM-SQL-LEM-SQL-LE
SELECT * FROM table WHERE (column LIKE '%' OR column LIKE '%' OR column LIKE
SELECT * FROM TABLE WHERE NOT EXISTS (SELECT * FROM TABLE WHERE TABLE.ID = TABLE
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
SELECT * FROM (SELECT * FROM your_table ORDER BY date DESC) WHERE date <
SELECT COUNT(DISTINCT item_id) FROM your_table GROUP BY item_id
DELETE FROM FROM FROM FROM FROM FROM FROM FROM TO WHERE NOT EXISTS ( SELECT 1 FROM FROM
select to_char(a.col1, 'yyyymmdd') from (
UPDATE A SET A.A_ID = B.A_ID FROM A INNER JOIN
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
------------------
CREATE PROCEDURE [dbo].[usp_get_all_data_in
..................
SELECT COALESCE(CONVERT(varchar(50), CONVERT
SELECT e.employee, e.employee, e.employee, e.employee, e
= =.text(m.m.m.m.m.m.m
DELETE FROM TABLE WHERE EXISTS(SELECT 1 FROM TABLE WHERE TABLE.ID = TABLE.ID
SELECT * FROM your_table_name WHERE @@identity = 1
SELECT SUM(CASE WHEN WHEN = THEN ELSE END)) FROM your_table
UPDATE a SET a.b = b.b FROM a INNER JOIN b ON a.
SELECT * FROM table WHERE EXISTS (SELECT 1 FROM table t1 WHERE t1.id =
def def def def def def def def def def def def def def def def def def
SELECT SUM(a.value) AS value, SUM(b.value) AS value
SELECT * FROM table WHERE (column LIKE '%' OR column LIKE '%' OR column LIKE
SELECT x.id, x.name, x.price, x.price, x
SELECT COUNT(DISTINCT country_code) FROM country_codes WHERE country_code IN
DATE DATE
..................
SELECT * FROM table WHERE SUBSTR(column, 1, CHARINDEX(' ', column) -
SELECT CASE WHEN (CASE WHEN @param = 'A' THEN @param ELSE @param
..................
SELECT FROM FROM WHERE REG REG REG REG
SELECT SUM(CASE WHEN WHEN = THEN ELSE END) FROM FROM FROM
GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY GROUP BY
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY UserID
INSERT INTO [dbo].[tbl_test] ([id], [name], [
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM sys.dm_exec_requests_stats WHERE session_id = @
SELECT CONVERT(varchar(50), CONVERT(varchar(50
SELECT FROM_UNUNUNUNUNUNUNUNUNUNUNUNUNUNUN
SELECT * FROM table1 WHERE (column1 = 'A' AND column2 = '
SELECT COUNT(DISTINCT (SELECT COUNT(*) FROM table)) AS Total FROM table
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Order
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
UPDATE SET.timestamp = TIMESTAMP.timestamp WHERE.timestamp IS NULL
UPDATE [dbo].[tbl_user_role_role_role_role_
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 UN
SELECT * FROM ( SELECT * FROM table1 WHERE col1 IS NULL UNION ALL SELECT
db22.db22.db2.db2.db2.db2.db2.db2.
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT authors.author_name, authors.author_name FROM authors INNER JOIN genres
SELECT * FROM your_table WHERE your_column = 'your_column' AND your
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE table1.id
SELECT * FROM ( SELECT a.id, a.name, a.email, a
SELECT COUNT(DISTINCT CASE WHEN bit1 = 1 THEN 1 ELSE 0 END) AS
..................
CREATE TABLE `table_name` ( `name` VARCHAR(255) NOT NULL, `
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY id ORDER
..................
DELETE FROM table WHERE NOT EXISTS (SELECT 1 FROM table t2 WHERE t2.id =
SELECT * FROM posts p WHERE p.author = (SELECT MAX(p.author)
SELECT COUNT(DISTINCT a.id) FROM a LEFT JOIN b ON a.id
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.cat
( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
SELECT * FROM table WHERE foo = 'bar' OR foo = 'baz' OR foo
SELECT * FROM [dbo].[tbl_a_b] WHERE [dbo
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID AND
SELECT MAX(value) FROM table GROUP BY value HAVING COUNT(DISTINCT attribute
SELECT XMLColumn( 'ns:ns:ns:ns:ns:ns:ns

SELECT SUM(CASE WHEN a.id = 1 THEN a.value ELSE 0 END)
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT DATEDIFF(MINUTE, GETDATE(), GETDATE()) AS TimeInsec FROM
SELECT MAX(T.T.T.T.T.T.T.T
[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [
SELECT TOP ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
SELECT DATE, SUM, SUM, SUM OVER OVER OVER OVER OVER OVER OVER OVER OVER OVER
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT * FROM table1 WHERE (column1 = 'A' AND
select * from ( select t.*, row_number() over (partition by t.
SELECT COUNT(DISTINCT a.id) AS num_of_a, COUNT(
SELECT * FROM table1 WHERE table1.id IN (SELECT table2.id FROM table2
SELECT u.user_id, u.group_id, u.username, u
..................
,,,,,,,,,,,,,,,,,,
SELECT * FROM table1 WHERE id = 1 AND (id = 2 OR id = 3
SELECT a.id, a.name, a.address, a.address, a
..................
$products = doctrine_catalogue.Product::find('all', '=',
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id IN (
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT a.id, a.name, a.address, a.phone, a
postgresql:::::::::::::::::
SELECT DATE(date_created) AS date_created, SUM(CASE WHEN date_
..................
..................
SELECT SUM(orderprice) FROM orders WHERE orderid IN (SELECT orderid FROM orders
..................
..,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT * FROM sys.columns WHERE OBJECT_NAME(object_id) = 'My
SELECT a.id, a.name, a.address, a.address, a
SELECT COUNT(category_id) FROM category WHERE category_id IN (SELECT category_
SELECT * FROM table WHERE DATE(date) = DATE(NOW()) AND DATE(date
SELECT TOP 1 ID, MAX(Value) FROM YourTable GROUP BY ID
MATCH(date,time) AGAINST(date) AGAINST(date)
SELECT a.id, a.name, a.price, a.price, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Order
UPDATE [dbo].[tbl_test] SET [dbo].[tbl_
select id, name, (select min(id) from (select t.*, row
MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
SELECT * FROM your_table ORDER BY CASE WHEN ORDER = THEN WHEN THEN WHEN THEN WHEN
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT a.id, a.name, a.email, a.email, a
GRANT SELECT, GRANT SELECT, GRANT SELECT, GRANT SELECT, GRANT
SELECT * FROM sys.objects WHERE object_name ='my_name' AND object
..................
UPDATE A SET A.B = B.B FROM A INNER JOIN B ON A.
SELECT SUBSTRING(col,1,3) AS col1, SUBSTRING(col,1,3)
SELECT * FROM Table1 UNION ALL SELECT * FROM Table2
SELECT id, SUM(value) FROM your_table GROUP BY id
SELECT * FROM ( SELECT * FROM table1 WHERE id = 'a' AND name =
.,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT * FROM Table1 WHERE Column1 = 'A' UNION
SELECT DISTINCT t1.id, t1.name, t2.name FROM table1 t1
<script> <script> <script> <script> </script> </script>
,,,,,,,,,,,,,,,,,,
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT CAST(time AS varchar(255)) FROM MyTable ORDER BY CAST(time AS
SELECT COUNT(DISTINCT (CASE WHEN a.id = 1 THEN a.id ELSE
JOIN JOIN_to_to_to_to_to_to_to_to
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
CREATE TABLE school_school_school ( school_id INT, school_id INT,
SELECT * FROM your_table WHERE (@param1 = 'value1' AND @param
SELECT a.id, a.name, a.address, a.phone, a
SELECT * FROM table WHERE (value1 = 'value1' AND value2 = 'value
SELECT * FROM @xml.nodes('/root/name') AS root(name)
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM table WHERE distance(distance(distance(distance(distance(distance(distance
CREATE INDEX idx_user_user_user_user_user_user_user_
SELECT * FROM table WHERE DATEDIFF(MINUTE, DATEADD(MINUTE, DATE
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT SUM(CASE WHEN [Date] = 'A' THEN [Date] ELSE [
SELECT CONVERT(VARCHAR(10), CONVERT(VARCHAR(10), CON
UPDATE dbo.dbo.dbo.dbo.dbo.dbo
UPDATE a SET a.b = b.b FROM a JOIN b ON a.a
SELECT a.id, a.name, a.price, a.price, a
..................
..................
SELECT COUNT(user_id) FROM logins WHERE DATE(login_date) BET
SELECT * FROM table WHERE value = (SELECT MAX(value) FROM table WHERE value =
SELECT * FROM table1 t1 LEFT JOIN table2 t2 ON t1.id =
UPDATE A SET A.ID = B.ID FROM A INNER JOIN B ON A.
SELECT * FROM table WHERE NOT EXISTS (SELECT 1 FROM table WHERE table.column LIKE '%
SELECT XMLColumn('myxml','myxml','myxml','my
declare @param varchar(100) set @param = 'param1' set @param = '
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM ( SELECT * FROM table WHERE (@start = 'A' AND @
SELECT COUNT(DISTINCT c.c_c_c_c_c_c
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM sys.dm_sql_referenced_entities WHERE OBJECT_NAME(
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE
SELECT * FROM ( SELECT DATEDIFF(MONTH, startdate, enddate) AS month
WHERE (DATEPART(YEAR,Date) = DATEADD(MONTH,1,Date))
SELECT * FROM (SELECT * FROM your_table WHERE your_column IN ('A','
SELECT CASE WHEN ISNULL(ISNULL(ISNULL(ISNULL(ISNULL(
CREATE VIEW [dbo].[view_name] AS SELECT [name], [description
SELECT COALESCE(SUM(CASE WHEN a.id = 1 THEN a.
SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT *
SELECT * FROM my_table WHERE my_column IN (SELECT my_column FROM my
SELECT DISTINCT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT
..................
UPDATE my_table SET my_column = replace(my_column,'', '
::::::::::::::::::
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
SELECT * FROM table1 WHERE (@param1 = 'value1' AND @param2

SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
..................
WHERE DATEPART(YEAR,GETDATE()) = DATEPART(YEAR,GETDATE())
..................
CREATE TABLE [dbo].[tbl_a_b] ( [a_id
SELECT SUM(CASE WHEN DATEPART(hh,DateCreated) = DATEPART(hh

INSERT INTO [dbo].[tbl_tbl_tbl_tbl_tbl_tbl
public void register(String registered) { register(registered); }
SELECT COUNT(DISTINCT game_id) AS num_games, COUNT(DISTINCT
..................
,,,,,,,,,,,,,,,,,,
SELECT * FROM [dbo].[tbl_search_list] WHERE [search_
SELECT * FROM members LEFT JOIN membership_has_expired_sessions ON membership_has_
CREATE TABLE mytable ( col1 text, col2 text, col3 text, col
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT COUNT(DISTINCT id) FROM my_table WHERE id IN (SELECT id FROM
..................
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY id) rn
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (
SELECT FROM FROM WHERE WHERE IN (SELECT FROM FROM WHERE WHERE WHERE)
hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate hibernate
SELECT FROM ORDER BY DESC LIMIT 10
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id INNER
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY col1,
SELECT * FROM table WHERE id NOT IN (SELECT id FROM table WHERE name = 'John
SELECT country, country_name FROM country_table WHERE country_name = 'USA
SELECT * FROM ( SELECT *, RAND() OVER (ORDER BY NEWID()) AS
=Data.DataSource("MyDataSet", "MyDataSet", "MyDataSet", "
SELECT * FROM table WHERE (column1 LIKE '%' OR column1 LIKE '%' OR
SELECT SUBSTRING(column, 1, CHARINDEX(' ', column) - CHARINDEX(' ',
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
,,,,,,,,,,,,,,,,,,
SELECT * FROM Table1 WHERE EXISTS (SELECT 1 FROM Table2 WHERE Table1.ID =
SELECT * FROM ( SELECT * FROM Table1 UNION ALL SELECT * FROM Table2 )
SELECT * FROM mytable WHERE mycolumn LIKE '%' || mycolumn || '%'
SELECT * FROM ( SELECT * FROM Table1 WHERE (@user = 'user1' AND
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
..................
SELECT a.id, a.name, a.address, a.address, a
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT MIN(date) FROM ( SELECT date, min(date) mindate FROM table
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (ORDER BY ID) rn
def find_all_records(data, row) = row.all_records(
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
mdmdmdmdmdmdmdmdmdmdmdmdmdmdmdmdmdmd
use use use use use use use use use use use use use use use use use use
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
..................
INSERT INTO new_new_new_new_new_new_new_new_
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Name
CAST(DATEPART(YEAR,DATEPART(YEAR,DATEPART(YEAR,DATE
SELECT a.id, a.name, a.address, a.city, a
SELECT * FROM table1 WHERE (@param1 LIKE '%' OR @param1 LIKE
flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat flat
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
use use use use use use use use use use use use use use use use use use
CREATE TABLE A ( A_ID INT, B_ID INT, C_ID INT
SELECT DATEDIFF(MINUTE, DATEADD(MINUTE, DATEDIFF(MINUTE
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
SELECT a.id, a.name, a.address, a.phone, a
SELECT id, value, row_number() OVER (ORDER BY value) AS seqnum
SELECT * FROM ( SELECT * FROM table1 WHERE (@user = 'user1' AND
..................
SELECT * FROM ( SELECT * FROM yourtable WHERE col1 = 'value1' AND col
..................
SELECT u.user_id, u.user_name, u.user_email
..................
SELECT DATEADD(DAY, DATEDIFF(WEEK, DATEADD(WEEK, DATEDIFF
SELECT SUM(value) FROM table
..................
SELECT * FROM table WHERE id IN (SELECT id FROM table WHERE name='John')
SELECT * FROM [dbo].[tbl_a_b] WHERE [dbo
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT * FROM table1 UNION ALL SELECT * FROM table2 )
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT DISTINCT a.id, a.name, a.email, a.email,
INSERT INTO table (id, name) SELECT id, name FROM table
CONNECT BY level <= (INTERVAL (INTERVAL (INTERVAL (INTERVAL (INTERVAL (INTERVAL (INTERVAL
INSERT INTO table (id, name, email, email, email, email, email,
public public public public() { } public public public() { } public public public() {
SELECT DATEADD(MONTH, DATEDIFF(MONTH, GETDATE()), GETDATE())
SELECT a.id, a.name, a.address, a.city, a
select to_char(sysdate, 'W') from dual; TO_CHAR(
SELECT * FROM table WHERE value = 'value' AND value <> 'value'
var dates = from d in db.Dates where d.Date >= dateadd(day
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
..................
public void register(String name, String password) { }
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
UPDATE table1 SET count = (SELECT COUNT(*) FROM table2 WHERE table1.id
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT MIN(date) AS first_date, MAX(date) AS last_date
select count(regexp_substr(col, '[^0-9]')) from (select regexp
SELECT * FROM table1 WHERE timestamp = (SELECT MAX(timestamp) FROM table2 WHERE
SELECT CASE WHEN (SELECT COUNT(*) FROM table) = 1 THEN 'NEW' ELSE
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY name ORDER
UPDATE A SET A.B = B.C FROM A INNER JOIN B ON A.
SELECT * FROM table1 WHERE status = 'new' AND (status = 'old'
@@@@@@@@
SELECT SUM(CASE WHEN amount = 'A' THEN amount ELSE 0 END) A,
def get_by_by_by_by_by_by_by_by
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY [Date
INSERT INTO new_new_new_new_new_new_new_new_
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *

CREATE TRIGGER [dbo].[MyTrigger] ON [dbo].[My
min(date)
SELECT * FROM ( SELECT * FROM Table1 WHERE Table1.ID = Table2.ID )
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
CREATE TEMPORARY TABLE TEMPORARY_TABLE_NAME AS SELECT * FROM TEMPOR
SELECT * FROM table ORDER BY CASE WHEN col1 = 'value1' THEN 1 ELSE 0
SELECT a.id, a.name, a.address, a.address, a
------------------
..................
..................
RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE RE
SELECT SUBSTRING(col, 1, CHARINDEX(' ', col) - CHARINDEX(' ',
SELECT * FROM table1 WHERE id IN (SELECT id FROM table2 WHERE id = 1)
SELECT * FROM your_table WHERE your_date_column = @your_date_
SELECT * FROM ( SELECT * FROM mytable WHERE description = 'test' AND description =
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
DELETE FROM your_table WHERE id IN (SELECT id FROM your_table WHERE name='
------------------
SQL: PL/SQL: PL/SQL: PL/SQL: PL/SQL:
INSERT INTO new_table (id, name, address, address, address, address,
..................
SELECT a.id, a.name, a.address, a.address, a
::::::::::::::::::
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG REG
MERGE INTO table1 AS t1 USING (SELECT * FROM table1) AS t2
..................
CREATE TABLE mytable ( col1 varchar(50) ); CREATE TABLE mytable ( col2
INSERT INTO new_table (id, name, new_column) SELECT id, name
SELECT a.id, a.name, a.address, a.address, a
CREATE INDEX [IX_INDEX_NAME] ON [dbo].[INDEX] (
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER

CREATE TABLE my_table ( id INT IDENTITY(1,1) PRIMARY KEY, name VARCHAR(
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.id =
SELECT * FROM your_table WHERE MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH MATCH
..................
<cfoutput name="file" value="C:\"> <cfoutput name="file
SELECT a.id, a.name, a.address, a.phone, a
SELECT school_name, school_name, student_name, student_name, student
ALTER TABLE RENAME COLUMN RENAME COLUMN RENAME COLUMN RENAME COLUMN RENAME COLUMN RE
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
::::::::::::::::::
SELECT a.id, a.name, a.address, a.phone, a
CREATE TABLE my_table ( my_column text ); CREATE TABLE my_table ( my
SELECT SUM(CASE WHEN WHEN = THEN THEN ELSE END) FROM your_table
MERGE INTO dbo.dbo.dbo.dbo.dbo.
UPDATE [dbo].[tbl_user] SET [user_id] = [
SELECT * FROM ( SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PART
SELECT * FROM table1 WHERE NOT EXISTS (SELECT 1 FROM table2 WHERE table1.id
SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (SELECT COUNT(DISTINCT (
SELECT * FROM table WHERE date_time >= DATE_SUB(NOW(), INTERVAL 1 DAY
nets_nets_nets_nets_nets_nets_
SELECT * FROM ( SELECT * FROM table1 WHERE id IN (SELECT id FROM table1)
SELECT * FROM ( SELECT * FROM mytable WHERE id = 1 ) x WHERE x.
SELECT CONVERT(DECIMAL(18,2), CONVERT(DECIMAL(18,
CREATE VIEW [dbo].[MyView] AS SELECT * FROM [dbo].
CREATE TRIGGER [dbo].[MyTable] ON [dbo].[My
SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id AND
(a,b,c,d,e,f,f,g,h
::::::::::::::::::
CREATE VIEW myview AS SELECT * FROM myview;
UPDATE A SET A.B = A.B FROM A INNER JOIN B ON A.
public void register(String name) { }
SELECT * FROM ( SELECT * FROM Table1 INNER JOIN Table2 ON Table1.ID =
SELECT * FROM mytable WHERE SUBSTR(column, 1, 1) LIKE '%[^0-9]
SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM ( SELECT TOP 1 * FROM (
SELECT * FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY ID ORDER
SELECT * FROM folders WHERE folders.folder_name = 'folder' AND folders.folder
SELECT * FROM ( SELECT * FROM Table1 WHERE ID = 1 UNION ALL SELECT *
SELECT a.a, a.b, a.c, a.d, a
UPDATE table1 SET table1.id = table2.id FROM table1 INNER JOIN table2
CREATE TABLE new_table ( id INT IDENTITY(1,1) PRIMARY KEY, name VARCHAR(
SELECT a.id, a.name, a.email, a.email, a
SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table1.column1
,,,,,,,,,,,,,,,,,,
SELECT * FROM Table1 WHERE DATEPART(YEAR, [Date]) = DATEPART(
..................
..................
SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT * FROM ( SELECT *
json_array(array(array(array(array(array(array(array(
SELECT * FROM ( SELECT * FROM table1 WHERE id = 1 UNION ALL SELECT *
UPDATE my_table SET my_column = replace(my_column, '[[:digit
SELECT COUNT(DISTINCT id) FROM mytable WHERE id IN (SELECT id FROM my
COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY COPY
CREATE INDEX idx_user_user_user_user_user_user_user_
SELECT a.id, a.name, a.address, a.address, a
SELECT [Date], [Date], [Value], [Group], [Group], [Group
..................
,,,,,,,,,,,,,,,,,,

SELECT * FROM (SELECT * FROM mytable ORDER BY (time_time_time_
IF(@@ROWCOUNT = 0)
SELECT a.id, a.name, a.address, a.address, a
SELECT COUNT(DIDIDIDIDIDIDIDIDIDIDIDIDIDIDI
